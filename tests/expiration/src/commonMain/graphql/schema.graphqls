type Query {
  user: User
  company: Company
  products: [Product]
  product(id: ID!): Product
  node(id: ID!): Node
  book: Book
  cachedBook: Book
  reader: Reader
  currentUserId: String
}

type User {
  name: String!
  email: String!
  admin: Boolean
}

type Company {
  id: ID!
}

interface Node {
  id: ID!
}

type Product implements Node {
  id: ID!
  name: String!
  price: Float!
  colors: [ProductColor]
}

union ProductColor = StandardColor | CustomColor

type StandardColor {
  color: Color
}

enum Color {
  BLACK
  WHITE
  RED
  GREEN
  BLUE
  ORANGE
}

type CustomColor {
  red: Int!
  green: Int!
  blue: Int!
}


type Book {
  title: String
  cachedTitle: String
}

type Reader {
  book: Book
}
