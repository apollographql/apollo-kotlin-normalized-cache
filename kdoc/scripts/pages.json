[{"name":"abstract val recordQueries: RecordQueries","description":"com.apollographql.cache.normalized.sql.internal.record.SqlRecordDatabase.recordQueries","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-sql-record-database/record-queries.html","searchKeys":["recordQueries","abstract val recordQueries: RecordQueries","com.apollographql.cache.normalized.sql.internal.record.SqlRecordDatabase.recordQueries"]},{"name":"class ApolloInitializer : Initializer<Unit> ","description":"com.apollographql.cache.normalized.sql.ApolloInitializer","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql/-apollo-initializer/index.html","searchKeys":["ApolloInitializer","class ApolloInitializer : Initializer<Unit> ","com.apollographql.cache.normalized.sql.ApolloInitializer"]},{"name":"class RecordQueries(driver: SqlDriver) : TransacterImpl","description":"com.apollographql.cache.normalized.sql.internal.record.RecordQueries","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-record-queries/index.html","searchKeys":["RecordQueries","class RecordQueries(driver: SqlDriver) : TransacterImpl","com.apollographql.cache.normalized.sql.internal.record.RecordQueries"]},{"name":"class SqlNormalizedCache","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCache","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql/-sql-normalized-cache/index.html","searchKeys":["SqlNormalizedCache","class SqlNormalizedCache","com.apollographql.cache.normalized.sql.SqlNormalizedCache"]},{"name":"const val VERSION: String","description":"com.apollographql.cache.normalized.sql.VERSION","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql/-v-e-r-s-i-o-n.html","searchKeys":["VERSION","const val VERSION: String","com.apollographql.cache.normalized.sql.VERSION"]},{"name":"constructor()","description":"com.apollographql.cache.normalized.sql.ApolloInitializer.ApolloInitializer","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql/-apollo-initializer/-apollo-initializer.html","searchKeys":["ApolloInitializer","constructor()","com.apollographql.cache.normalized.sql.ApolloInitializer.ApolloInitializer"]},{"name":"constructor(driver: SqlDriver)","description":"com.apollographql.cache.normalized.sql.internal.record.RecordQueries.RecordQueries","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-record-queries/-record-queries.html","searchKeys":["RecordQueries","constructor(driver: SqlDriver)","com.apollographql.cache.normalized.sql.internal.record.RecordQueries.RecordQueries"]},{"name":"constructor(key: String, record: ByteArray)","description":"com.apollographql.cache.normalized.sql.internal.record.SelectAllRecords.SelectAllRecords","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-select-all-records/-select-all-records.html","searchKeys":["SelectAllRecords","constructor(key: String, record: ByteArray)","com.apollographql.cache.normalized.sql.internal.record.SelectAllRecords.SelectAllRecords"]},{"name":"constructor(key: String, record: ByteArray)","description":"com.apollographql.cache.normalized.sql.internal.record.SelectRecords.SelectRecords","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-select-records/-select-records.html","searchKeys":["SelectRecords","constructor(key: String, record: ByteArray)","com.apollographql.cache.normalized.sql.internal.record.SelectRecords.SelectRecords"]},{"name":"constructor(key: String, record: ByteArray, updated_date: Long)","description":"com.apollographql.cache.normalized.sql.internal.record.Record.Record","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-record/-record.html","searchKeys":["Record","constructor(key: String, record: ByteArray, updated_date: Long)","com.apollographql.cache.normalized.sql.internal.record.Record.Record"]},{"name":"data class Record(val key: String, val record: ByteArray, val updated_date: Long)","description":"com.apollographql.cache.normalized.sql.internal.record.Record","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-record/index.html","searchKeys":["Record","data class Record(val key: String, val record: ByteArray, val updated_date: Long)","com.apollographql.cache.normalized.sql.internal.record.Record"]},{"name":"data class SelectAllRecords(val key: String, val record: ByteArray)","description":"com.apollographql.cache.normalized.sql.internal.record.SelectAllRecords","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-select-all-records/index.html","searchKeys":["SelectAllRecords","data class SelectAllRecords(val key: String, val record: ByteArray)","com.apollographql.cache.normalized.sql.internal.record.SelectAllRecords"]},{"name":"data class SelectRecords(val key: String, val record: ByteArray)","description":"com.apollographql.cache.normalized.sql.internal.record.SelectRecords","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-select-records/index.html","searchKeys":["SelectRecords","data class SelectRecords(val key: String, val record: ByteArray)","com.apollographql.cache.normalized.sql.internal.record.SelectRecords"]},{"name":"expect fun SqlNormalizedCacheFactory(driver: SqlDriver): <Error class: unknown class>","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCacheFactory","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql/-sql-normalized-cache-factory.html","searchKeys":["SqlNormalizedCacheFactory","expect fun SqlNormalizedCacheFactory(driver: SqlDriver): <Error class: unknown class>","com.apollographql.cache.normalized.sql.SqlNormalizedCacheFactory"]},{"name":"expect fun SqlNormalizedCacheFactory(name: String? = \"apollo.db\"): <Error class: unknown class>","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCacheFactory","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql/-sql-normalized-cache-factory.html","searchKeys":["SqlNormalizedCacheFactory","expect fun SqlNormalizedCacheFactory(name: String? = \"apollo.db\"): <Error class: unknown class>","com.apollographql.cache.normalized.sql.SqlNormalizedCacheFactory"]},{"name":"fun <T : Any> selectAllRecords(mapper: (key: String, record: ByteArray) -> T): Query<T>","description":"com.apollographql.cache.normalized.sql.internal.record.RecordQueries.selectAllRecords","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-record-queries/select-all-records.html","searchKeys":["selectAllRecords","fun <T : Any> selectAllRecords(mapper: (key: String, record: ByteArray) -> T): Query<T>","com.apollographql.cache.normalized.sql.internal.record.RecordQueries.selectAllRecords"]},{"name":"fun <T : Any> selectRecords(key: Collection<String>, mapper: (key: String, record: ByteArray) -> T): Query<T>","description":"com.apollographql.cache.normalized.sql.internal.record.RecordQueries.selectRecords","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-record-queries/select-records.html","searchKeys":["selectRecords","fun <T : Any> selectRecords(key: Collection<String>, mapper: (key: String, record: ByteArray) -> T): Query<T>","com.apollographql.cache.normalized.sql.internal.record.RecordQueries.selectRecords"]},{"name":"fun SqlNormalizedCacheFactory(context: Context, name: String? = \"apollo.db\", factory: SupportSQLiteOpenHelper.Factory = FrameworkSQLiteOpenHelperFactory(), configure: (SupportSQLiteDatabase) -> Unit? = null, useNoBackupDirectory: Boolean = false, windowSizeBytes: Long? = null): NormalizedCacheFactory","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCacheFactory","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql/-sql-normalized-cache-factory.html","searchKeys":["SqlNormalizedCacheFactory","fun SqlNormalizedCacheFactory(context: Context, name: String? = \"apollo.db\", factory: SupportSQLiteOpenHelper.Factory = FrameworkSQLiteOpenHelperFactory(), configure: (SupportSQLiteDatabase) -> Unit? = null, useNoBackupDirectory: Boolean = false, windowSizeBytes: Long? = null): NormalizedCacheFactory","com.apollographql.cache.normalized.sql.SqlNormalizedCacheFactory"]},{"name":"fun SqlNormalizedCacheFactory(name: String?, baseDir: String?): <Error class: unknown class>","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCacheFactory","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql/[apple]-sql-normalized-cache-factory.html","searchKeys":["SqlNormalizedCacheFactory","fun SqlNormalizedCacheFactory(name: String?, baseDir: String?): <Error class: unknown class>","com.apollographql.cache.normalized.sql.SqlNormalizedCacheFactory"]},{"name":"fun SqlNormalizedCacheFactory(name: String?, baseDir: String?): NormalizedCacheFactory","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCacheFactory","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql/[jvm]-sql-normalized-cache-factory.html","searchKeys":["SqlNormalizedCacheFactory","fun SqlNormalizedCacheFactory(name: String?, baseDir: String?): NormalizedCacheFactory","com.apollographql.cache.normalized.sql.SqlNormalizedCacheFactory"]},{"name":"fun SqlNormalizedCacheFactory(url: String, properties: Properties = Properties()): NormalizedCacheFactory","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCacheFactory","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql/-sql-normalized-cache-factory.html","searchKeys":["SqlNormalizedCacheFactory","fun SqlNormalizedCacheFactory(url: String, properties: Properties = Properties()): NormalizedCacheFactory","com.apollographql.cache.normalized.sql.SqlNormalizedCacheFactory"]},{"name":"fun changes(): ExecutableQuery<Long>","description":"com.apollographql.cache.normalized.sql.internal.record.RecordQueries.changes","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-record-queries/changes.html","searchKeys":["changes","fun changes(): ExecutableQuery<Long>","com.apollographql.cache.normalized.sql.internal.record.RecordQueries.changes"]},{"name":"fun count(): Query<Long>","description":"com.apollographql.cache.normalized.sql.internal.record.RecordQueries.count","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-record-queries/count.html","searchKeys":["count","fun count(): Query<Long>","com.apollographql.cache.normalized.sql.internal.record.RecordQueries.count"]},{"name":"fun deleteAllRecords()","description":"com.apollographql.cache.normalized.sql.internal.record.RecordQueries.deleteAllRecords","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-record-queries/delete-all-records.html","searchKeys":["deleteAllRecords","fun deleteAllRecords()","com.apollographql.cache.normalized.sql.internal.record.RecordQueries.deleteAllRecords"]},{"name":"fun deleteRecords(key: Collection<String>)","description":"com.apollographql.cache.normalized.sql.internal.record.RecordQueries.deleteRecords","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-record-queries/delete-records.html","searchKeys":["deleteRecords","fun deleteRecords(key: Collection<String>)","com.apollographql.cache.normalized.sql.internal.record.RecordQueries.deleteRecords"]},{"name":"fun insertOrUpdateRecord(key: String, record: ByteArray, updated_date: Long)","description":"com.apollographql.cache.normalized.sql.internal.record.RecordQueries.insertOrUpdateRecord","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-record-queries/insert-or-update-record.html","searchKeys":["insertOrUpdateRecord","fun insertOrUpdateRecord(key: String, record: ByteArray, updated_date: Long)","com.apollographql.cache.normalized.sql.internal.record.RecordQueries.insertOrUpdateRecord"]},{"name":"fun selectAllRecords(): Query<SelectAllRecords>","description":"com.apollographql.cache.normalized.sql.internal.record.RecordQueries.selectAllRecords","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-record-queries/select-all-records.html","searchKeys":["selectAllRecords","fun selectAllRecords(): Query<SelectAllRecords>","com.apollographql.cache.normalized.sql.internal.record.RecordQueries.selectAllRecords"]},{"name":"fun selectRecords(key: Collection<String>): Query<SelectRecords>","description":"com.apollographql.cache.normalized.sql.internal.record.RecordQueries.selectRecords","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-record-queries/select-records.html","searchKeys":["selectRecords","fun selectRecords(key: Collection<String>): Query<SelectRecords>","com.apollographql.cache.normalized.sql.internal.record.RecordQueries.selectRecords"]},{"name":"fun trimByUpdatedDate(value: Long)","description":"com.apollographql.cache.normalized.sql.internal.record.RecordQueries.trimByUpdatedDate","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-record-queries/trim-by-updated-date.html","searchKeys":["trimByUpdatedDate","fun trimByUpdatedDate(value: Long)","com.apollographql.cache.normalized.sql.internal.record.RecordQueries.trimByUpdatedDate"]},{"name":"interface SqlRecordDatabase : Transacter","description":"com.apollographql.cache.normalized.sql.internal.record.SqlRecordDatabase","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-sql-record-database/index.html","searchKeys":["SqlRecordDatabase","interface SqlRecordDatabase : Transacter","com.apollographql.cache.normalized.sql.internal.record.SqlRecordDatabase"]},{"name":"object Companion","description":"com.apollographql.cache.normalized.sql.ApolloInitializer.Companion","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql/-apollo-initializer/-companion/index.html","searchKeys":["Companion","object Companion","com.apollographql.cache.normalized.sql.ApolloInitializer.Companion"]},{"name":"object Companion","description":"com.apollographql.cache.normalized.sql.internal.record.SqlRecordDatabase.Companion","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-sql-record-database/-companion/index.html","searchKeys":["Companion","object Companion","com.apollographql.cache.normalized.sql.internal.record.SqlRecordDatabase.Companion"]},{"name":"open fun clearAll()","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCache.clearAll","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql/-sql-normalized-cache/clear-all.html","searchKeys":["clearAll","open fun clearAll()","com.apollographql.cache.normalized.sql.SqlNormalizedCache.clearAll"]},{"name":"open fun dump(): Map<KClass<*>, Map<<Error class: unknown class>, <Error class: unknown class>>>","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCache.dump","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql/-sql-normalized-cache/dump.html","searchKeys":["dump","open fun dump(): Map<KClass<*>, Map<<Error class: unknown class>, <Error class: unknown class>>>","com.apollographql.cache.normalized.sql.SqlNormalizedCache.dump"]},{"name":"open fun loadRecord(key: <Error class: unknown class>, cacheHeaders: <Error class: unknown class>): <Error class: unknown class>?","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCache.loadRecord","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql/-sql-normalized-cache/load-record.html","searchKeys":["loadRecord","open fun loadRecord(key: <Error class: unknown class>, cacheHeaders: <Error class: unknown class>): <Error class: unknown class>?","com.apollographql.cache.normalized.sql.SqlNormalizedCache.loadRecord"]},{"name":"open fun loadRecords(keys: Collection<<Error class: unknown class>>, cacheHeaders: <Error class: unknown class>): Collection<<Error class: unknown class>>","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCache.loadRecords","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql/-sql-normalized-cache/load-records.html","searchKeys":["loadRecords","open fun loadRecords(keys: Collection<<Error class: unknown class>>, cacheHeaders: <Error class: unknown class>): Collection<<Error class: unknown class>>","com.apollographql.cache.normalized.sql.SqlNormalizedCache.loadRecords"]},{"name":"open fun merge(record: <Error class: unknown class>, cacheHeaders: <Error class: unknown class>, recordMerger: <Error class: unknown class>): Set<String>","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCache.merge","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql/-sql-normalized-cache/merge.html","searchKeys":["merge","open fun merge(record: <Error class: unknown class>, cacheHeaders: <Error class: unknown class>, recordMerger: <Error class: unknown class>): Set<String>","com.apollographql.cache.normalized.sql.SqlNormalizedCache.merge"]},{"name":"open fun merge(records: Collection<<Error class: unknown class>>, cacheHeaders: <Error class: unknown class>, recordMerger: <Error class: unknown class>): Set<String>","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCache.merge","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql/-sql-normalized-cache/merge.html","searchKeys":["merge","open fun merge(records: Collection<<Error class: unknown class>>, cacheHeaders: <Error class: unknown class>, recordMerger: <Error class: unknown class>): Set<String>","com.apollographql.cache.normalized.sql.SqlNormalizedCache.merge"]},{"name":"open fun remove(cacheKey: <Error class: unknown class>, cascade: Boolean): Boolean","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCache.remove","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql/-sql-normalized-cache/remove.html","searchKeys":["remove","open fun remove(cacheKey: <Error class: unknown class>, cascade: Boolean): Boolean","com.apollographql.cache.normalized.sql.SqlNormalizedCache.remove"]},{"name":"open fun remove(cacheKeys: Collection<<Error class: unknown class>>, cascade: Boolean): Int","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCache.remove","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql/-sql-normalized-cache/remove.html","searchKeys":["remove","open fun remove(cacheKeys: Collection<<Error class: unknown class>>, cascade: Boolean): Int","com.apollographql.cache.normalized.sql.SqlNormalizedCache.remove"]},{"name":"open fun trim(maxSizeBytes: Long, trimFactor: Float): Long","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCache.trim","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql/-sql-normalized-cache/trim.html","searchKeys":["trim","open fun trim(maxSizeBytes: Long, trimFactor: Float): Long","com.apollographql.cache.normalized.sql.SqlNormalizedCache.trim"]},{"name":"open override fun create(context: Context)","description":"com.apollographql.cache.normalized.sql.ApolloInitializer.create","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql/-apollo-initializer/create.html","searchKeys":["create","open override fun create(context: Context)","com.apollographql.cache.normalized.sql.ApolloInitializer.create"]},{"name":"open override fun dependencies(): MutableList<Class<out Initializer<*>>>","description":"com.apollographql.cache.normalized.sql.ApolloInitializer.dependencies","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql/-apollo-initializer/dependencies.html","searchKeys":["dependencies","open override fun dependencies(): MutableList<Class<out Initializer<*>>>","com.apollographql.cache.normalized.sql.ApolloInitializer.dependencies"]},{"name":"operator fun invoke(driver: SqlDriver): SqlRecordDatabase","description":"com.apollographql.cache.normalized.sql.internal.record.SqlRecordDatabase.Companion.invoke","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-sql-record-database/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(driver: SqlDriver): SqlRecordDatabase","com.apollographql.cache.normalized.sql.internal.record.SqlRecordDatabase.Companion.invoke"]},{"name":"val Schema: SqlSchema<QueryResult.Value<Unit>>","description":"com.apollographql.cache.normalized.sql.internal.record.SqlRecordDatabase.Companion.Schema","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-sql-record-database/-companion/-schema.html","searchKeys":["Schema","val Schema: SqlSchema<QueryResult.Value<Unit>>","com.apollographql.cache.normalized.sql.internal.record.SqlRecordDatabase.Companion.Schema"]},{"name":"val key: String","description":"com.apollographql.cache.normalized.sql.internal.record.Record.key","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-record/key.html","searchKeys":["key","val key: String","com.apollographql.cache.normalized.sql.internal.record.Record.key"]},{"name":"val key: String","description":"com.apollographql.cache.normalized.sql.internal.record.SelectAllRecords.key","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-select-all-records/key.html","searchKeys":["key","val key: String","com.apollographql.cache.normalized.sql.internal.record.SelectAllRecords.key"]},{"name":"val key: String","description":"com.apollographql.cache.normalized.sql.internal.record.SelectRecords.key","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-select-records/key.html","searchKeys":["key","val key: String","com.apollographql.cache.normalized.sql.internal.record.SelectRecords.key"]},{"name":"val record: ByteArray","description":"com.apollographql.cache.normalized.sql.internal.record.Record.record","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-record/record.html","searchKeys":["record","val record: ByteArray","com.apollographql.cache.normalized.sql.internal.record.Record.record"]},{"name":"val record: ByteArray","description":"com.apollographql.cache.normalized.sql.internal.record.SelectAllRecords.record","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-select-all-records/record.html","searchKeys":["record","val record: ByteArray","com.apollographql.cache.normalized.sql.internal.record.SelectAllRecords.record"]},{"name":"val record: ByteArray","description":"com.apollographql.cache.normalized.sql.internal.record.SelectRecords.record","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-select-records/record.html","searchKeys":["record","val record: ByteArray","com.apollographql.cache.normalized.sql.internal.record.SelectRecords.record"]},{"name":"val updated_date: Long","description":"com.apollographql.cache.normalized.sql.internal.record.Record.updated_date","location":"normalized-cache-sqlite/com.apollographql.cache.normalized.sql.internal.record/-record/updated_date.html","searchKeys":["updated_date","val updated_date: Long","com.apollographql.cache.normalized.sql.internal.record.Record.updated_date"]},{"name":"class ApolloCacheCompilerPluginProvider : ApolloCompilerPluginProvider","description":"com.apollographql.cache.apollocompilerplugin.ApolloCacheCompilerPluginProvider","location":"normalized-cache-apollo-compiler-plugin/com.apollographql.cache.apollocompilerplugin/-apollo-cache-compiler-plugin-provider/index.html","searchKeys":["ApolloCacheCompilerPluginProvider","class ApolloCacheCompilerPluginProvider : ApolloCompilerPluginProvider","com.apollographql.cache.apollocompilerplugin.ApolloCacheCompilerPluginProvider"]},{"name":"const val VERSION: String","description":"com.apollographql.cache.apollocompilerplugin.VERSION","location":"normalized-cache-apollo-compiler-plugin/com.apollographql.cache.apollocompilerplugin/-v-e-r-s-i-o-n.html","searchKeys":["VERSION","const val VERSION: String","com.apollographql.cache.apollocompilerplugin.VERSION"]},{"name":"constructor()","description":"com.apollographql.cache.apollocompilerplugin.ApolloCacheCompilerPluginProvider.ApolloCacheCompilerPluginProvider","location":"normalized-cache-apollo-compiler-plugin/com.apollographql.cache.apollocompilerplugin/-apollo-cache-compiler-plugin-provider/-apollo-cache-compiler-plugin-provider.html","searchKeys":["ApolloCacheCompilerPluginProvider","constructor()","com.apollographql.cache.apollocompilerplugin.ApolloCacheCompilerPluginProvider.ApolloCacheCompilerPluginProvider"]},{"name":"open override fun create(environment: ApolloCompilerPluginEnvironment): ApolloCompilerPlugin","description":"com.apollographql.cache.apollocompilerplugin.ApolloCacheCompilerPluginProvider.create","location":"normalized-cache-apollo-compiler-plugin/com.apollographql.cache.apollocompilerplugin/-apollo-cache-compiler-plugin-provider/create.html","searchKeys":["create","open override fun create(environment: ApolloCompilerPluginEnvironment): ApolloCompilerPlugin","com.apollographql.cache.apollocompilerplugin.ApolloCacheCompilerPluginProvider.create"]},{"name":"CacheAndNetwork","description":"com.apollographql.cache.normalized.FetchPolicy.CacheAndNetwork","location":"normalized-cache/com.apollographql.cache.normalized/-fetch-policy/-cache-and-network/index.html","searchKeys":["CacheAndNetwork","CacheAndNetwork","com.apollographql.cache.normalized.FetchPolicy.CacheAndNetwork"]},{"name":"CacheFirst","description":"com.apollographql.cache.normalized.FetchPolicy.CacheFirst","location":"normalized-cache/com.apollographql.cache.normalized/-fetch-policy/-cache-first/index.html","searchKeys":["CacheFirst","CacheFirst","com.apollographql.cache.normalized.FetchPolicy.CacheFirst"]},{"name":"CacheOnly","description":"com.apollographql.cache.normalized.FetchPolicy.CacheOnly","location":"normalized-cache/com.apollographql.cache.normalized/-fetch-policy/-cache-only/index.html","searchKeys":["CacheOnly","CacheOnly","com.apollographql.cache.normalized.FetchPolicy.CacheOnly"]},{"name":"NetworkFirst","description":"com.apollographql.cache.normalized.FetchPolicy.NetworkFirst","location":"normalized-cache/com.apollographql.cache.normalized/-fetch-policy/-network-first/index.html","searchKeys":["NetworkFirst","NetworkFirst","com.apollographql.cache.normalized.FetchPolicy.NetworkFirst"]},{"name":"NetworkOnly","description":"com.apollographql.cache.normalized.FetchPolicy.NetworkOnly","location":"normalized-cache/com.apollographql.cache.normalized/-fetch-policy/-network-only/index.html","searchKeys":["NetworkOnly","NetworkOnly","com.apollographql.cache.normalized.FetchPolicy.NetworkOnly"]},{"name":"abstract class CacheKeyResolver : CacheResolver","description":"com.apollographql.cache.normalized.api.CacheKeyResolver","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-key-resolver/index.html","searchKeys":["CacheKeyResolver","abstract class CacheKeyResolver : CacheResolver","com.apollographql.cache.normalized.api.CacheKeyResolver"]},{"name":"abstract class NormalizedCacheFactory","description":"com.apollographql.cache.normalized.api.NormalizedCacheFactory","location":"normalized-cache/com.apollographql.cache.normalized.api/-normalized-cache-factory/index.html","searchKeys":["NormalizedCacheFactory","abstract class NormalizedCacheFactory","com.apollographql.cache.normalized.api.NormalizedCacheFactory"]},{"name":"abstract fun <D : Executable.Data> normalize(executable: Executable<D>, dataWithErrors: DataWithErrors, rootKey: CacheKey = CacheKey.QUERY_ROOT, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty): Map<CacheKey, Record>","description":"com.apollographql.cache.normalized.CacheManager.normalize","location":"normalized-cache/com.apollographql.cache.normalized/-cache-manager/normalize.html","searchKeys":["normalize","abstract fun <D : Executable.Data> normalize(executable: Executable<D>, dataWithErrors: DataWithErrors, rootKey: CacheKey = CacheKey.QUERY_ROOT, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty): Map<CacheKey, Record>","com.apollographql.cache.normalized.CacheManager.normalize"]},{"name":"abstract fun <D : Fragment.Data> readFragment(fragment: Fragment<D>, cacheKey: CacheKey, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty, cacheHeaders: CacheHeaders = CacheHeaders.NONE): CacheManager.ReadResult<D>","description":"com.apollographql.cache.normalized.CacheManager.readFragment","location":"normalized-cache/com.apollographql.cache.normalized/-cache-manager/read-fragment.html","searchKeys":["readFragment","abstract fun <D : Fragment.Data> readFragment(fragment: Fragment<D>, cacheKey: CacheKey, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty, cacheHeaders: CacheHeaders = CacheHeaders.NONE): CacheManager.ReadResult<D>","com.apollographql.cache.normalized.CacheManager.readFragment"]},{"name":"abstract fun <D : Fragment.Data> writeFragment(fragment: Fragment<D>, cacheKey: CacheKey, data: D, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty, cacheHeaders: CacheHeaders = CacheHeaders.NONE): Set<String>","description":"com.apollographql.cache.normalized.CacheManager.writeFragment","location":"normalized-cache/com.apollographql.cache.normalized/-cache-manager/write-fragment.html","searchKeys":["writeFragment","abstract fun <D : Fragment.Data> writeFragment(fragment: Fragment<D>, cacheKey: CacheKey, data: D, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty, cacheHeaders: CacheHeaders = CacheHeaders.NONE): Set<String>","com.apollographql.cache.normalized.CacheManager.writeFragment"]},{"name":"abstract fun <D : Fragment.Data> writeOptimisticUpdates(fragment: Fragment<D>, cacheKey: CacheKey, data: D, mutationId: Uuid, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty): Set<String>","description":"com.apollographql.cache.normalized.CacheManager.writeOptimisticUpdates","location":"normalized-cache/com.apollographql.cache.normalized/-cache-manager/write-optimistic-updates.html","searchKeys":["writeOptimisticUpdates","abstract fun <D : Fragment.Data> writeOptimisticUpdates(fragment: Fragment<D>, cacheKey: CacheKey, data: D, mutationId: Uuid, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty): Set<String>","com.apollographql.cache.normalized.CacheManager.writeOptimisticUpdates"]},{"name":"abstract fun <D : Operation.Data> readOperation(operation: Operation<D>, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty, cacheHeaders: CacheHeaders = CacheHeaders.NONE): ApolloResponse<D>","description":"com.apollographql.cache.normalized.CacheManager.readOperation","location":"normalized-cache/com.apollographql.cache.normalized/-cache-manager/read-operation.html","searchKeys":["readOperation","abstract fun <D : Operation.Data> readOperation(operation: Operation<D>, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty, cacheHeaders: CacheHeaders = CacheHeaders.NONE): ApolloResponse<D>","com.apollographql.cache.normalized.CacheManager.readOperation"]},{"name":"abstract fun <D : Operation.Data> writeOperation(operation: Operation<D>, data: D, errors: List<Error>? = null, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty, cacheHeaders: CacheHeaders = CacheHeaders.NONE): Set<String>","description":"com.apollographql.cache.normalized.CacheManager.writeOperation","location":"normalized-cache/com.apollographql.cache.normalized/-cache-manager/write-operation.html","searchKeys":["writeOperation","abstract fun <D : Operation.Data> writeOperation(operation: Operation<D>, data: D, errors: List<Error>? = null, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty, cacheHeaders: CacheHeaders = CacheHeaders.NONE): Set<String>","com.apollographql.cache.normalized.CacheManager.writeOperation"]},{"name":"abstract fun <D : Operation.Data> writeOperation(operation: Operation<D>, dataWithErrors: DataWithErrors, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty, cacheHeaders: CacheHeaders = CacheHeaders.NONE): Set<String>","description":"com.apollographql.cache.normalized.CacheManager.writeOperation","location":"normalized-cache/com.apollographql.cache.normalized/-cache-manager/write-operation.html","searchKeys":["writeOperation","abstract fun <D : Operation.Data> writeOperation(operation: Operation<D>, dataWithErrors: DataWithErrors, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty, cacheHeaders: CacheHeaders = CacheHeaders.NONE): Set<String>","com.apollographql.cache.normalized.CacheManager.writeOperation"]},{"name":"abstract fun <D : Operation.Data> writeOptimisticUpdates(operation: Operation<D>, data: D, mutationId: Uuid, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty): Set<String>","description":"com.apollographql.cache.normalized.CacheManager.writeOptimisticUpdates","location":"normalized-cache/com.apollographql.cache.normalized/-cache-manager/write-optimistic-updates.html","searchKeys":["writeOptimisticUpdates","abstract fun <D : Operation.Data> writeOptimisticUpdates(operation: Operation<D>, data: D, mutationId: Uuid, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty): Set<String>","com.apollographql.cache.normalized.CacheManager.writeOptimisticUpdates"]},{"name":"abstract fun <R> accessCache(block: (NormalizedCache) -> R): R","description":"com.apollographql.cache.normalized.CacheManager.accessCache","location":"normalized-cache/com.apollographql.cache.normalized/-cache-manager/access-cache.html","searchKeys":["accessCache","abstract fun <R> accessCache(block: (NormalizedCache) -> R): R","com.apollographql.cache.normalized.CacheManager.accessCache"]},{"name":"abstract fun cacheKeyForField(context: ResolverContext): CacheKey?","description":"com.apollographql.cache.normalized.api.CacheKeyResolver.cacheKeyForField","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-key-resolver/cache-key-for-field.html","searchKeys":["cacheKeyForField","abstract fun cacheKeyForField(context: ResolverContext): CacheKey?","com.apollographql.cache.normalized.api.CacheKeyResolver.cacheKeyForField"]},{"name":"abstract fun cacheKeyForObject(obj: Map<String, Any?>, context: CacheKeyGeneratorContext): CacheKey?","description":"com.apollographql.cache.normalized.api.CacheKeyGenerator.cacheKeyForObject","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-key-generator/cache-key-for-object.html","searchKeys":["cacheKeyForObject","abstract fun cacheKeyForObject(obj: Map<String, Any?>, context: CacheKeyGeneratorContext): CacheKey?","com.apollographql.cache.normalized.api.CacheKeyGenerator.cacheKeyForObject"]},{"name":"abstract fun clearAll()","description":"com.apollographql.cache.normalized.api.NormalizedCache.clearAll","location":"normalized-cache/com.apollographql.cache.normalized.api/-normalized-cache/clear-all.html","searchKeys":["clearAll","abstract fun clearAll()","com.apollographql.cache.normalized.api.NormalizedCache.clearAll"]},{"name":"abstract fun clearAll(): Boolean","description":"com.apollographql.cache.normalized.CacheManager.clearAll","location":"normalized-cache/com.apollographql.cache.normalized/-cache-manager/clear-all.html","searchKeys":["clearAll","abstract fun clearAll(): Boolean","com.apollographql.cache.normalized.CacheManager.clearAll"]},{"name":"abstract fun create(): NormalizedCache","description":"com.apollographql.cache.normalized.api.NormalizedCacheFactory.create","location":"normalized-cache/com.apollographql.cache.normalized.api/-normalized-cache-factory/create.html","searchKeys":["create","abstract fun create(): NormalizedCache","com.apollographql.cache.normalized.api.NormalizedCacheFactory.create"]},{"name":"abstract fun dispose()","description":"com.apollographql.cache.normalized.CacheManager.dispose","location":"normalized-cache/com.apollographql.cache.normalized/-cache-manager/dispose.html","searchKeys":["dispose","abstract fun dispose()","com.apollographql.cache.normalized.CacheManager.dispose"]},{"name":"abstract fun dump(): Map<KClass<*>, Map<CacheKey, Record>>","description":"com.apollographql.cache.normalized.CacheManager.dump","location":"normalized-cache/com.apollographql.cache.normalized/-cache-manager/dump.html","searchKeys":["dump","abstract fun dump(): Map<KClass<*>, Map<CacheKey, Record>>","com.apollographql.cache.normalized.CacheManager.dump"]},{"name":"abstract fun dump(): Map<KClass<*>, Map<CacheKey, Record>>","description":"com.apollographql.cache.normalized.api.ReadOnlyNormalizedCache.dump","location":"normalized-cache/com.apollographql.cache.normalized.api/-read-only-normalized-cache/dump.html","searchKeys":["dump","abstract fun dump(): Map<KClass<*>, Map<CacheKey, Record>>","com.apollographql.cache.normalized.api.ReadOnlyNormalizedCache.dump"]},{"name":"abstract fun getEmbeddedFields(context: EmbeddedFieldsContext): List<String>","description":"com.apollographql.cache.normalized.api.EmbeddedFieldsProvider.getEmbeddedFields","location":"normalized-cache/com.apollographql.cache.normalized.api/-embedded-fields-provider/get-embedded-fields.html","searchKeys":["getEmbeddedFields","abstract fun getEmbeddedFields(context: EmbeddedFieldsContext): List<String>","com.apollographql.cache.normalized.api.EmbeddedFieldsProvider.getEmbeddedFields"]},{"name":"abstract fun getFieldKey(context: FieldKeyContext): String","description":"com.apollographql.cache.normalized.api.FieldKeyGenerator.getFieldKey","location":"normalized-cache/com.apollographql.cache.normalized.api/-field-key-generator/get-field-key.html","searchKeys":["getFieldKey","abstract fun getFieldKey(context: FieldKeyContext): String","com.apollographql.cache.normalized.api.FieldKeyGenerator.getFieldKey"]},{"name":"abstract fun getMaxAge(maxAgeContext: MaxAgeContext): Duration","description":"com.apollographql.cache.normalized.api.MaxAgeProvider.getMaxAge","location":"normalized-cache/com.apollographql.cache.normalized.api/-max-age-provider/get-max-age.html","searchKeys":["getMaxAge","abstract fun getMaxAge(maxAgeContext: MaxAgeContext): Duration","com.apollographql.cache.normalized.api.MaxAgeProvider.getMaxAge"]},{"name":"abstract fun loadRecord(key: CacheKey, cacheHeaders: CacheHeaders): Record?","description":"com.apollographql.cache.normalized.api.ReadOnlyNormalizedCache.loadRecord","location":"normalized-cache/com.apollographql.cache.normalized.api/-read-only-normalized-cache/load-record.html","searchKeys":["loadRecord","abstract fun loadRecord(key: CacheKey, cacheHeaders: CacheHeaders): Record?","com.apollographql.cache.normalized.api.ReadOnlyNormalizedCache.loadRecord"]},{"name":"abstract fun loadRecords(keys: Collection<CacheKey>, cacheHeaders: CacheHeaders): Collection<Record>","description":"com.apollographql.cache.normalized.api.ReadOnlyNormalizedCache.loadRecords","location":"normalized-cache/com.apollographql.cache.normalized.api/-read-only-normalized-cache/load-records.html","searchKeys":["loadRecords","abstract fun loadRecords(keys: Collection<CacheKey>, cacheHeaders: CacheHeaders): Collection<Record>","com.apollographql.cache.normalized.api.ReadOnlyNormalizedCache.loadRecords"]},{"name":"abstract fun merge(context: RecordMergerContext): Pair<Record, Set<String>>","description":"com.apollographql.cache.normalized.api.RecordMerger.merge","location":"normalized-cache/com.apollographql.cache.normalized.api/-record-merger/merge.html","searchKeys":["merge","abstract fun merge(context: RecordMergerContext): Pair<Record, Set<String>>","com.apollographql.cache.normalized.api.RecordMerger.merge"]},{"name":"abstract fun merge(record: Record, cacheHeaders: CacheHeaders, recordMerger: RecordMerger): Set<String>","description":"com.apollographql.cache.normalized.api.NormalizedCache.merge","location":"normalized-cache/com.apollographql.cache.normalized.api/-normalized-cache/merge.html","searchKeys":["merge","abstract fun merge(record: Record, cacheHeaders: CacheHeaders, recordMerger: RecordMerger): Set<String>","com.apollographql.cache.normalized.api.NormalizedCache.merge"]},{"name":"abstract fun merge(records: Collection<Record>, cacheHeaders: CacheHeaders, recordMerger: RecordMerger): Set<String>","description":"com.apollographql.cache.normalized.api.NormalizedCache.merge","location":"normalized-cache/com.apollographql.cache.normalized.api/-normalized-cache/merge.html","searchKeys":["merge","abstract fun merge(records: Collection<Record>, cacheHeaders: CacheHeaders, recordMerger: RecordMerger): Set<String>","com.apollographql.cache.normalized.api.NormalizedCache.merge"]},{"name":"abstract fun mergeFields(existing: FieldRecordMerger.FieldInfo, incoming: FieldRecordMerger.FieldInfo): FieldRecordMerger.FieldInfo","description":"com.apollographql.cache.normalized.api.FieldRecordMerger.FieldMerger.mergeFields","location":"normalized-cache/com.apollographql.cache.normalized.api/-field-record-merger/-field-merger/merge-fields.html","searchKeys":["mergeFields","abstract fun mergeFields(existing: FieldRecordMerger.FieldInfo, incoming: FieldRecordMerger.FieldInfo): FieldRecordMerger.FieldInfo","com.apollographql.cache.normalized.api.FieldRecordMerger.FieldMerger.mergeFields"]},{"name":"abstract fun metadataForObject(obj: ApolloJsonElement, context: MetadataGeneratorContext): Map<String, ApolloJsonElement>","description":"com.apollographql.cache.normalized.api.MetadataGenerator.metadataForObject","location":"normalized-cache/com.apollographql.cache.normalized.api/-metadata-generator/metadata-for-object.html","searchKeys":["metadataForObject","abstract fun metadataForObject(obj: ApolloJsonElement, context: MetadataGeneratorContext): Map<String, ApolloJsonElement>","com.apollographql.cache.normalized.api.MetadataGenerator.metadataForObject"]},{"name":"abstract fun remove(cacheKey: CacheKey, cascade: Boolean = true): Boolean","description":"com.apollographql.cache.normalized.CacheManager.remove","location":"normalized-cache/com.apollographql.cache.normalized/-cache-manager/remove.html","searchKeys":["remove","abstract fun remove(cacheKey: CacheKey, cascade: Boolean = true): Boolean","com.apollographql.cache.normalized.CacheManager.remove"]},{"name":"abstract fun remove(cacheKey: CacheKey, cascade: Boolean): Boolean","description":"com.apollographql.cache.normalized.api.NormalizedCache.remove","location":"normalized-cache/com.apollographql.cache.normalized.api/-normalized-cache/remove.html","searchKeys":["remove","abstract fun remove(cacheKey: CacheKey, cascade: Boolean): Boolean","com.apollographql.cache.normalized.api.NormalizedCache.remove"]},{"name":"abstract fun remove(cacheKeys: Collection<CacheKey>, cascade: Boolean): Int","description":"com.apollographql.cache.normalized.api.NormalizedCache.remove","location":"normalized-cache/com.apollographql.cache.normalized.api/-normalized-cache/remove.html","searchKeys":["remove","abstract fun remove(cacheKeys: Collection<CacheKey>, cascade: Boolean): Int","com.apollographql.cache.normalized.api.NormalizedCache.remove"]},{"name":"abstract fun remove(cacheKeys: List<CacheKey>, cascade: Boolean = true): Int","description":"com.apollographql.cache.normalized.CacheManager.remove","location":"normalized-cache/com.apollographql.cache.normalized/-cache-manager/remove.html","searchKeys":["remove","abstract fun remove(cacheKeys: List<CacheKey>, cascade: Boolean = true): Int","com.apollographql.cache.normalized.CacheManager.remove"]},{"name":"abstract fun resolveField(context: ResolverContext): Any?","description":"com.apollographql.cache.normalized.api.CacheResolver.resolveField","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-resolver/resolve-field.html","searchKeys":["resolveField","abstract fun resolveField(context: ResolverContext): Any?","com.apollographql.cache.normalized.api.CacheResolver.resolveField"]},{"name":"abstract fun rollbackOptimisticUpdates(mutationId: Uuid): Set<String>","description":"com.apollographql.cache.normalized.CacheManager.rollbackOptimisticUpdates","location":"normalized-cache/com.apollographql.cache.normalized/-cache-manager/rollback-optimistic-updates.html","searchKeys":["rollbackOptimisticUpdates","abstract fun rollbackOptimisticUpdates(mutationId: Uuid): Set<String>","com.apollographql.cache.normalized.CacheManager.rollbackOptimisticUpdates"]},{"name":"abstract fun trim(maxSizeBytes: Long, trimFactor: Float = 0.1f): Long","description":"com.apollographql.cache.normalized.CacheManager.trim","location":"normalized-cache/com.apollographql.cache.normalized/-cache-manager/trim.html","searchKeys":["trim","abstract fun trim(maxSizeBytes: Long, trimFactor: Float = 0.1f): Long","com.apollographql.cache.normalized.CacheManager.trim"]},{"name":"abstract suspend fun publish(keys: Set<String>)","description":"com.apollographql.cache.normalized.CacheManager.publish","location":"normalized-cache/com.apollographql.cache.normalized/-cache-manager/publish.html","searchKeys":["publish","abstract suspend fun publish(keys: Set<String>)","com.apollographql.cache.normalized.CacheManager.publish"]},{"name":"abstract val changedKeys: SharedFlow<Set<String>>","description":"com.apollographql.cache.normalized.CacheManager.changedKeys","location":"normalized-cache/com.apollographql.cache.normalized/-cache-manager/changed-keys.html","searchKeys":["changedKeys","abstract val changedKeys: SharedFlow<Set<String>>","com.apollographql.cache.normalized.CacheManager.changedKeys"]},{"name":"class ApolloStore(val cacheManager: CacheManager, val customScalarAdapters: CustomScalarAdapters)","description":"com.apollographql.cache.normalized.ApolloStore","location":"normalized-cache/com.apollographql.cache.normalized/-apollo-store/index.html","searchKeys":["ApolloStore","class ApolloStore(val cacheManager: CacheManager, val customScalarAdapters: CustomScalarAdapters)","com.apollographql.cache.normalized.ApolloStore"]},{"name":"class Builder","description":"com.apollographql.cache.normalized.CacheInfo.Builder","location":"normalized-cache/com.apollographql.cache.normalized/-cache-info/-builder/index.html","searchKeys":["Builder","class Builder","com.apollographql.cache.normalized.CacheInfo.Builder"]},{"name":"class Builder","description":"com.apollographql.cache.normalized.api.CacheHeaders.Builder","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-headers/-builder/index.html","searchKeys":["Builder","class Builder","com.apollographql.cache.normalized.api.CacheHeaders.Builder"]},{"name":"class CacheControlCacheResolver(maxAgeProvider: MaxAgeProvider, delegateResolver: CacheResolver = FieldPolicyCacheResolver) : CacheResolver","description":"com.apollographql.cache.normalized.api.CacheControlCacheResolver","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-control-cache-resolver/index.html","searchKeys":["CacheControlCacheResolver","class CacheControlCacheResolver(maxAgeProvider: MaxAgeProvider, delegateResolver: CacheResolver = FieldPolicyCacheResolver) : CacheResolver","com.apollographql.cache.normalized.api.CacheControlCacheResolver"]},{"name":"class CacheHeaders","description":"com.apollographql.cache.normalized.api.CacheHeaders","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-headers/index.html","searchKeys":["CacheHeaders","class CacheHeaders","com.apollographql.cache.normalized.api.CacheHeaders"]},{"name":"class CacheInfo : ExecutionContext.Element","description":"com.apollographql.cache.normalized.CacheInfo","location":"normalized-cache/com.apollographql.cache.normalized/-cache-info/index.html","searchKeys":["CacheInfo","class CacheInfo : ExecutionContext.Element","com.apollographql.cache.normalized.CacheInfo"]},{"name":"class CacheKeyGeneratorContext(val field: CompiledField, val variables: Executable.Variables)","description":"com.apollographql.cache.normalized.api.CacheKeyGeneratorContext","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-key-generator-context/index.html","searchKeys":["CacheKeyGeneratorContext","class CacheKeyGeneratorContext(val field: CompiledField, val variables: Executable.Variables)","com.apollographql.cache.normalized.api.CacheKeyGeneratorContext"]},{"name":"class CacheMissLoggingInterceptor(log: (String) -> Unit) : ApolloInterceptor","description":"com.apollographql.cache.normalized.CacheMissLoggingInterceptor","location":"normalized-cache/com.apollographql.cache.normalized/-cache-miss-logging-interceptor/index.html","searchKeys":["CacheMissLoggingInterceptor","class CacheMissLoggingInterceptor(log: (String) -> Unit) : ApolloInterceptor","com.apollographql.cache.normalized.CacheMissLoggingInterceptor"]},{"name":"class ConnectionEmbeddedFieldsProvider(connectionFields: Map<String, List<String>>, connectionTypes: Set<String>) : EmbeddedFieldsProvider","description":"com.apollographql.cache.normalized.api.ConnectionEmbeddedFieldsProvider","location":"normalized-cache/com.apollographql.cache.normalized.api/-connection-embedded-fields-provider/index.html","searchKeys":["ConnectionEmbeddedFieldsProvider","class ConnectionEmbeddedFieldsProvider(connectionFields: Map<String, List<String>>, connectionTypes: Set<String>) : EmbeddedFieldsProvider","com.apollographql.cache.normalized.api.ConnectionEmbeddedFieldsProvider"]},{"name":"class ConnectionFieldKeyGenerator(connectionFields: Map<String, List<String>>) : FieldKeyGenerator","description":"com.apollographql.cache.normalized.api.ConnectionFieldKeyGenerator","location":"normalized-cache/com.apollographql.cache.normalized.api/-connection-field-key-generator/index.html","searchKeys":["ConnectionFieldKeyGenerator","class ConnectionFieldKeyGenerator(connectionFields: Map<String, List<String>>) : FieldKeyGenerator","com.apollographql.cache.normalized.api.ConnectionFieldKeyGenerator"]},{"name":"class ConnectionMetadataGenerator(connectionTypes: Set<String>) : MetadataGenerator","description":"com.apollographql.cache.normalized.api.ConnectionMetadataGenerator","location":"normalized-cache/com.apollographql.cache.normalized.api/-connection-metadata-generator/index.html","searchKeys":["ConnectionMetadataGenerator","class ConnectionMetadataGenerator(connectionTypes: Set<String>) : MetadataGenerator","com.apollographql.cache.normalized.api.ConnectionMetadataGenerator"]},{"name":"class Duration(val duration: Duration) : MaxAge","description":"com.apollographql.cache.normalized.api.MaxAge.Duration","location":"normalized-cache/com.apollographql.cache.normalized.api/-max-age/-duration/index.html","searchKeys":["Duration","class Duration(val duration: Duration) : MaxAge","com.apollographql.cache.normalized.api.MaxAge.Duration"]},{"name":"class EmbeddedFieldsContext(val parentType: CompiledNamedType)","description":"com.apollographql.cache.normalized.api.EmbeddedFieldsContext","location":"normalized-cache/com.apollographql.cache.normalized.api/-embedded-fields-context/index.html","searchKeys":["EmbeddedFieldsContext","class EmbeddedFieldsContext(val parentType: CompiledNamedType)","com.apollographql.cache.normalized.api.EmbeddedFieldsContext"]},{"name":"class Field(val name: String, val type: MaxAgeContext.Type)","description":"com.apollographql.cache.normalized.api.MaxAgeContext.Field","location":"normalized-cache/com.apollographql.cache.normalized.api/-max-age-context/-field/index.html","searchKeys":["Field","class Field(val name: String, val type: MaxAgeContext.Type)","com.apollographql.cache.normalized.api.MaxAgeContext.Field"]},{"name":"class FieldKeyContext(val parentType: String, val field: CompiledField, val variables: Executable.Variables)","description":"com.apollographql.cache.normalized.api.FieldKeyContext","location":"normalized-cache/com.apollographql.cache.normalized.api/-field-key-context/index.html","searchKeys":["FieldKeyContext","class FieldKeyContext(val parentType: String, val field: CompiledField, val variables: Executable.Variables)","com.apollographql.cache.normalized.api.FieldKeyContext"]},{"name":"class FieldRecordMerger(fieldMerger: FieldRecordMerger.FieldMerger) : RecordMerger","description":"com.apollographql.cache.normalized.api.FieldRecordMerger","location":"normalized-cache/com.apollographql.cache.normalized.api/-field-record-merger/index.html","searchKeys":["FieldRecordMerger","class FieldRecordMerger(fieldMerger: FieldRecordMerger.FieldMerger) : RecordMerger","com.apollographql.cache.normalized.api.FieldRecordMerger"]},{"name":"class GarbageCollectResult(val removedStaleFields: RemovedFieldsAndRecords, val removedDanglingReferences: RemovedFieldsAndRecords, val removedUnreachableRecords: Set<CacheKey>)","description":"com.apollographql.cache.normalized.GarbageCollectResult","location":"normalized-cache/com.apollographql.cache.normalized/-garbage-collect-result/index.html","searchKeys":["GarbageCollectResult","class GarbageCollectResult(val removedStaleFields: RemovedFieldsAndRecords, val removedDanglingReferences: RemovedFieldsAndRecords, val removedUnreachableRecords: Set<CacheKey>)","com.apollographql.cache.normalized.GarbageCollectResult"]},{"name":"class GlobalMaxAgeProvider(maxAge: Duration) : MaxAgeProvider","description":"com.apollographql.cache.normalized.api.GlobalMaxAgeProvider","location":"normalized-cache/com.apollographql.cache.normalized.api/-global-max-age-provider/index.html","searchKeys":["GlobalMaxAgeProvider","class GlobalMaxAgeProvider(maxAge: Duration) : MaxAgeProvider","com.apollographql.cache.normalized.api.GlobalMaxAgeProvider"]},{"name":"class IdCacheKeyGenerator(idFields: String = arrayOf(\"id\")) : CacheKeyGenerator","description":"com.apollographql.cache.normalized.api.IdCacheKeyGenerator","location":"normalized-cache/com.apollographql.cache.normalized.api/-id-cache-key-generator/index.html","searchKeys":["IdCacheKeyGenerator","class IdCacheKeyGenerator(idFields: String = arrayOf(\"id\")) : CacheKeyGenerator","com.apollographql.cache.normalized.api.IdCacheKeyGenerator"]},{"name":"class IdCacheKeyResolver(idFields: List<String> = listOf(\"id\"), idListFields: List<String> = listOf(\"ids\")) : CacheKeyResolver","description":"com.apollographql.cache.normalized.api.IdCacheKeyResolver","location":"normalized-cache/com.apollographql.cache.normalized.api/-id-cache-key-resolver/index.html","searchKeys":["IdCacheKeyResolver","class IdCacheKeyResolver(idFields: List<String> = listOf(\"id\"), idListFields: List<String> = listOf(\"ids\")) : CacheKeyResolver","com.apollographql.cache.normalized.api.IdCacheKeyResolver"]},{"name":"class KeyFieldsCacheKeyGenerator(keyFields: Map<String, Set<String>>) : CacheKeyGenerator","description":"com.apollographql.cache.normalized.api.KeyFieldsCacheKeyGenerator","location":"normalized-cache/com.apollographql.cache.normalized.api/-key-fields-cache-key-generator/index.html","searchKeys":["KeyFieldsCacheKeyGenerator","class KeyFieldsCacheKeyGenerator(keyFields: Map<String, Set<String>>) : CacheKeyGenerator","com.apollographql.cache.normalized.api.KeyFieldsCacheKeyGenerator"]},{"name":"class MaxAgeContext(val fieldPath: List<MaxAgeContext.Field>)","description":"com.apollographql.cache.normalized.api.MaxAgeContext","location":"normalized-cache/com.apollographql.cache.normalized.api/-max-age-context/index.html","searchKeys":["MaxAgeContext","class MaxAgeContext(val fieldPath: List<MaxAgeContext.Field>)","com.apollographql.cache.normalized.api.MaxAgeContext"]},{"name":"class MemoryCache(nextCache: NormalizedCache? = null, maxSizeBytes: Int = Int.MAX_VALUE, expireAfterMillis: Long = -1) : NormalizedCache","description":"com.apollographql.cache.normalized.memory.MemoryCache","location":"normalized-cache/com.apollographql.cache.normalized.memory/-memory-cache/index.html","searchKeys":["MemoryCache","class MemoryCache(nextCache: NormalizedCache? = null, maxSizeBytes: Int = Int.MAX_VALUE, expireAfterMillis: Long = -1) : NormalizedCache","com.apollographql.cache.normalized.memory.MemoryCache"]},{"name":"class MemoryCacheFactory constructor(maxSizeBytes: Int = Int.MAX_VALUE, expireAfterMillis: Long = -1) : NormalizedCacheFactory","description":"com.apollographql.cache.normalized.memory.MemoryCacheFactory","location":"normalized-cache/com.apollographql.cache.normalized.memory/-memory-cache-factory/index.html","searchKeys":["MemoryCacheFactory","class MemoryCacheFactory constructor(maxSizeBytes: Int = Int.MAX_VALUE, expireAfterMillis: Long = -1) : NormalizedCacheFactory","com.apollographql.cache.normalized.memory.MemoryCacheFactory"]},{"name":"class MetadataGeneratorContext(val field: CompiledField, val variables: Executable.Variables)","description":"com.apollographql.cache.normalized.api.MetadataGeneratorContext","location":"normalized-cache/com.apollographql.cache.normalized.api/-metadata-generator-context/index.html","searchKeys":["MetadataGeneratorContext","class MetadataGeneratorContext(val field: CompiledField, val variables: Executable.Variables)","com.apollographql.cache.normalized.api.MetadataGeneratorContext"]},{"name":"class ReadResult<D : Executable.Data>(val data: D, val cacheHeaders: CacheHeaders)","description":"com.apollographql.cache.normalized.CacheManager.ReadResult","location":"normalized-cache/com.apollographql.cache.normalized/-cache-manager/-read-result/index.html","searchKeys":["ReadResult","class ReadResult<D : Executable.Data>(val data: D, val cacheHeaders: CacheHeaders)","com.apollographql.cache.normalized.CacheManager.ReadResult"]},{"name":"class Record(val key: CacheKey, val fields: Map<String, RecordValue>, val mutationId: Uuid? = null, val metadata: Map<String, Map<String, ApolloJsonElement>> = emptyMap()) : Map<String, Any?> ","description":"com.apollographql.cache.normalized.api.Record","location":"normalized-cache/com.apollographql.cache.normalized.api/-record/index.html","searchKeys":["Record","class Record(val key: CacheKey, val fields: Map<String, RecordValue>, val mutationId: Uuid? = null, val metadata: Map<String, Map<String, ApolloJsonElement>> = emptyMap()) : Map<String, Any?> ","com.apollographql.cache.normalized.api.Record"]},{"name":"class RecordMergerContext(val existing: Record, val incoming: Record, val cacheHeaders: CacheHeaders)","description":"com.apollographql.cache.normalized.api.RecordMergerContext","location":"normalized-cache/com.apollographql.cache.normalized.api/-record-merger-context/index.html","searchKeys":["RecordMergerContext","class RecordMergerContext(val existing: Record, val incoming: Record, val cacheHeaders: CacheHeaders)","com.apollographql.cache.normalized.api.RecordMergerContext"]},{"name":"class RemovedFieldsAndRecords(val removedFields: Set<String>, val removedRecords: Set<CacheKey>)","description":"com.apollographql.cache.normalized.RemovedFieldsAndRecords","location":"normalized-cache/com.apollographql.cache.normalized/-removed-fields-and-records/index.html","searchKeys":["RemovedFieldsAndRecords","class RemovedFieldsAndRecords(val removedFields: Set<String>, val removedRecords: Set<CacheKey>)","com.apollographql.cache.normalized.RemovedFieldsAndRecords"]},{"name":"class ResolvedValue(val value: Any?, val cacheHeaders: CacheHeaders)","description":"com.apollographql.cache.normalized.api.CacheResolver.ResolvedValue","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-resolver/-resolved-value/index.html","searchKeys":["ResolvedValue","class ResolvedValue(val value: Any?, val cacheHeaders: CacheHeaders)","com.apollographql.cache.normalized.api.CacheResolver.ResolvedValue"]},{"name":"class ResolverContext(val field: CompiledField, val variables: Executable.Variables, val parent: Map<String, Any?>, val parentKey: CacheKey, val parentType: String, val cacheHeaders: CacheHeaders, val fieldKeyGenerator: FieldKeyGenerator, val path: List<CompiledField>)","description":"com.apollographql.cache.normalized.api.ResolverContext","location":"normalized-cache/com.apollographql.cache.normalized.api/-resolver-context/index.html","searchKeys":["ResolverContext","class ResolverContext(val field: CompiledField, val variables: Executable.Variables, val parent: Map<String, Any?>, val parentKey: CacheKey, val parentType: String, val cacheHeaders: CacheHeaders, val fieldKeyGenerator: FieldKeyGenerator, val path: List<CompiledField>)","com.apollographql.cache.normalized.api.ResolverContext"]},{"name":"class SchemaCoordinatesMaxAgeProvider(maxAges: Map<String, MaxAge>, defaultMaxAge: Duration) : MaxAgeProvider","description":"com.apollographql.cache.normalized.api.SchemaCoordinatesMaxAgeProvider","location":"normalized-cache/com.apollographql.cache.normalized.api/-schema-coordinates-max-age-provider/index.html","searchKeys":["SchemaCoordinatesMaxAgeProvider","class SchemaCoordinatesMaxAgeProvider(maxAges: Map<String, MaxAge>, defaultMaxAge: Duration) : MaxAgeProvider","com.apollographql.cache.normalized.api.SchemaCoordinatesMaxAgeProvider"]},{"name":"class Type(val name: String, val isComposite: Boolean, val implements: List<MaxAgeContext.Type>)","description":"com.apollographql.cache.normalized.api.MaxAgeContext.Type","location":"normalized-cache/com.apollographql.cache.normalized.api/-max-age-context/-type/index.html","searchKeys":["Type","class Type(val name: String, val isComposite: Boolean, val implements: List<MaxAgeContext.Type>)","com.apollographql.cache.normalized.api.MaxAgeContext.Type"]},{"name":"const val DO_NOT_STORE: String","description":"com.apollographql.cache.normalized.api.ApolloCacheHeaders.DO_NOT_STORE","location":"normalized-cache/com.apollographql.cache.normalized.api/-apollo-cache-headers/-d-o_-n-o-t_-s-t-o-r-e.html","searchKeys":["DO_NOT_STORE","const val DO_NOT_STORE: String","com.apollographql.cache.normalized.api.ApolloCacheHeaders.DO_NOT_STORE"]},{"name":"const val ERRORS_REPLACE_CACHED_VALUES: String","description":"com.apollographql.cache.normalized.api.ApolloCacheHeaders.ERRORS_REPLACE_CACHED_VALUES","location":"normalized-cache/com.apollographql.cache.normalized.api/-apollo-cache-headers/-e-r-r-o-r-s_-r-e-p-l-a-c-e_-c-a-c-h-e-d_-v-a-l-u-e-s.html","searchKeys":["ERRORS_REPLACE_CACHED_VALUES","const val ERRORS_REPLACE_CACHED_VALUES: String","com.apollographql.cache.normalized.api.ApolloCacheHeaders.ERRORS_REPLACE_CACHED_VALUES"]},{"name":"const val EVICT_AFTER_READ: String","description":"com.apollographql.cache.normalized.api.ApolloCacheHeaders.EVICT_AFTER_READ","location":"normalized-cache/com.apollographql.cache.normalized.api/-apollo-cache-headers/-e-v-i-c-t_-a-f-t-e-r_-r-e-a-d.html","searchKeys":["EVICT_AFTER_READ","const val EVICT_AFTER_READ: String","com.apollographql.cache.normalized.api.ApolloCacheHeaders.EVICT_AFTER_READ"]},{"name":"const val EXPIRATION_DATE: String","description":"com.apollographql.cache.normalized.api.ApolloCacheHeaders.EXPIRATION_DATE","location":"normalized-cache/com.apollographql.cache.normalized.api/-apollo-cache-headers/-e-x-p-i-r-a-t-i-o-n_-d-a-t-e.html","searchKeys":["EXPIRATION_DATE","const val EXPIRATION_DATE: String","com.apollographql.cache.normalized.api.ApolloCacheHeaders.EXPIRATION_DATE"]},{"name":"const val MAX_STALE: String","description":"com.apollographql.cache.normalized.api.ApolloCacheHeaders.MAX_STALE","location":"normalized-cache/com.apollographql.cache.normalized.api/-apollo-cache-headers/-m-a-x_-s-t-a-l-e.html","searchKeys":["MAX_STALE","const val MAX_STALE: String","com.apollographql.cache.normalized.api.ApolloCacheHeaders.MAX_STALE"]},{"name":"const val MEMORY_CACHE_ONLY: String","description":"com.apollographql.cache.normalized.api.ApolloCacheHeaders.MEMORY_CACHE_ONLY","location":"normalized-cache/com.apollographql.cache.normalized.api/-apollo-cache-headers/-m-e-m-o-r-y_-c-a-c-h-e_-o-n-l-y.html","searchKeys":["MEMORY_CACHE_ONLY","const val MEMORY_CACHE_ONLY: String","com.apollographql.cache.normalized.api.ApolloCacheHeaders.MEMORY_CACHE_ONLY"]},{"name":"const val RECEIVED_DATE: String","description":"com.apollographql.cache.normalized.api.ApolloCacheHeaders.RECEIVED_DATE","location":"normalized-cache/com.apollographql.cache.normalized.api/-apollo-cache-headers/-r-e-c-e-i-v-e-d_-d-a-t-e.html","searchKeys":["RECEIVED_DATE","const val RECEIVED_DATE: String","com.apollographql.cache.normalized.api.ApolloCacheHeaders.RECEIVED_DATE"]},{"name":"const val STALE: String","description":"com.apollographql.cache.normalized.api.ApolloCacheHeaders.STALE","location":"normalized-cache/com.apollographql.cache.normalized.api/-apollo-cache-headers/-s-t-a-l-e.html","searchKeys":["STALE","const val STALE: String","com.apollographql.cache.normalized.api.ApolloCacheHeaders.STALE"]},{"name":"const val VERSION: String","description":"com.apollographql.cache.normalized.VERSION","location":"normalized-cache/com.apollographql.cache.normalized/-v-e-r-s-i-o-n.html","searchKeys":["VERSION","const val VERSION: String","com.apollographql.cache.normalized.VERSION"]},{"name":"constructor()","description":"com.apollographql.cache.normalized.CacheInfo.Builder.Builder","location":"normalized-cache/com.apollographql.cache.normalized/-cache-info/-builder/-builder.html","searchKeys":["Builder","constructor()","com.apollographql.cache.normalized.CacheInfo.Builder.Builder"]},{"name":"constructor()","description":"com.apollographql.cache.normalized.api.CacheHeaders.Builder.Builder","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-headers/-builder/-builder.html","searchKeys":["Builder","constructor()","com.apollographql.cache.normalized.api.CacheHeaders.Builder.Builder"]},{"name":"constructor()","description":"com.apollographql.cache.normalized.api.CacheKeyResolver.CacheKeyResolver","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-key-resolver/-cache-key-resolver.html","searchKeys":["CacheKeyResolver","constructor()","com.apollographql.cache.normalized.api.CacheKeyResolver.CacheKeyResolver"]},{"name":"constructor()","description":"com.apollographql.cache.normalized.api.NormalizedCacheFactory.NormalizedCacheFactory","location":"normalized-cache/com.apollographql.cache.normalized.api/-normalized-cache-factory/-normalized-cache-factory.html","searchKeys":["NormalizedCacheFactory","constructor()","com.apollographql.cache.normalized.api.NormalizedCacheFactory.NormalizedCacheFactory"]},{"name":"constructor(cacheManager: CacheManager, customScalarAdapters: CustomScalarAdapters)","description":"com.apollographql.cache.normalized.ApolloStore.ApolloStore","location":"normalized-cache/com.apollographql.cache.normalized/-apollo-store/-apollo-store.html","searchKeys":["ApolloStore","constructor(cacheManager: CacheManager, customScalarAdapters: CustomScalarAdapters)","com.apollographql.cache.normalized.ApolloStore.ApolloStore"]},{"name":"constructor(connectionFields: Map<String, List<String>>)","description":"com.apollographql.cache.normalized.api.ConnectionFieldKeyGenerator.ConnectionFieldKeyGenerator","location":"normalized-cache/com.apollographql.cache.normalized.api/-connection-field-key-generator/-connection-field-key-generator.html","searchKeys":["ConnectionFieldKeyGenerator","constructor(connectionFields: Map<String, List<String>>)","com.apollographql.cache.normalized.api.ConnectionFieldKeyGenerator.ConnectionFieldKeyGenerator"]},{"name":"constructor(connectionFields: Map<String, List<String>>, connectionTypes: Set<String>)","description":"com.apollographql.cache.normalized.api.ConnectionEmbeddedFieldsProvider.ConnectionEmbeddedFieldsProvider","location":"normalized-cache/com.apollographql.cache.normalized.api/-connection-embedded-fields-provider/-connection-embedded-fields-provider.html","searchKeys":["ConnectionEmbeddedFieldsProvider","constructor(connectionFields: Map<String, List<String>>, connectionTypes: Set<String>)","com.apollographql.cache.normalized.api.ConnectionEmbeddedFieldsProvider.ConnectionEmbeddedFieldsProvider"]},{"name":"constructor(connectionTypes: Set<String>)","description":"com.apollographql.cache.normalized.api.ConnectionMetadataGenerator.ConnectionMetadataGenerator","location":"normalized-cache/com.apollographql.cache.normalized.api/-connection-metadata-generator/-connection-metadata-generator.html","searchKeys":["ConnectionMetadataGenerator","constructor(connectionTypes: Set<String>)","com.apollographql.cache.normalized.api.ConnectionMetadataGenerator.ConnectionMetadataGenerator"]},{"name":"constructor(data: D, cacheHeaders: CacheHeaders)","description":"com.apollographql.cache.normalized.CacheManager.ReadResult.ReadResult","location":"normalized-cache/com.apollographql.cache.normalized/-cache-manager/-read-result/-read-result.html","searchKeys":["ReadResult","constructor(data: D, cacheHeaders: CacheHeaders)","com.apollographql.cache.normalized.CacheManager.ReadResult.ReadResult"]},{"name":"constructor(delegateResolver: CacheResolver = FieldPolicyCacheResolver)","description":"com.apollographql.cache.normalized.api.CacheControlCacheResolver.CacheControlCacheResolver","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-control-cache-resolver/-cache-control-cache-resolver.html","searchKeys":["CacheControlCacheResolver","constructor(delegateResolver: CacheResolver = FieldPolicyCacheResolver)","com.apollographql.cache.normalized.api.CacheControlCacheResolver.CacheControlCacheResolver"]},{"name":"constructor(duration: Duration)","description":"com.apollographql.cache.normalized.api.MaxAge.Duration.Duration","location":"normalized-cache/com.apollographql.cache.normalized.api/-max-age/-duration/-duration.html","searchKeys":["Duration","constructor(duration: Duration)","com.apollographql.cache.normalized.api.MaxAge.Duration.Duration"]},{"name":"constructor(existing: Record, incoming: Record, cacheHeaders: CacheHeaders)","description":"com.apollographql.cache.normalized.api.RecordMergerContext.RecordMergerContext","location":"normalized-cache/com.apollographql.cache.normalized.api/-record-merger-context/-record-merger-context.html","searchKeys":["RecordMergerContext","constructor(existing: Record, incoming: Record, cacheHeaders: CacheHeaders)","com.apollographql.cache.normalized.api.RecordMergerContext.RecordMergerContext"]},{"name":"constructor(field: CompiledField, variables: Executable.Variables)","description":"com.apollographql.cache.normalized.api.CacheKeyGeneratorContext.CacheKeyGeneratorContext","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-key-generator-context/-cache-key-generator-context.html","searchKeys":["CacheKeyGeneratorContext","constructor(field: CompiledField, variables: Executable.Variables)","com.apollographql.cache.normalized.api.CacheKeyGeneratorContext.CacheKeyGeneratorContext"]},{"name":"constructor(field: CompiledField, variables: Executable.Variables)","description":"com.apollographql.cache.normalized.api.MetadataGeneratorContext.MetadataGeneratorContext","location":"normalized-cache/com.apollographql.cache.normalized.api/-metadata-generator-context/-metadata-generator-context.html","searchKeys":["MetadataGeneratorContext","constructor(field: CompiledField, variables: Executable.Variables)","com.apollographql.cache.normalized.api.MetadataGeneratorContext.MetadataGeneratorContext"]},{"name":"constructor(field: CompiledField, variables: Executable.Variables, parent: Map<String, Any?>, parentKey: CacheKey, parentType: String, cacheHeaders: CacheHeaders, fieldKeyGenerator: FieldKeyGenerator, path: List<CompiledField>)","description":"com.apollographql.cache.normalized.api.ResolverContext.ResolverContext","location":"normalized-cache/com.apollographql.cache.normalized.api/-resolver-context/-resolver-context.html","searchKeys":["ResolverContext","constructor(field: CompiledField, variables: Executable.Variables, parent: Map<String, Any?>, parentKey: CacheKey, parentType: String, cacheHeaders: CacheHeaders, fieldKeyGenerator: FieldKeyGenerator, path: List<CompiledField>)","com.apollographql.cache.normalized.api.ResolverContext.ResolverContext"]},{"name":"constructor(fieldMerger: FieldRecordMerger.FieldMerger)","description":"com.apollographql.cache.normalized.api.FieldRecordMerger.FieldRecordMerger","location":"normalized-cache/com.apollographql.cache.normalized.api/-field-record-merger/-field-record-merger.html","searchKeys":["FieldRecordMerger","constructor(fieldMerger: FieldRecordMerger.FieldMerger)","com.apollographql.cache.normalized.api.FieldRecordMerger.FieldRecordMerger"]},{"name":"constructor(fieldPath: List<MaxAgeContext.Field>)","description":"com.apollographql.cache.normalized.api.MaxAgeContext.MaxAgeContext","location":"normalized-cache/com.apollographql.cache.normalized.api/-max-age-context/-max-age-context.html","searchKeys":["MaxAgeContext","constructor(fieldPath: List<MaxAgeContext.Field>)","com.apollographql.cache.normalized.api.MaxAgeContext.MaxAgeContext"]},{"name":"constructor(idFields: List<String> = listOf(\"id\"), idListFields: List<String> = listOf(\"ids\"))","description":"com.apollographql.cache.normalized.api.IdCacheKeyResolver.IdCacheKeyResolver","location":"normalized-cache/com.apollographql.cache.normalized.api/-id-cache-key-resolver/-id-cache-key-resolver.html","searchKeys":["IdCacheKeyResolver","constructor(idFields: List<String> = listOf(\"id\"), idListFields: List<String> = listOf(\"ids\"))","com.apollographql.cache.normalized.api.IdCacheKeyResolver.IdCacheKeyResolver"]},{"name":"constructor(key: CacheKey, fields: Map<String, RecordValue>, mutationId: Uuid? = null, metadata: Map<String, Map<String, ApolloJsonElement>> = emptyMap())","description":"com.apollographql.cache.normalized.api.Record.Record","location":"normalized-cache/com.apollographql.cache.normalized.api/-record/-record.html","searchKeys":["Record","constructor(key: CacheKey, fields: Map<String, RecordValue>, mutationId: Uuid? = null, metadata: Map<String, Map<String, ApolloJsonElement>> = emptyMap())","com.apollographql.cache.normalized.api.Record.Record"]},{"name":"constructor(key: String)","description":"com.apollographql.cache.normalized.api.CacheKey.CacheKey","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-key/-cache-key.html","searchKeys":["CacheKey","constructor(key: String)","com.apollographql.cache.normalized.api.CacheKey.CacheKey"]},{"name":"constructor(keyFields: Map<String, Set<String>>)","description":"com.apollographql.cache.normalized.api.KeyFieldsCacheKeyGenerator.KeyFieldsCacheKeyGenerator","location":"normalized-cache/com.apollographql.cache.normalized.api/-key-fields-cache-key-generator/-key-fields-cache-key-generator.html","searchKeys":["KeyFieldsCacheKeyGenerator","constructor(keyFields: Map<String, Set<String>>)","com.apollographql.cache.normalized.api.KeyFieldsCacheKeyGenerator.KeyFieldsCacheKeyGenerator"]},{"name":"constructor(log: (String) -> Unit)","description":"com.apollographql.cache.normalized.CacheMissLoggingInterceptor.CacheMissLoggingInterceptor","location":"normalized-cache/com.apollographql.cache.normalized/-cache-miss-logging-interceptor/-cache-miss-logging-interceptor.html","searchKeys":["CacheMissLoggingInterceptor","constructor(log: (String) -> Unit)","com.apollographql.cache.normalized.CacheMissLoggingInterceptor.CacheMissLoggingInterceptor"]},{"name":"constructor(maxAge: Duration)","description":"com.apollographql.cache.normalized.api.GlobalMaxAgeProvider.GlobalMaxAgeProvider","location":"normalized-cache/com.apollographql.cache.normalized.api/-global-max-age-provider/-global-max-age-provider.html","searchKeys":["GlobalMaxAgeProvider","constructor(maxAge: Duration)","com.apollographql.cache.normalized.api.GlobalMaxAgeProvider.GlobalMaxAgeProvider"]},{"name":"constructor(maxAgeProvider: MaxAgeProvider, delegateResolver: CacheResolver = FieldPolicyCacheResolver)","description":"com.apollographql.cache.normalized.api.CacheControlCacheResolver.CacheControlCacheResolver","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-control-cache-resolver/-cache-control-cache-resolver.html","searchKeys":["CacheControlCacheResolver","constructor(maxAgeProvider: MaxAgeProvider, delegateResolver: CacheResolver = FieldPolicyCacheResolver)","com.apollographql.cache.normalized.api.CacheControlCacheResolver.CacheControlCacheResolver"]},{"name":"constructor(maxAges: Map<String, MaxAge>, defaultMaxAge: Duration)","description":"com.apollographql.cache.normalized.api.SchemaCoordinatesMaxAgeProvider.SchemaCoordinatesMaxAgeProvider","location":"normalized-cache/com.apollographql.cache.normalized.api/-schema-coordinates-max-age-provider/-schema-coordinates-max-age-provider.html","searchKeys":["SchemaCoordinatesMaxAgeProvider","constructor(maxAges: Map<String, MaxAge>, defaultMaxAge: Duration)","com.apollographql.cache.normalized.api.SchemaCoordinatesMaxAgeProvider.SchemaCoordinatesMaxAgeProvider"]},{"name":"constructor(maxSizeBytes: Int = Int.MAX_VALUE, expireAfterMillis: Long = -1)","description":"com.apollographql.cache.normalized.memory.MemoryCacheFactory.MemoryCacheFactory","location":"normalized-cache/com.apollographql.cache.normalized.memory/-memory-cache-factory/-memory-cache-factory.html","searchKeys":["MemoryCacheFactory","constructor(maxSizeBytes: Int = Int.MAX_VALUE, expireAfterMillis: Long = -1)","com.apollographql.cache.normalized.memory.MemoryCacheFactory.MemoryCacheFactory"]},{"name":"constructor(name: String, isComposite: Boolean, implements: List<MaxAgeContext.Type>)","description":"com.apollographql.cache.normalized.api.MaxAgeContext.Type.Type","location":"normalized-cache/com.apollographql.cache.normalized.api/-max-age-context/-type/-type.html","searchKeys":["Type","constructor(name: String, isComposite: Boolean, implements: List<MaxAgeContext.Type>)","com.apollographql.cache.normalized.api.MaxAgeContext.Type.Type"]},{"name":"constructor(name: String, type: MaxAgeContext.Type)","description":"com.apollographql.cache.normalized.api.MaxAgeContext.Field.Field","location":"normalized-cache/com.apollographql.cache.normalized.api/-max-age-context/-field/-field.html","searchKeys":["Field","constructor(name: String, type: MaxAgeContext.Type)","com.apollographql.cache.normalized.api.MaxAgeContext.Field.Field"]},{"name":"constructor(nextCache: NormalizedCache? = null, maxSizeBytes: Int = Int.MAX_VALUE, expireAfterMillis: Long = -1)","description":"com.apollographql.cache.normalized.memory.MemoryCache.MemoryCache","location":"normalized-cache/com.apollographql.cache.normalized.memory/-memory-cache/-memory-cache.html","searchKeys":["MemoryCache","constructor(nextCache: NormalizedCache? = null, maxSizeBytes: Int = Int.MAX_VALUE, expireAfterMillis: Long = -1)","com.apollographql.cache.normalized.memory.MemoryCache.MemoryCache"]},{"name":"constructor(parentType: CompiledNamedType)","description":"com.apollographql.cache.normalized.api.EmbeddedFieldsContext.EmbeddedFieldsContext","location":"normalized-cache/com.apollographql.cache.normalized.api/-embedded-fields-context/-embedded-fields-context.html","searchKeys":["EmbeddedFieldsContext","constructor(parentType: CompiledNamedType)","com.apollographql.cache.normalized.api.EmbeddedFieldsContext.EmbeddedFieldsContext"]},{"name":"constructor(parentType: String, field: CompiledField, variables: Executable.Variables)","description":"com.apollographql.cache.normalized.api.FieldKeyContext.FieldKeyContext","location":"normalized-cache/com.apollographql.cache.normalized.api/-field-key-context/-field-key-context.html","searchKeys":["FieldKeyContext","constructor(parentType: String, field: CompiledField, variables: Executable.Variables)","com.apollographql.cache.normalized.api.FieldKeyContext.FieldKeyContext"]},{"name":"constructor(removedFields: Set<String>, removedRecords: Set<CacheKey>)","description":"com.apollographql.cache.normalized.RemovedFieldsAndRecords.RemovedFieldsAndRecords","location":"normalized-cache/com.apollographql.cache.normalized/-removed-fields-and-records/-removed-fields-and-records.html","searchKeys":["RemovedFieldsAndRecords","constructor(removedFields: Set<String>, removedRecords: Set<CacheKey>)","com.apollographql.cache.normalized.RemovedFieldsAndRecords.RemovedFieldsAndRecords"]},{"name":"constructor(removedStaleFields: RemovedFieldsAndRecords, removedDanglingReferences: RemovedFieldsAndRecords, removedUnreachableRecords: Set<CacheKey>)","description":"com.apollographql.cache.normalized.GarbageCollectResult.GarbageCollectResult","location":"normalized-cache/com.apollographql.cache.normalized/-garbage-collect-result/-garbage-collect-result.html","searchKeys":["GarbageCollectResult","constructor(removedStaleFields: RemovedFieldsAndRecords, removedDanglingReferences: RemovedFieldsAndRecords, removedUnreachableRecords: Set<CacheKey>)","com.apollographql.cache.normalized.GarbageCollectResult.GarbageCollectResult"]},{"name":"constructor(typename: String, values: List<String>)","description":"com.apollographql.cache.normalized.api.CacheKey.CacheKey","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-key/-cache-key.html","searchKeys":["CacheKey","constructor(typename: String, values: List<String>)","com.apollographql.cache.normalized.api.CacheKey.CacheKey"]},{"name":"constructor(typename: String, vararg values: String)","description":"com.apollographql.cache.normalized.api.CacheKey.CacheKey","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-key/-cache-key.html","searchKeys":["CacheKey","constructor(typename: String, vararg values: String)","com.apollographql.cache.normalized.api.CacheKey.CacheKey"]},{"name":"constructor(value: Any?, cacheHeaders: CacheHeaders)","description":"com.apollographql.cache.normalized.api.CacheResolver.ResolvedValue.ResolvedValue","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-resolver/-resolved-value/-resolved-value.html","searchKeys":["ResolvedValue","constructor(value: Any?, cacheHeaders: CacheHeaders)","com.apollographql.cache.normalized.api.CacheResolver.ResolvedValue.ResolvedValue"]},{"name":"constructor(value: Any?, metadata: Map<String, ApolloJsonElement>)","description":"com.apollographql.cache.normalized.api.FieldRecordMerger.FieldInfo.FieldInfo","location":"normalized-cache/com.apollographql.cache.normalized.api/-field-record-merger/-field-info/-field-info.html","searchKeys":["FieldInfo","constructor(value: Any?, metadata: Map<String, ApolloJsonElement>)","com.apollographql.cache.normalized.api.FieldRecordMerger.FieldInfo.FieldInfo"]},{"name":"constructor(vararg idFields: String = arrayOf(\"id\"))","description":"com.apollographql.cache.normalized.api.IdCacheKeyGenerator.IdCacheKeyGenerator","location":"normalized-cache/com.apollographql.cache.normalized.api/-id-cache-key-generator/-id-cache-key-generator.html","searchKeys":["IdCacheKeyGenerator","constructor(vararg idFields: String = arrayOf(\"id\"))","com.apollographql.cache.normalized.api.IdCacheKeyGenerator.IdCacheKeyGenerator"]},{"name":"data class FieldInfo(val value: Any?, val metadata: Map<String, ApolloJsonElement>)","description":"com.apollographql.cache.normalized.api.FieldRecordMerger.FieldInfo","location":"normalized-cache/com.apollographql.cache.normalized.api/-field-record-merger/-field-info/index.html","searchKeys":["FieldInfo","data class FieldInfo(val value: Any?, val metadata: Map<String, ApolloJsonElement>)","com.apollographql.cache.normalized.api.FieldRecordMerger.FieldInfo"]},{"name":"data object Inherit : MaxAge","description":"com.apollographql.cache.normalized.api.MaxAge.Inherit","location":"normalized-cache/com.apollographql.cache.normalized.api/-max-age/-inherit/index.html","searchKeys":["Inherit","data object Inherit : MaxAge","com.apollographql.cache.normalized.api.MaxAge.Inherit"]},{"name":"enum FetchPolicy : Enum<FetchPolicy> ","description":"com.apollographql.cache.normalized.FetchPolicy","location":"normalized-cache/com.apollographql.cache.normalized/-fetch-policy/index.html","searchKeys":["FetchPolicy","enum FetchPolicy : Enum<FetchPolicy> ","com.apollographql.cache.normalized.FetchPolicy"]},{"name":"fun <D : Executable.Data> D.normalized(executable: Executable<D>, rootKey: CacheKey = CacheKey.QUERY_ROOT, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty, cacheKeyGenerator: CacheKeyGenerator = com.apollographql.cache.normalized.api.TypePolicyCacheKeyGenerator, metadataGenerator: MetadataGenerator = EmptyMetadataGenerator, fieldKeyGenerator: FieldKeyGenerator = DefaultFieldKeyGenerator, embeddedFieldsProvider: EmbeddedFieldsProvider = DefaultEmbeddedFieldsProvider, maxAgeProvider: MaxAgeProvider = DefaultMaxAgeProvider): Map<CacheKey, Record>","description":"com.apollographql.cache.normalized.internal.normalized","location":"normalized-cache/com.apollographql.cache.normalized.internal/normalized.html","searchKeys":["normalized","fun <D : Executable.Data> D.normalized(executable: Executable<D>, rootKey: CacheKey = CacheKey.QUERY_ROOT, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty, cacheKeyGenerator: CacheKeyGenerator = com.apollographql.cache.normalized.api.TypePolicyCacheKeyGenerator, metadataGenerator: MetadataGenerator = EmptyMetadataGenerator, fieldKeyGenerator: FieldKeyGenerator = DefaultFieldKeyGenerator, embeddedFieldsProvider: EmbeddedFieldsProvider = DefaultEmbeddedFieldsProvider, maxAgeProvider: MaxAgeProvider = DefaultMaxAgeProvider): Map<CacheKey, Record>","com.apollographql.cache.normalized.internal.normalized"]},{"name":"fun <D : Executable.Data> D.withErrors(executable: Executable<D>, errors: List<Error>?, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty): DataWithErrors","description":"com.apollographql.cache.normalized.api.withErrors","location":"normalized-cache/com.apollographql.cache.normalized.api/with-errors.html","searchKeys":["withErrors","fun <D : Executable.Data> D.withErrors(executable: Executable<D>, errors: List<Error>?, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty): DataWithErrors","com.apollographql.cache.normalized.api.withErrors"]},{"name":"fun <D : Executable.Data> DataWithErrors.normalized(executable: Executable<D>, rootKey: CacheKey = CacheKey.QUERY_ROOT, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty, cacheKeyGenerator: CacheKeyGenerator = com.apollographql.cache.normalized.api.TypePolicyCacheKeyGenerator, metadataGenerator: MetadataGenerator = EmptyMetadataGenerator, fieldKeyGenerator: FieldKeyGenerator = DefaultFieldKeyGenerator, embeddedFieldsProvider: EmbeddedFieldsProvider = DefaultEmbeddedFieldsProvider, maxAgeProvider: MaxAgeProvider = DefaultMaxAgeProvider): Map<CacheKey, Record>","description":"com.apollographql.cache.normalized.internal.normalized","location":"normalized-cache/com.apollographql.cache.normalized.internal/normalized.html","searchKeys":["normalized","fun <D : Executable.Data> DataWithErrors.normalized(executable: Executable<D>, rootKey: CacheKey = CacheKey.QUERY_ROOT, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty, cacheKeyGenerator: CacheKeyGenerator = com.apollographql.cache.normalized.api.TypePolicyCacheKeyGenerator, metadataGenerator: MetadataGenerator = EmptyMetadataGenerator, fieldKeyGenerator: FieldKeyGenerator = DefaultFieldKeyGenerator, embeddedFieldsProvider: EmbeddedFieldsProvider = DefaultEmbeddedFieldsProvider, maxAgeProvider: MaxAgeProvider = DefaultMaxAgeProvider): Map<CacheKey, Record>","com.apollographql.cache.normalized.internal.normalized"]},{"name":"fun <D : Executable.Data> normalize(executable: Executable<D>, dataWithErrors: DataWithErrors, rootKey: CacheKey = CacheKey.QUERY_ROOT): Map<CacheKey, Record>","description":"com.apollographql.cache.normalized.ApolloStore.normalize","location":"normalized-cache/com.apollographql.cache.normalized/-apollo-store/normalize.html","searchKeys":["normalize","fun <D : Executable.Data> normalize(executable: Executable<D>, dataWithErrors: DataWithErrors, rootKey: CacheKey = CacheKey.QUERY_ROOT): Map<CacheKey, Record>","com.apollographql.cache.normalized.ApolloStore.normalize"]},{"name":"fun <D : Fragment.Data> ApolloStore.removeFragment(fragment: Fragment<D>, cacheKey: CacheKey, data: D, cacheHeaders: CacheHeaders = CacheHeaders.NONE): Set<String>","description":"com.apollographql.cache.normalized.removeFragment","location":"normalized-cache/com.apollographql.cache.normalized/remove-fragment.html","searchKeys":["removeFragment","fun <D : Fragment.Data> ApolloStore.removeFragment(fragment: Fragment<D>, cacheKey: CacheKey, data: D, cacheHeaders: CacheHeaders = CacheHeaders.NONE): Set<String>","com.apollographql.cache.normalized.removeFragment"]},{"name":"fun <D : Fragment.Data> readFragment(fragment: Fragment<D>, cacheKey: CacheKey, cacheHeaders: CacheHeaders = CacheHeaders.NONE): CacheManager.ReadResult<D>","description":"com.apollographql.cache.normalized.ApolloStore.readFragment","location":"normalized-cache/com.apollographql.cache.normalized/-apollo-store/read-fragment.html","searchKeys":["readFragment","fun <D : Fragment.Data> readFragment(fragment: Fragment<D>, cacheKey: CacheKey, cacheHeaders: CacheHeaders = CacheHeaders.NONE): CacheManager.ReadResult<D>","com.apollographql.cache.normalized.ApolloStore.readFragment"]},{"name":"fun <D : Fragment.Data> writeFragment(fragment: Fragment<D>, cacheKey: CacheKey, data: D, cacheHeaders: CacheHeaders = CacheHeaders.NONE): Set<String>","description":"com.apollographql.cache.normalized.ApolloStore.writeFragment","location":"normalized-cache/com.apollographql.cache.normalized/-apollo-store/write-fragment.html","searchKeys":["writeFragment","fun <D : Fragment.Data> writeFragment(fragment: Fragment<D>, cacheKey: CacheKey, data: D, cacheHeaders: CacheHeaders = CacheHeaders.NONE): Set<String>","com.apollographql.cache.normalized.ApolloStore.writeFragment"]},{"name":"fun <D : Fragment.Data> writeOptimisticUpdates(fragment: Fragment<D>, cacheKey: CacheKey, data: D, mutationId: Uuid): Set<String>","description":"com.apollographql.cache.normalized.ApolloStore.writeOptimisticUpdates","location":"normalized-cache/com.apollographql.cache.normalized/-apollo-store/write-optimistic-updates.html","searchKeys":["writeOptimisticUpdates","fun <D : Fragment.Data> writeOptimisticUpdates(fragment: Fragment<D>, cacheKey: CacheKey, data: D, mutationId: Uuid): Set<String>","com.apollographql.cache.normalized.ApolloStore.writeOptimisticUpdates"]},{"name":"fun <D : Mutation.Data> ApolloCall<D>.optimisticUpdates(data: D): ApolloCall<D>","description":"com.apollographql.cache.normalized.optimisticUpdates","location":"normalized-cache/com.apollographql.cache.normalized/optimistic-updates.html","searchKeys":["optimisticUpdates","fun <D : Mutation.Data> ApolloCall<D>.optimisticUpdates(data: D): ApolloCall<D>","com.apollographql.cache.normalized.optimisticUpdates"]},{"name":"fun <D : Mutation.Data> ApolloRequest.Builder<D>.optimisticUpdates(data: D): ApolloRequest.Builder<D>","description":"com.apollographql.cache.normalized.optimisticUpdates","location":"normalized-cache/com.apollographql.cache.normalized/optimistic-updates.html","searchKeys":["optimisticUpdates","fun <D : Mutation.Data> ApolloRequest.Builder<D>.optimisticUpdates(data: D): ApolloRequest.Builder<D>","com.apollographql.cache.normalized.optimisticUpdates"]},{"name":"fun <D : Operation.Data> ApolloRequest.Builder<D>.fetchFromCache(fetchFromCache: Boolean): ApolloRequest.Builder<D>","description":"com.apollographql.cache.normalized.fetchFromCache","location":"normalized-cache/com.apollographql.cache.normalized/fetch-from-cache.html","searchKeys":["fetchFromCache","fun <D : Operation.Data> ApolloRequest.Builder<D>.fetchFromCache(fetchFromCache: Boolean): ApolloRequest.Builder<D>","com.apollographql.cache.normalized.fetchFromCache"]},{"name":"fun <D : Operation.Data> ApolloResponse.Builder<D>.cacheHeaders(cacheHeaders: CacheHeaders): ApolloResponse.Builder<D>","description":"com.apollographql.cache.normalized.cacheHeaders","location":"normalized-cache/com.apollographql.cache.normalized/cache-headers.html","searchKeys":["cacheHeaders","fun <D : Operation.Data> ApolloResponse.Builder<D>.cacheHeaders(cacheHeaders: CacheHeaders): ApolloResponse.Builder<D>","com.apollographql.cache.normalized.cacheHeaders"]},{"name":"fun <D : Operation.Data> ApolloResponse<D>.errorsAsException(): ApolloResponse<D>","description":"com.apollographql.cache.normalized.errorsAsException","location":"normalized-cache/com.apollographql.cache.normalized/errors-as-exception.html","searchKeys":["errorsAsException","fun <D : Operation.Data> ApolloResponse<D>.errorsAsException(): ApolloResponse<D>","com.apollographql.cache.normalized.errorsAsException"]},{"name":"fun <D : Operation.Data> ApolloStore.removeOperation(operation: Operation<D>, data: D, cacheHeaders: CacheHeaders = CacheHeaders.NONE): Set<String>","description":"com.apollographql.cache.normalized.removeOperation","location":"normalized-cache/com.apollographql.cache.normalized/remove-operation.html","searchKeys":["removeOperation","fun <D : Operation.Data> ApolloStore.removeOperation(operation: Operation<D>, data: D, cacheHeaders: CacheHeaders = CacheHeaders.NONE): Set<String>","com.apollographql.cache.normalized.removeOperation"]},{"name":"fun <D : Operation.Data> readOperation(operation: Operation<D>, cacheHeaders: CacheHeaders = CacheHeaders.NONE): ApolloResponse<D>","description":"com.apollographql.cache.normalized.ApolloStore.readOperation","location":"normalized-cache/com.apollographql.cache.normalized/-apollo-store/read-operation.html","searchKeys":["readOperation","fun <D : Operation.Data> readOperation(operation: Operation<D>, cacheHeaders: CacheHeaders = CacheHeaders.NONE): ApolloResponse<D>","com.apollographql.cache.normalized.ApolloStore.readOperation"]},{"name":"fun <D : Operation.Data> writeOperation(operation: Operation<D>, data: D, errors: List<Error>? = null, cacheHeaders: CacheHeaders = CacheHeaders.NONE): Set<String>","description":"com.apollographql.cache.normalized.ApolloStore.writeOperation","location":"normalized-cache/com.apollographql.cache.normalized/-apollo-store/write-operation.html","searchKeys":["writeOperation","fun <D : Operation.Data> writeOperation(operation: Operation<D>, data: D, errors: List<Error>? = null, cacheHeaders: CacheHeaders = CacheHeaders.NONE): Set<String>","com.apollographql.cache.normalized.ApolloStore.writeOperation"]},{"name":"fun <D : Operation.Data> writeOperation(operation: Operation<D>, dataWithErrors: DataWithErrors, cacheHeaders: CacheHeaders = CacheHeaders.NONE): Set<String>","description":"com.apollographql.cache.normalized.ApolloStore.writeOperation","location":"normalized-cache/com.apollographql.cache.normalized/-apollo-store/write-operation.html","searchKeys":["writeOperation","fun <D : Operation.Data> writeOperation(operation: Operation<D>, dataWithErrors: DataWithErrors, cacheHeaders: CacheHeaders = CacheHeaders.NONE): Set<String>","com.apollographql.cache.normalized.ApolloStore.writeOperation"]},{"name":"fun <D : Operation.Data> writeOptimisticUpdates(operation: Operation<D>, data: D, mutationId: Uuid): Set<String>","description":"com.apollographql.cache.normalized.ApolloStore.writeOptimisticUpdates","location":"normalized-cache/com.apollographql.cache.normalized/-apollo-store/write-optimistic-updates.html","searchKeys":["writeOptimisticUpdates","fun <D : Operation.Data> writeOptimisticUpdates(operation: Operation<D>, data: D, mutationId: Uuid): Set<String>","com.apollographql.cache.normalized.ApolloStore.writeOptimisticUpdates"]},{"name":"fun <D : Query.Data> ApolloCall<D>.watch(): Flow<ApolloResponse<D>>","description":"com.apollographql.cache.normalized.watch","location":"normalized-cache/com.apollographql.cache.normalized/watch.html","searchKeys":["watch","fun <D : Query.Data> ApolloCall<D>.watch(): Flow<ApolloResponse<D>>","com.apollographql.cache.normalized.watch"]},{"name":"fun <D : Query.Data> ApolloCall<D>.watch(data: D?): Flow<ApolloResponse<D>>","description":"com.apollographql.cache.normalized.watch","location":"normalized-cache/com.apollographql.cache.normalized/watch.html","searchKeys":["watch","fun <D : Query.Data> ApolloCall<D>.watch(data: D?): Flow<ApolloResponse<D>>","com.apollographql.cache.normalized.watch"]},{"name":"fun <R> accessCache(block: (NormalizedCache) -> R): R","description":"com.apollographql.cache.normalized.ApolloStore.accessCache","location":"normalized-cache/com.apollographql.cache.normalized/-apollo-store/access-cache.html","searchKeys":["accessCache","fun <R> accessCache(block: (NormalizedCache) -> R): R","com.apollographql.cache.normalized.ApolloStore.accessCache"]},{"name":"fun <T> MutableExecutionOptions<T>.addCacheHeader(key: String, value: String): T","description":"com.apollographql.cache.normalized.addCacheHeader","location":"normalized-cache/com.apollographql.cache.normalized/add-cache-header.html","searchKeys":["addCacheHeader","fun <T> MutableExecutionOptions<T>.addCacheHeader(key: String, value: String): T","com.apollographql.cache.normalized.addCacheHeader"]},{"name":"fun <T> MutableExecutionOptions<T>.cacheHeaders(cacheHeaders: CacheHeaders): T","description":"com.apollographql.cache.normalized.cacheHeaders","location":"normalized-cache/com.apollographql.cache.normalized/cache-headers.html","searchKeys":["cacheHeaders","fun <T> MutableExecutionOptions<T>.cacheHeaders(cacheHeaders: CacheHeaders): T","com.apollographql.cache.normalized.cacheHeaders"]},{"name":"fun <T> MutableExecutionOptions<T>.doNotStore(doNotStore: Boolean): T","description":"com.apollographql.cache.normalized.doNotStore","location":"normalized-cache/com.apollographql.cache.normalized/do-not-store.html","searchKeys":["doNotStore","fun <T> MutableExecutionOptions<T>.doNotStore(doNotStore: Boolean): T","com.apollographql.cache.normalized.doNotStore"]},{"name":"fun <T> MutableExecutionOptions<T>.errorsReplaceCachedValues(errorsReplaceCachedValues: Boolean): T","description":"com.apollographql.cache.normalized.errorsReplaceCachedValues","location":"normalized-cache/com.apollographql.cache.normalized/errors-replace-cached-values.html","searchKeys":["errorsReplaceCachedValues","fun <T> MutableExecutionOptions<T>.errorsReplaceCachedValues(errorsReplaceCachedValues: Boolean): T","com.apollographql.cache.normalized.errorsReplaceCachedValues"]},{"name":"fun <T> MutableExecutionOptions<T>.fetchPolicy(fetchPolicy: FetchPolicy): T","description":"com.apollographql.cache.normalized.fetchPolicy","location":"normalized-cache/com.apollographql.cache.normalized/fetch-policy.html","searchKeys":["fetchPolicy","fun <T> MutableExecutionOptions<T>.fetchPolicy(fetchPolicy: FetchPolicy): T","com.apollographql.cache.normalized.fetchPolicy"]},{"name":"fun <T> MutableExecutionOptions<T>.fetchPolicyInterceptor(interceptor: ApolloInterceptor): T","description":"com.apollographql.cache.normalized.fetchPolicyInterceptor","location":"normalized-cache/com.apollographql.cache.normalized/fetch-policy-interceptor.html","searchKeys":["fetchPolicyInterceptor","fun <T> MutableExecutionOptions<T>.fetchPolicyInterceptor(interceptor: ApolloInterceptor): T","com.apollographql.cache.normalized.fetchPolicyInterceptor"]},{"name":"fun <T> MutableExecutionOptions<T>.maxStale(maxStale: Duration): T","description":"com.apollographql.cache.normalized.maxStale","location":"normalized-cache/com.apollographql.cache.normalized/max-stale.html","searchKeys":["maxStale","fun <T> MutableExecutionOptions<T>.maxStale(maxStale: Duration): T","com.apollographql.cache.normalized.maxStale"]},{"name":"fun <T> MutableExecutionOptions<T>.memoryCacheOnly(memoryCacheOnly: Boolean): T","description":"com.apollographql.cache.normalized.memoryCacheOnly","location":"normalized-cache/com.apollographql.cache.normalized/memory-cache-only.html","searchKeys":["memoryCacheOnly","fun <T> MutableExecutionOptions<T>.memoryCacheOnly(memoryCacheOnly: Boolean): T","com.apollographql.cache.normalized.memoryCacheOnly"]},{"name":"fun <T> MutableExecutionOptions<T>.refetchPolicy(fetchPolicy: FetchPolicy): T","description":"com.apollographql.cache.normalized.refetchPolicy","location":"normalized-cache/com.apollographql.cache.normalized/refetch-policy.html","searchKeys":["refetchPolicy","fun <T> MutableExecutionOptions<T>.refetchPolicy(fetchPolicy: FetchPolicy): T","com.apollographql.cache.normalized.refetchPolicy"]},{"name":"fun <T> MutableExecutionOptions<T>.refetchPolicyInterceptor(interceptor: ApolloInterceptor): T","description":"com.apollographql.cache.normalized.refetchPolicyInterceptor","location":"normalized-cache/com.apollographql.cache.normalized/refetch-policy-interceptor.html","searchKeys":["refetchPolicyInterceptor","fun <T> MutableExecutionOptions<T>.refetchPolicyInterceptor(interceptor: ApolloInterceptor): T","com.apollographql.cache.normalized.refetchPolicyInterceptor"]},{"name":"fun <T> MutableExecutionOptions<T>.storeExpirationDate(storeExpirationDate: Boolean): T","description":"com.apollographql.cache.normalized.storeExpirationDate","location":"normalized-cache/com.apollographql.cache.normalized/store-expiration-date.html","searchKeys":["storeExpirationDate","fun <T> MutableExecutionOptions<T>.storeExpirationDate(storeExpirationDate: Boolean): T","com.apollographql.cache.normalized.storeExpirationDate"]},{"name":"fun <T> MutableExecutionOptions<T>.storePartialResponses(storePartialResponses: Boolean): Nothing","description":"com.apollographql.cache.normalized.storePartialResponses","location":"normalized-cache/com.apollographql.cache.normalized/store-partial-responses.html","searchKeys":["storePartialResponses","fun <T> MutableExecutionOptions<T>.storePartialResponses(storePartialResponses: Boolean): Nothing","com.apollographql.cache.normalized.storePartialResponses"]},{"name":"fun <T> MutableExecutionOptions<T>.storeReceivedDate(storeReceivedDate: Boolean): T","description":"com.apollographql.cache.normalized.storeReceivedDate","location":"normalized-cache/com.apollographql.cache.normalized/store-received-date.html","searchKeys":["storeReceivedDate","fun <T> MutableExecutionOptions<T>.storeReceivedDate(storeReceivedDate: Boolean): T","com.apollographql.cache.normalized.storeReceivedDate"]},{"name":"fun <T> MutableExecutionOptions<T>.writeToCacheAsynchronously(writeToCacheAsynchronously: Boolean): T","description":"com.apollographql.cache.normalized.writeToCacheAsynchronously","location":"normalized-cache/com.apollographql.cache.normalized/write-to-cache-asynchronously.html","searchKeys":["writeToCacheAsynchronously","fun <T> MutableExecutionOptions<T>.writeToCacheAsynchronously(writeToCacheAsynchronously: Boolean): T","com.apollographql.cache.normalized.writeToCacheAsynchronously"]},{"name":"fun ApolloClient.Builder.cacheManager(cacheManager: CacheManager, writeToCacheAsynchronously: Boolean = false): ApolloClient.Builder","description":"com.apollographql.cache.normalized.cacheManager","location":"normalized-cache/com.apollographql.cache.normalized/cache-manager.html","searchKeys":["cacheManager","fun ApolloClient.Builder.cacheManager(cacheManager: CacheManager, writeToCacheAsynchronously: Boolean = false): ApolloClient.Builder","com.apollographql.cache.normalized.cacheManager"]},{"name":"fun ApolloClient.Builder.logCacheMisses(log: (String) -> Unit = { println(it) }): ApolloClient.Builder","description":"com.apollographql.cache.normalized.logCacheMisses","location":"normalized-cache/com.apollographql.cache.normalized/log-cache-misses.html","searchKeys":["logCacheMisses","fun ApolloClient.Builder.logCacheMisses(log: (String) -> Unit = { println(it) }): ApolloClient.Builder","com.apollographql.cache.normalized.logCacheMisses"]},{"name":"fun ApolloClient.Builder.normalizedCache(normalizedCacheFactory: NormalizedCacheFactory, cacheKeyGenerator: CacheKeyGenerator = com.apollographql.cache.normalized.api.TypePolicyCacheKeyGenerator, metadataGenerator: MetadataGenerator = EmptyMetadataGenerator, cacheResolver: CacheResolver = FieldPolicyCacheResolver, recordMerger: RecordMerger = DefaultRecordMerger, fieldKeyGenerator: FieldKeyGenerator = DefaultFieldKeyGenerator, embeddedFieldsProvider: EmbeddedFieldsProvider = DefaultEmbeddedFieldsProvider, maxAgeProvider: MaxAgeProvider = DefaultMaxAgeProvider, writeToCacheAsynchronously: Boolean = false): ApolloClient.Builder","description":"com.apollographql.cache.normalized.normalizedCache","location":"normalized-cache/com.apollographql.cache.normalized/normalized-cache.html","searchKeys":["normalizedCache","fun ApolloClient.Builder.normalizedCache(normalizedCacheFactory: NormalizedCacheFactory, cacheKeyGenerator: CacheKeyGenerator = com.apollographql.cache.normalized.api.TypePolicyCacheKeyGenerator, metadataGenerator: MetadataGenerator = EmptyMetadataGenerator, cacheResolver: CacheResolver = FieldPolicyCacheResolver, recordMerger: RecordMerger = DefaultRecordMerger, fieldKeyGenerator: FieldKeyGenerator = DefaultFieldKeyGenerator, embeddedFieldsProvider: EmbeddedFieldsProvider = DefaultEmbeddedFieldsProvider, maxAgeProvider: MaxAgeProvider = DefaultMaxAgeProvider, writeToCacheAsynchronously: Boolean = false): ApolloClient.Builder","com.apollographql.cache.normalized.normalizedCache"]},{"name":"fun ApolloStore.garbageCollect(maxAgeProvider: MaxAgeProvider, maxStale: Duration = Duration.ZERO): GarbageCollectResult","description":"com.apollographql.cache.normalized.garbageCollect","location":"normalized-cache/com.apollographql.cache.normalized/garbage-collect.html","searchKeys":["garbageCollect","fun ApolloStore.garbageCollect(maxAgeProvider: MaxAgeProvider, maxStale: Duration = Duration.ZERO): GarbageCollectResult","com.apollographql.cache.normalized.garbageCollect"]},{"name":"fun ApolloStore.removeDanglingReferences(): RemovedFieldsAndRecords","description":"com.apollographql.cache.normalized.removeDanglingReferences","location":"normalized-cache/com.apollographql.cache.normalized/remove-dangling-references.html","searchKeys":["removeDanglingReferences","fun ApolloStore.removeDanglingReferences(): RemovedFieldsAndRecords","com.apollographql.cache.normalized.removeDanglingReferences"]},{"name":"fun ApolloStore.removeStaleFields(maxAgeProvider: MaxAgeProvider, maxStale: Duration = Duration.ZERO): RemovedFieldsAndRecords","description":"com.apollographql.cache.normalized.removeStaleFields","location":"normalized-cache/com.apollographql.cache.normalized/remove-stale-fields.html","searchKeys":["removeStaleFields","fun ApolloStore.removeStaleFields(maxAgeProvider: MaxAgeProvider, maxStale: Duration = Duration.ZERO): RemovedFieldsAndRecords","com.apollographql.cache.normalized.removeStaleFields"]},{"name":"fun ApolloStore.removeUnreachableRecords(): Set<CacheKey>","description":"com.apollographql.cache.normalized.removeUnreachableRecords","location":"normalized-cache/com.apollographql.cache.normalized/remove-unreachable-records.html","searchKeys":["removeUnreachableRecords","fun ApolloStore.removeUnreachableRecords(): Set<CacheKey>","com.apollographql.cache.normalized.removeUnreachableRecords"]},{"name":"fun CacheManager(normalizedCacheFactory: NormalizedCacheFactory, cacheKeyGenerator: CacheKeyGenerator = com.apollographql.cache.normalized.api.TypePolicyCacheKeyGenerator, metadataGenerator: MetadataGenerator = EmptyMetadataGenerator, cacheResolver: CacheResolver = FieldPolicyCacheResolver, recordMerger: RecordMerger = DefaultRecordMerger, fieldKeyGenerator: FieldKeyGenerator = DefaultFieldKeyGenerator, embeddedFieldsProvider: EmbeddedFieldsProvider = DefaultEmbeddedFieldsProvider, maxAgeProvider: MaxAgeProvider = DefaultMaxAgeProvider): CacheManager","description":"com.apollographql.cache.normalized.CacheManager","location":"normalized-cache/com.apollographql.cache.normalized/-cache-manager.html","searchKeys":["CacheManager","fun CacheManager(normalizedCacheFactory: NormalizedCacheFactory, cacheKeyGenerator: CacheKeyGenerator = com.apollographql.cache.normalized.api.TypePolicyCacheKeyGenerator, metadataGenerator: MetadataGenerator = EmptyMetadataGenerator, cacheResolver: CacheResolver = FieldPolicyCacheResolver, recordMerger: RecordMerger = DefaultRecordMerger, fieldKeyGenerator: FieldKeyGenerator = DefaultFieldKeyGenerator, embeddedFieldsProvider: EmbeddedFieldsProvider = DefaultEmbeddedFieldsProvider, maxAgeProvider: MaxAgeProvider = DefaultMaxAgeProvider): CacheManager","com.apollographql.cache.normalized.CacheManager"]},{"name":"fun Collection<Record>?.dependentKeys(): Set<String>","description":"com.apollographql.cache.normalized.api.dependentKeys","location":"normalized-cache/com.apollographql.cache.normalized.api/dependent-keys.html","searchKeys":["dependentKeys","fun Collection<Record>?.dependentKeys(): Set<String>","com.apollographql.cache.normalized.api.dependentKeys"]},{"name":"fun Map<CacheKey, Record>.getReachableCacheKeys(): Set<CacheKey>","description":"com.apollographql.cache.normalized.getReachableCacheKeys","location":"normalized-cache/com.apollographql.cache.normalized/get-reachable-cache-keys.html","searchKeys":["getReachableCacheKeys","fun Map<CacheKey, Record>.getReachableCacheKeys(): Set<CacheKey>","com.apollographql.cache.normalized.getReachableCacheKeys"]},{"name":"fun NormalizedCache.allRecords(): Map<CacheKey, Record>","description":"com.apollographql.cache.normalized.allRecords","location":"normalized-cache/com.apollographql.cache.normalized/all-records.html","searchKeys":["allRecords","fun NormalizedCache.allRecords(): Map<CacheKey, Record>","com.apollographql.cache.normalized.allRecords"]},{"name":"fun NormalizedCache.garbageCollect(maxAgeProvider: MaxAgeProvider, maxStale: Duration = Duration.ZERO): GarbageCollectResult","description":"com.apollographql.cache.normalized.garbageCollect","location":"normalized-cache/com.apollographql.cache.normalized/garbage-collect.html","searchKeys":["garbageCollect","fun NormalizedCache.garbageCollect(maxAgeProvider: MaxAgeProvider, maxStale: Duration = Duration.ZERO): GarbageCollectResult","com.apollographql.cache.normalized.garbageCollect"]},{"name":"fun NormalizedCache.removeDanglingReferences(): RemovedFieldsAndRecords","description":"com.apollographql.cache.normalized.removeDanglingReferences","location":"normalized-cache/com.apollographql.cache.normalized/remove-dangling-references.html","searchKeys":["removeDanglingReferences","fun NormalizedCache.removeDanglingReferences(): RemovedFieldsAndRecords","com.apollographql.cache.normalized.removeDanglingReferences"]},{"name":"fun NormalizedCache.removeStaleFields(maxAgeProvider: MaxAgeProvider, maxStale: Duration = Duration.ZERO): RemovedFieldsAndRecords","description":"com.apollographql.cache.normalized.removeStaleFields","location":"normalized-cache/com.apollographql.cache.normalized/remove-stale-fields.html","searchKeys":["removeStaleFields","fun NormalizedCache.removeStaleFields(maxAgeProvider: MaxAgeProvider, maxStale: Duration = Duration.ZERO): RemovedFieldsAndRecords","com.apollographql.cache.normalized.removeStaleFields"]},{"name":"fun NormalizedCache.removeUnreachableRecords(): Set<CacheKey>","description":"com.apollographql.cache.normalized.removeUnreachableRecords","location":"normalized-cache/com.apollographql.cache.normalized/remove-unreachable-records.html","searchKeys":["removeUnreachableRecords","fun NormalizedCache.removeUnreachableRecords(): Set<CacheKey>","com.apollographql.cache.normalized.removeUnreachableRecords"]},{"name":"fun Record.expirationDate(field: String): Long?","description":"com.apollographql.cache.normalized.api.expirationDate","location":"normalized-cache/com.apollographql.cache.normalized.api/expiration-date.html","searchKeys":["expirationDate","fun Record.expirationDate(field: String): Long?","com.apollographql.cache.normalized.api.expirationDate"]},{"name":"fun Record.receivedDate(field: String): Long?","description":"com.apollographql.cache.normalized.api.receivedDate","location":"normalized-cache/com.apollographql.cache.normalized.api/received-date.html","searchKeys":["receivedDate","fun Record.receivedDate(field: String): Long?","com.apollographql.cache.normalized.api.receivedDate"]},{"name":"fun Record.withDates(receivedDate: String?, expirationDate: String?): Record","description":"com.apollographql.cache.normalized.api.withDates","location":"normalized-cache/com.apollographql.cache.normalized.api/with-dates.html","searchKeys":["withDates","fun Record.withDates(receivedDate: String?, expirationDate: String?): Record","com.apollographql.cache.normalized.api.withDates"]},{"name":"fun ResolverContext.getFieldKey(): String","description":"com.apollographql.cache.normalized.api.getFieldKey","location":"normalized-cache/com.apollographql.cache.normalized.api/get-field-key.html","searchKeys":["getFieldKey","fun ResolverContext.getFieldKey(): String","com.apollographql.cache.normalized.api.getFieldKey"]},{"name":"fun addHeader(headerName: String, headerValue: String): CacheHeaders.Builder","description":"com.apollographql.cache.normalized.api.CacheHeaders.Builder.addHeader","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-headers/-builder/add-header.html","searchKeys":["addHeader","fun addHeader(headerName: String, headerValue: String): CacheHeaders.Builder","com.apollographql.cache.normalized.api.CacheHeaders.Builder.addHeader"]},{"name":"fun addHeaders(headerMap: Map<String, String>): CacheHeaders.Builder","description":"com.apollographql.cache.normalized.api.CacheHeaders.Builder.addHeaders","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-headers/-builder/add-headers.html","searchKeys":["addHeaders","fun addHeaders(headerMap: Map<String, String>): CacheHeaders.Builder","com.apollographql.cache.normalized.api.CacheHeaders.Builder.addHeaders"]},{"name":"fun allArgumentValues(): Map<String, ApolloJsonElement>","description":"com.apollographql.cache.normalized.api.MetadataGeneratorContext.allArgumentValues","location":"normalized-cache/com.apollographql.cache.normalized.api/-metadata-generator-context/all-argument-values.html","searchKeys":["allArgumentValues","fun allArgumentValues(): Map<String, ApolloJsonElement>","com.apollographql.cache.normalized.api.MetadataGeneratorContext.allArgumentValues"]},{"name":"fun argumentValue(argumentName: String): ApolloJsonElement","description":"com.apollographql.cache.normalized.api.MetadataGeneratorContext.argumentValue","location":"normalized-cache/com.apollographql.cache.normalized.api/-metadata-generator-context/argument-value.html","searchKeys":["argumentValue","fun argumentValue(argumentName: String): ApolloJsonElement","com.apollographql.cache.normalized.api.MetadataGeneratorContext.argumentValue"]},{"name":"fun build(): CacheHeaders","description":"com.apollographql.cache.normalized.api.CacheHeaders.Builder.build","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-headers/-builder/build.html","searchKeys":["build","fun build(): CacheHeaders","com.apollographql.cache.normalized.api.CacheHeaders.Builder.build"]},{"name":"fun build(): CacheInfo","description":"com.apollographql.cache.normalized.CacheInfo.Builder.build","location":"normalized-cache/com.apollographql.cache.normalized/-cache-info/-builder/build.html","searchKeys":["build","fun build(): CacheInfo","com.apollographql.cache.normalized.CacheInfo.Builder.build"]},{"name":"fun builder(): CacheHeaders.Builder","description":"com.apollographql.cache.normalized.api.CacheHeaders.Companion.builder","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-headers/-companion/builder.html","searchKeys":["builder","fun builder(): CacheHeaders.Builder","com.apollographql.cache.normalized.api.CacheHeaders.Companion.builder"]},{"name":"fun cacheEndMillis(cacheEndMillis: Long): CacheInfo.Builder","description":"com.apollographql.cache.normalized.CacheInfo.Builder.cacheEndMillis","location":"normalized-cache/com.apollographql.cache.normalized/-cache-info/-builder/cache-end-millis.html","searchKeys":["cacheEndMillis","fun cacheEndMillis(cacheEndMillis: Long): CacheInfo.Builder","com.apollographql.cache.normalized.CacheInfo.Builder.cacheEndMillis"]},{"name":"fun cacheHit(cacheHit: Boolean): CacheInfo.Builder","description":"com.apollographql.cache.normalized.CacheInfo.Builder.cacheHit","location":"normalized-cache/com.apollographql.cache.normalized/-cache-info/-builder/cache-hit.html","searchKeys":["cacheHit","fun cacheHit(cacheHit: Boolean): CacheInfo.Builder","com.apollographql.cache.normalized.CacheInfo.Builder.cacheHit"]},{"name":"fun cacheMissException(cacheMissException: CacheMissException?): CacheInfo.Builder","description":"com.apollographql.cache.normalized.CacheInfo.Builder.cacheMissException","location":"normalized-cache/com.apollographql.cache.normalized/-cache-info/-builder/cache-miss-exception.html","searchKeys":["cacheMissException","fun cacheMissException(cacheMissException: CacheMissException?): CacheInfo.Builder","com.apollographql.cache.normalized.CacheInfo.Builder.cacheMissException"]},{"name":"fun cacheStartMillis(cacheStartMillis: Long): CacheInfo.Builder","description":"com.apollographql.cache.normalized.CacheInfo.Builder.cacheStartMillis","location":"normalized-cache/com.apollographql.cache.normalized/-cache-info/-builder/cache-start-millis.html","searchKeys":["cacheStartMillis","fun cacheStartMillis(cacheStartMillis: Long): CacheInfo.Builder","com.apollographql.cache.normalized.CacheInfo.Builder.cacheStartMillis"]},{"name":"fun chain(factory: NormalizedCacheFactory): MemoryCacheFactory","description":"com.apollographql.cache.normalized.memory.MemoryCacheFactory.chain","location":"normalized-cache/com.apollographql.cache.normalized.memory/-memory-cache-factory/chain.html","searchKeys":["chain","fun chain(factory: NormalizedCacheFactory): MemoryCacheFactory","com.apollographql.cache.normalized.memory.MemoryCacheFactory.chain"]},{"name":"fun clearAll(): Boolean","description":"com.apollographql.cache.normalized.ApolloStore.clearAll","location":"normalized-cache/com.apollographql.cache.normalized/-apollo-store/clear-all.html","searchKeys":["clearAll","fun clearAll(): Boolean","com.apollographql.cache.normalized.ApolloStore.clearAll"]},{"name":"fun dispose()","description":"com.apollographql.cache.normalized.ApolloStore.dispose","location":"normalized-cache/com.apollographql.cache.normalized/-apollo-store/dispose.html","searchKeys":["dispose","fun dispose()","com.apollographql.cache.normalized.ApolloStore.dispose"]},{"name":"fun dump(): Map<KClass<*>, Map<CacheKey, Record>>","description":"com.apollographql.cache.normalized.ApolloStore.dump","location":"normalized-cache/com.apollographql.cache.normalized/-apollo-store/dump.html","searchKeys":["dump","fun dump(): Map<KClass<*>, Map<CacheKey, Record>>","com.apollographql.cache.normalized.ApolloStore.dump"]},{"name":"fun fieldKeys(): Set<String>","description":"com.apollographql.cache.normalized.api.Record.fieldKeys","location":"normalized-cache/com.apollographql.cache.normalized.api/-record/field-keys.html","searchKeys":["fieldKeys","fun fieldKeys(): Set<String>","com.apollographql.cache.normalized.api.Record.fieldKeys"]},{"name":"fun fromCache(fromCache: Boolean): CacheInfo.Builder","description":"com.apollographql.cache.normalized.CacheInfo.Builder.fromCache","location":"normalized-cache/com.apollographql.cache.normalized/-cache-info/-builder/from-cache.html","searchKeys":["fromCache","fun fromCache(fromCache: Boolean): CacheInfo.Builder","com.apollographql.cache.normalized.CacheInfo.Builder.fromCache"]},{"name":"fun hasHeader(headerName: String): Boolean","description":"com.apollographql.cache.normalized.api.CacheHeaders.hasHeader","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-headers/has-header.html","searchKeys":["hasHeader","fun hasHeader(headerName: String): Boolean","com.apollographql.cache.normalized.api.CacheHeaders.hasHeader"]},{"name":"fun headerValue(header: String): String?","description":"com.apollographql.cache.normalized.api.CacheHeaders.headerValue","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-headers/header-value.html","searchKeys":["headerValue","fun headerValue(header: String): String?","com.apollographql.cache.normalized.api.CacheHeaders.headerValue"]},{"name":"fun mergeWith(newRecord: Record): Pair<Record, Set<String>>","description":"com.apollographql.cache.normalized.api.Record.mergeWith","location":"normalized-cache/com.apollographql.cache.normalized.api/-record/merge-with.html","searchKeys":["mergeWith","fun mergeWith(newRecord: Record): Pair<Record, Set<String>>","com.apollographql.cache.normalized.api.Record.mergeWith"]},{"name":"fun networkEndMillis(networkEndMillis: Long): CacheInfo.Builder","description":"com.apollographql.cache.normalized.CacheInfo.Builder.networkEndMillis","location":"normalized-cache/com.apollographql.cache.normalized/-cache-info/-builder/network-end-millis.html","searchKeys":["networkEndMillis","fun networkEndMillis(networkEndMillis: Long): CacheInfo.Builder","com.apollographql.cache.normalized.CacheInfo.Builder.networkEndMillis"]},{"name":"fun networkException(networkException: ApolloException?): CacheInfo.Builder","description":"com.apollographql.cache.normalized.CacheInfo.Builder.networkException","location":"normalized-cache/com.apollographql.cache.normalized/-cache-info/-builder/network-exception.html","searchKeys":["networkException","fun networkException(networkException: ApolloException?): CacheInfo.Builder","com.apollographql.cache.normalized.CacheInfo.Builder.networkException"]},{"name":"fun networkStartMillis(networkStartMillis: Long): CacheInfo.Builder","description":"com.apollographql.cache.normalized.CacheInfo.Builder.networkStartMillis","location":"normalized-cache/com.apollographql.cache.normalized/-cache-info/-builder/network-start-millis.html","searchKeys":["networkStartMillis","fun networkStartMillis(networkStartMillis: Long): CacheInfo.Builder","com.apollographql.cache.normalized.CacheInfo.Builder.networkStartMillis"]},{"name":"fun newBuilder(): CacheHeaders.Builder","description":"com.apollographql.cache.normalized.api.CacheHeaders.newBuilder","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-headers/new-builder.html","searchKeys":["newBuilder","fun newBuilder(): CacheHeaders.Builder","com.apollographql.cache.normalized.api.CacheHeaders.newBuilder"]},{"name":"fun newBuilder(): CacheInfo.Builder","description":"com.apollographql.cache.normalized.CacheInfo.newBuilder","location":"normalized-cache/com.apollographql.cache.normalized/-cache-info/new-builder.html","searchKeys":["newBuilder","fun newBuilder(): CacheInfo.Builder","com.apollographql.cache.normalized.CacheInfo.newBuilder"]},{"name":"fun prettifyDump(dump: Map<KClass<*>, Map<CacheKey, Record>>, showMetadata: Boolean = false): String","description":"com.apollographql.cache.normalized.api.NormalizedCache.Companion.prettifyDump","location":"normalized-cache/com.apollographql.cache.normalized.api/-normalized-cache/-companion/prettify-dump.html","searchKeys":["prettifyDump","fun prettifyDump(dump: Map<KClass<*>, Map<CacheKey, Record>>, showMetadata: Boolean = false): String","com.apollographql.cache.normalized.api.NormalizedCache.Companion.prettifyDump"]},{"name":"fun referencedFields(): List<CacheKey>","description":"com.apollographql.cache.normalized.api.Record.referencedFields","location":"normalized-cache/com.apollographql.cache.normalized.api/-record/referenced-fields.html","searchKeys":["referencedFields","fun referencedFields(): List<CacheKey>","com.apollographql.cache.normalized.api.Record.referencedFields"]},{"name":"fun remove(cacheKey: CacheKey, cascade: Boolean = true): Boolean","description":"com.apollographql.cache.normalized.ApolloStore.remove","location":"normalized-cache/com.apollographql.cache.normalized/-apollo-store/remove.html","searchKeys":["remove","fun remove(cacheKey: CacheKey, cascade: Boolean = true): Boolean","com.apollographql.cache.normalized.ApolloStore.remove"]},{"name":"fun remove(cacheKeys: List<CacheKey>, cascade: Boolean = true): Int","description":"com.apollographql.cache.normalized.ApolloStore.remove","location":"normalized-cache/com.apollographql.cache.normalized/-apollo-store/remove.html","searchKeys":["remove","fun remove(cacheKeys: List<CacheKey>, cascade: Boolean = true): Int","com.apollographql.cache.normalized.ApolloStore.remove"]},{"name":"fun rollbackOptimisticUpdates(mutationId: Uuid): Set<String>","description":"com.apollographql.cache.normalized.ApolloStore.rollbackOptimisticUpdates","location":"normalized-cache/com.apollographql.cache.normalized/-apollo-store/rollback-optimistic-updates.html","searchKeys":["rollbackOptimisticUpdates","fun rollbackOptimisticUpdates(mutationId: Uuid): Set<String>","com.apollographql.cache.normalized.ApolloStore.rollbackOptimisticUpdates"]},{"name":"fun stale(stale: Boolean): CacheInfo.Builder","description":"com.apollographql.cache.normalized.CacheInfo.Builder.stale","location":"normalized-cache/com.apollographql.cache.normalized/-cache-info/-builder/stale.html","searchKeys":["stale","fun stale(stale: Boolean): CacheInfo.Builder","com.apollographql.cache.normalized.CacheInfo.Builder.stale"]},{"name":"fun trim(maxSizeBytes: Long, trimFactor: Float = 0.1f): Long","description":"com.apollographql.cache.normalized.ApolloStore.trim","location":"normalized-cache/com.apollographql.cache.normalized/-apollo-store/trim.html","searchKeys":["trim","fun trim(maxSizeBytes: Long, trimFactor: Float = 0.1f): Long","com.apollographql.cache.normalized.ApolloStore.trim"]},{"name":"fun valueOf(value: String): FetchPolicy","description":"com.apollographql.cache.normalized.FetchPolicy.valueOf","location":"normalized-cache/com.apollographql.cache.normalized/-fetch-policy/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): FetchPolicy","com.apollographql.cache.normalized.FetchPolicy.valueOf"]},{"name":"fun values(): Array<FetchPolicy>","description":"com.apollographql.cache.normalized.FetchPolicy.values","location":"normalized-cache/com.apollographql.cache.normalized/-fetch-policy/values.html","searchKeys":["values","fun values(): Array<FetchPolicy>","com.apollographql.cache.normalized.FetchPolicy.values"]},{"name":"interface CacheKeyGenerator","description":"com.apollographql.cache.normalized.api.CacheKeyGenerator","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-key-generator/index.html","searchKeys":["CacheKeyGenerator","interface CacheKeyGenerator","com.apollographql.cache.normalized.api.CacheKeyGenerator"]},{"name":"interface CacheManager","description":"com.apollographql.cache.normalized.CacheManager","location":"normalized-cache/com.apollographql.cache.normalized/-cache-manager/index.html","searchKeys":["CacheManager","interface CacheManager","com.apollographql.cache.normalized.CacheManager"]},{"name":"interface CacheResolver","description":"com.apollographql.cache.normalized.api.CacheResolver","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-resolver/index.html","searchKeys":["CacheResolver","interface CacheResolver","com.apollographql.cache.normalized.api.CacheResolver"]},{"name":"interface EmbeddedFieldsProvider","description":"com.apollographql.cache.normalized.api.EmbeddedFieldsProvider","location":"normalized-cache/com.apollographql.cache.normalized.api/-embedded-fields-provider/index.html","searchKeys":["EmbeddedFieldsProvider","interface EmbeddedFieldsProvider","com.apollographql.cache.normalized.api.EmbeddedFieldsProvider"]},{"name":"interface FieldKeyGenerator","description":"com.apollographql.cache.normalized.api.FieldKeyGenerator","location":"normalized-cache/com.apollographql.cache.normalized.api/-field-key-generator/index.html","searchKeys":["FieldKeyGenerator","interface FieldKeyGenerator","com.apollographql.cache.normalized.api.FieldKeyGenerator"]},{"name":"interface FieldMerger","description":"com.apollographql.cache.normalized.api.FieldRecordMerger.FieldMerger","location":"normalized-cache/com.apollographql.cache.normalized.api/-field-record-merger/-field-merger/index.html","searchKeys":["FieldMerger","interface FieldMerger","com.apollographql.cache.normalized.api.FieldRecordMerger.FieldMerger"]},{"name":"interface MaxAgeProvider","description":"com.apollographql.cache.normalized.api.MaxAgeProvider","location":"normalized-cache/com.apollographql.cache.normalized.api/-max-age-provider/index.html","searchKeys":["MaxAgeProvider","interface MaxAgeProvider","com.apollographql.cache.normalized.api.MaxAgeProvider"]},{"name":"interface MetadataGenerator","description":"com.apollographql.cache.normalized.api.MetadataGenerator","location":"normalized-cache/com.apollographql.cache.normalized.api/-metadata-generator/index.html","searchKeys":["MetadataGenerator","interface MetadataGenerator","com.apollographql.cache.normalized.api.MetadataGenerator"]},{"name":"interface NormalizedCache : ReadOnlyNormalizedCache","description":"com.apollographql.cache.normalized.api.NormalizedCache","location":"normalized-cache/com.apollographql.cache.normalized.api/-normalized-cache/index.html","searchKeys":["NormalizedCache","interface NormalizedCache : ReadOnlyNormalizedCache","com.apollographql.cache.normalized.api.NormalizedCache"]},{"name":"interface ReadOnlyNormalizedCache","description":"com.apollographql.cache.normalized.api.ReadOnlyNormalizedCache","location":"normalized-cache/com.apollographql.cache.normalized.api/-read-only-normalized-cache/index.html","searchKeys":["ReadOnlyNormalizedCache","interface ReadOnlyNormalizedCache","com.apollographql.cache.normalized.api.ReadOnlyNormalizedCache"]},{"name":"interface RecordMerger","description":"com.apollographql.cache.normalized.api.RecordMerger","location":"normalized-cache/com.apollographql.cache.normalized.api/-record-merger/index.html","searchKeys":["RecordMerger","interface RecordMerger","com.apollographql.cache.normalized.api.RecordMerger"]},{"name":"object ApolloCacheHeaders","description":"com.apollographql.cache.normalized.api.ApolloCacheHeaders","location":"normalized-cache/com.apollographql.cache.normalized.api/-apollo-cache-headers/index.html","searchKeys":["ApolloCacheHeaders","object ApolloCacheHeaders","com.apollographql.cache.normalized.api.ApolloCacheHeaders"]},{"name":"object Companion","description":"com.apollographql.cache.normalized.CacheManager.Companion","location":"normalized-cache/com.apollographql.cache.normalized/-cache-manager/-companion/index.html","searchKeys":["Companion","object Companion","com.apollographql.cache.normalized.CacheManager.Companion"]},{"name":"object Companion","description":"com.apollographql.cache.normalized.api.CacheHeaders.Companion","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-headers/-companion/index.html","searchKeys":["Companion","object Companion","com.apollographql.cache.normalized.api.CacheHeaders.Companion"]},{"name":"object Companion","description":"com.apollographql.cache.normalized.api.CacheKey.Companion","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-key/-companion/index.html","searchKeys":["Companion","object Companion","com.apollographql.cache.normalized.api.CacheKey.Companion"]},{"name":"object Companion","description":"com.apollographql.cache.normalized.api.ConnectionEmbeddedFieldsProvider.Companion","location":"normalized-cache/com.apollographql.cache.normalized.api/-connection-embedded-fields-provider/-companion/index.html","searchKeys":["Companion","object Companion","com.apollographql.cache.normalized.api.ConnectionEmbeddedFieldsProvider.Companion"]},{"name":"object Companion","description":"com.apollographql.cache.normalized.api.ConnectionFieldKeyGenerator.Companion","location":"normalized-cache/com.apollographql.cache.normalized.api/-connection-field-key-generator/-companion/index.html","searchKeys":["Companion","object Companion","com.apollographql.cache.normalized.api.ConnectionFieldKeyGenerator.Companion"]},{"name":"object Companion","description":"com.apollographql.cache.normalized.api.NormalizedCache.Companion","location":"normalized-cache/com.apollographql.cache.normalized.api/-normalized-cache/-companion/index.html","searchKeys":["Companion","object Companion","com.apollographql.cache.normalized.api.NormalizedCache.Companion"]},{"name":"object Companion","description":"com.apollographql.cache.normalized.api.Record.Companion","location":"normalized-cache/com.apollographql.cache.normalized.api/-record/-companion/index.html","searchKeys":["Companion","object Companion","com.apollographql.cache.normalized.api.Record.Companion"]},{"name":"object DefaultCacheResolver : CacheResolver","description":"com.apollographql.cache.normalized.api.DefaultCacheResolver","location":"normalized-cache/com.apollographql.cache.normalized.api/-default-cache-resolver/index.html","searchKeys":["DefaultCacheResolver","object DefaultCacheResolver : CacheResolver","com.apollographql.cache.normalized.api.DefaultCacheResolver"]},{"name":"object DefaultEmbeddedFieldsProvider : EmbeddedFieldsProvider","description":"com.apollographql.cache.normalized.api.DefaultEmbeddedFieldsProvider","location":"normalized-cache/com.apollographql.cache.normalized.api/-default-embedded-fields-provider/index.html","searchKeys":["DefaultEmbeddedFieldsProvider","object DefaultEmbeddedFieldsProvider : EmbeddedFieldsProvider","com.apollographql.cache.normalized.api.DefaultEmbeddedFieldsProvider"]},{"name":"object DefaultFieldKeyGenerator : FieldKeyGenerator","description":"com.apollographql.cache.normalized.api.DefaultFieldKeyGenerator","location":"normalized-cache/com.apollographql.cache.normalized.api/-default-field-key-generator/index.html","searchKeys":["DefaultFieldKeyGenerator","object DefaultFieldKeyGenerator : FieldKeyGenerator","com.apollographql.cache.normalized.api.DefaultFieldKeyGenerator"]},{"name":"object DefaultRecordMerger : RecordMerger","description":"com.apollographql.cache.normalized.api.DefaultRecordMerger","location":"normalized-cache/com.apollographql.cache.normalized.api/-default-record-merger/index.html","searchKeys":["DefaultRecordMerger","object DefaultRecordMerger : RecordMerger","com.apollographql.cache.normalized.api.DefaultRecordMerger"]},{"name":"object EmptyMetadataGenerator : MetadataGenerator","description":"com.apollographql.cache.normalized.api.EmptyMetadataGenerator","location":"normalized-cache/com.apollographql.cache.normalized.api/-empty-metadata-generator/index.html","searchKeys":["EmptyMetadataGenerator","object EmptyMetadataGenerator : MetadataGenerator","com.apollographql.cache.normalized.api.EmptyMetadataGenerator"]},{"name":"object FieldPolicyCacheResolver : CacheResolver","description":"com.apollographql.cache.normalized.api.FieldPolicyCacheResolver","location":"normalized-cache/com.apollographql.cache.normalized.api/-field-policy-cache-resolver/index.html","searchKeys":["FieldPolicyCacheResolver","object FieldPolicyCacheResolver : CacheResolver","com.apollographql.cache.normalized.api.FieldPolicyCacheResolver"]},{"name":"object Key : ExecutionContext.Key<CacheInfo> ","description":"com.apollographql.cache.normalized.CacheInfo.Key","location":"normalized-cache/com.apollographql.cache.normalized/-cache-info/-key/index.html","searchKeys":["Key","object Key : ExecutionContext.Key<CacheInfo> ","com.apollographql.cache.normalized.CacheInfo.Key"]},{"name":"object TypePolicyCacheKeyGenerator : CacheKeyGenerator","description":"com.apollographql.cache.normalized.api.TypePolicyCacheKeyGenerator","location":"normalized-cache/com.apollographql.cache.normalized.api/-type-policy-cache-key-generator/index.html","searchKeys":["TypePolicyCacheKeyGenerator","object TypePolicyCacheKeyGenerator : CacheKeyGenerator","com.apollographql.cache.normalized.api.TypePolicyCacheKeyGenerator"]},{"name":"open fun listOfCacheKeysForField(context: ResolverContext): List<CacheKey?>?","description":"com.apollographql.cache.normalized.api.CacheKeyResolver.listOfCacheKeysForField","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-key-resolver/list-of-cache-keys-for-field.html","searchKeys":["listOfCacheKeysForField","open fun listOfCacheKeysForField(context: ResolverContext): List<CacheKey?>?","com.apollographql.cache.normalized.api.CacheKeyResolver.listOfCacheKeysForField"]},{"name":"open fun trim(maxSizeBytes: Long, trimFactor: Float = 0.1f): Long","description":"com.apollographql.cache.normalized.api.NormalizedCache.trim","location":"normalized-cache/com.apollographql.cache.normalized.api/-normalized-cache/trim.html","searchKeys":["trim","open fun trim(maxSizeBytes: Long, trimFactor: Float = 0.1f): Long","com.apollographql.cache.normalized.api.NormalizedCache.trim"]},{"name":"open override fun <D : Operation.Data> intercept(request: ApolloRequest<D>, chain: ApolloInterceptorChain): Flow<ApolloResponse<D>>","description":"com.apollographql.cache.normalized.CacheMissLoggingInterceptor.intercept","location":"normalized-cache/com.apollographql.cache.normalized/-cache-miss-logging-interceptor/intercept.html","searchKeys":["intercept","open override fun <D : Operation.Data> intercept(request: ApolloRequest<D>, chain: ApolloInterceptorChain): Flow<ApolloResponse<D>>","com.apollographql.cache.normalized.CacheMissLoggingInterceptor.intercept"]},{"name":"open override fun cacheKeyForField(context: ResolverContext): CacheKey?","description":"com.apollographql.cache.normalized.api.IdCacheKeyResolver.cacheKeyForField","location":"normalized-cache/com.apollographql.cache.normalized.api/-id-cache-key-resolver/cache-key-for-field.html","searchKeys":["cacheKeyForField","open override fun cacheKeyForField(context: ResolverContext): CacheKey?","com.apollographql.cache.normalized.api.IdCacheKeyResolver.cacheKeyForField"]},{"name":"open override fun cacheKeyForObject(obj: Map<String, Any?>, context: CacheKeyGeneratorContext): CacheKey?","description":"com.apollographql.cache.normalized.api.IdCacheKeyGenerator.cacheKeyForObject","location":"normalized-cache/com.apollographql.cache.normalized.api/-id-cache-key-generator/cache-key-for-object.html","searchKeys":["cacheKeyForObject","open override fun cacheKeyForObject(obj: Map<String, Any?>, context: CacheKeyGeneratorContext): CacheKey?","com.apollographql.cache.normalized.api.IdCacheKeyGenerator.cacheKeyForObject"]},{"name":"open override fun cacheKeyForObject(obj: Map<String, Any?>, context: CacheKeyGeneratorContext): CacheKey?","description":"com.apollographql.cache.normalized.api.KeyFieldsCacheKeyGenerator.cacheKeyForObject","location":"normalized-cache/com.apollographql.cache.normalized.api/-key-fields-cache-key-generator/cache-key-for-object.html","searchKeys":["cacheKeyForObject","open override fun cacheKeyForObject(obj: Map<String, Any?>, context: CacheKeyGeneratorContext): CacheKey?","com.apollographql.cache.normalized.api.KeyFieldsCacheKeyGenerator.cacheKeyForObject"]},{"name":"open override fun cacheKeyForObject(obj: Map<String, Any?>, context: CacheKeyGeneratorContext): CacheKey?","description":"com.apollographql.cache.normalized.api.TypePolicyCacheKeyGenerator.cacheKeyForObject","location":"normalized-cache/com.apollographql.cache.normalized.api/-type-policy-cache-key-generator/cache-key-for-object.html","searchKeys":["cacheKeyForObject","open override fun cacheKeyForObject(obj: Map<String, Any?>, context: CacheKeyGeneratorContext): CacheKey?","com.apollographql.cache.normalized.api.TypePolicyCacheKeyGenerator.cacheKeyForObject"]},{"name":"open override fun clearAll()","description":"com.apollographql.cache.normalized.memory.MemoryCache.clearAll","location":"normalized-cache/com.apollographql.cache.normalized.memory/-memory-cache/clear-all.html","searchKeys":["clearAll","open override fun clearAll()","com.apollographql.cache.normalized.memory.MemoryCache.clearAll"]},{"name":"open override fun create(): MemoryCache","description":"com.apollographql.cache.normalized.memory.MemoryCacheFactory.create","location":"normalized-cache/com.apollographql.cache.normalized.memory/-memory-cache-factory/create.html","searchKeys":["create","open override fun create(): MemoryCache","com.apollographql.cache.normalized.memory.MemoryCacheFactory.create"]},{"name":"open override fun dump(): Map<KClass<*>, Map<CacheKey, Record>>","description":"com.apollographql.cache.normalized.memory.MemoryCache.dump","location":"normalized-cache/com.apollographql.cache.normalized.memory/-memory-cache/dump.html","searchKeys":["dump","open override fun dump(): Map<KClass<*>, Map<CacheKey, Record>>","com.apollographql.cache.normalized.memory.MemoryCache.dump"]},{"name":"open override fun getEmbeddedFields(context: EmbeddedFieldsContext): List<String>","description":"com.apollographql.cache.normalized.api.ConnectionEmbeddedFieldsProvider.getEmbeddedFields","location":"normalized-cache/com.apollographql.cache.normalized.api/-connection-embedded-fields-provider/get-embedded-fields.html","searchKeys":["getEmbeddedFields","open override fun getEmbeddedFields(context: EmbeddedFieldsContext): List<String>","com.apollographql.cache.normalized.api.ConnectionEmbeddedFieldsProvider.getEmbeddedFields"]},{"name":"open override fun getEmbeddedFields(context: EmbeddedFieldsContext): List<String>","description":"com.apollographql.cache.normalized.api.DefaultEmbeddedFieldsProvider.getEmbeddedFields","location":"normalized-cache/com.apollographql.cache.normalized.api/-default-embedded-fields-provider/get-embedded-fields.html","searchKeys":["getEmbeddedFields","open override fun getEmbeddedFields(context: EmbeddedFieldsContext): List<String>","com.apollographql.cache.normalized.api.DefaultEmbeddedFieldsProvider.getEmbeddedFields"]},{"name":"open override fun getFieldKey(context: FieldKeyContext): String","description":"com.apollographql.cache.normalized.api.ConnectionFieldKeyGenerator.getFieldKey","location":"normalized-cache/com.apollographql.cache.normalized.api/-connection-field-key-generator/get-field-key.html","searchKeys":["getFieldKey","open override fun getFieldKey(context: FieldKeyContext): String","com.apollographql.cache.normalized.api.ConnectionFieldKeyGenerator.getFieldKey"]},{"name":"open override fun getFieldKey(context: FieldKeyContext): String","description":"com.apollographql.cache.normalized.api.DefaultFieldKeyGenerator.getFieldKey","location":"normalized-cache/com.apollographql.cache.normalized.api/-default-field-key-generator/get-field-key.html","searchKeys":["getFieldKey","open override fun getFieldKey(context: FieldKeyContext): String","com.apollographql.cache.normalized.api.DefaultFieldKeyGenerator.getFieldKey"]},{"name":"open override fun getMaxAge(maxAgeContext: MaxAgeContext): Duration","description":"com.apollographql.cache.normalized.api.GlobalMaxAgeProvider.getMaxAge","location":"normalized-cache/com.apollographql.cache.normalized.api/-global-max-age-provider/get-max-age.html","searchKeys":["getMaxAge","open override fun getMaxAge(maxAgeContext: MaxAgeContext): Duration","com.apollographql.cache.normalized.api.GlobalMaxAgeProvider.getMaxAge"]},{"name":"open override fun getMaxAge(maxAgeContext: MaxAgeContext): Duration","description":"com.apollographql.cache.normalized.api.SchemaCoordinatesMaxAgeProvider.getMaxAge","location":"normalized-cache/com.apollographql.cache.normalized.api/-schema-coordinates-max-age-provider/get-max-age.html","searchKeys":["getMaxAge","open override fun getMaxAge(maxAgeContext: MaxAgeContext): Duration","com.apollographql.cache.normalized.api.SchemaCoordinatesMaxAgeProvider.getMaxAge"]},{"name":"open override fun listOfCacheKeysForField(context: ResolverContext): List<CacheKey?>?","description":"com.apollographql.cache.normalized.api.IdCacheKeyResolver.listOfCacheKeysForField","location":"normalized-cache/com.apollographql.cache.normalized.api/-id-cache-key-resolver/list-of-cache-keys-for-field.html","searchKeys":["listOfCacheKeysForField","open override fun listOfCacheKeysForField(context: ResolverContext): List<CacheKey?>?","com.apollographql.cache.normalized.api.IdCacheKeyResolver.listOfCacheKeysForField"]},{"name":"open override fun loadRecord(key: CacheKey, cacheHeaders: CacheHeaders): Record?","description":"com.apollographql.cache.normalized.memory.MemoryCache.loadRecord","location":"normalized-cache/com.apollographql.cache.normalized.memory/-memory-cache/load-record.html","searchKeys":["loadRecord","open override fun loadRecord(key: CacheKey, cacheHeaders: CacheHeaders): Record?","com.apollographql.cache.normalized.memory.MemoryCache.loadRecord"]},{"name":"open override fun loadRecords(keys: Collection<CacheKey>, cacheHeaders: CacheHeaders): Collection<Record>","description":"com.apollographql.cache.normalized.memory.MemoryCache.loadRecords","location":"normalized-cache/com.apollographql.cache.normalized.memory/-memory-cache/load-records.html","searchKeys":["loadRecords","open override fun loadRecords(keys: Collection<CacheKey>, cacheHeaders: CacheHeaders): Collection<Record>","com.apollographql.cache.normalized.memory.MemoryCache.loadRecords"]},{"name":"open override fun merge(context: RecordMergerContext): Pair<Record, Set<String>>","description":"com.apollographql.cache.normalized.api.DefaultRecordMerger.merge","location":"normalized-cache/com.apollographql.cache.normalized.api/-default-record-merger/merge.html","searchKeys":["merge","open override fun merge(context: RecordMergerContext): Pair<Record, Set<String>>","com.apollographql.cache.normalized.api.DefaultRecordMerger.merge"]},{"name":"open override fun merge(context: RecordMergerContext): Pair<Record, Set<String>>","description":"com.apollographql.cache.normalized.api.FieldRecordMerger.merge","location":"normalized-cache/com.apollographql.cache.normalized.api/-field-record-merger/merge.html","searchKeys":["merge","open override fun merge(context: RecordMergerContext): Pair<Record, Set<String>>","com.apollographql.cache.normalized.api.FieldRecordMerger.merge"]},{"name":"open override fun merge(record: Record, cacheHeaders: CacheHeaders, recordMerger: RecordMerger): Set<String>","description":"com.apollographql.cache.normalized.memory.MemoryCache.merge","location":"normalized-cache/com.apollographql.cache.normalized.memory/-memory-cache/merge.html","searchKeys":["merge","open override fun merge(record: Record, cacheHeaders: CacheHeaders, recordMerger: RecordMerger): Set<String>","com.apollographql.cache.normalized.memory.MemoryCache.merge"]},{"name":"open override fun merge(records: Collection<Record>, cacheHeaders: CacheHeaders, recordMerger: RecordMerger): Set<String>","description":"com.apollographql.cache.normalized.memory.MemoryCache.merge","location":"normalized-cache/com.apollographql.cache.normalized.memory/-memory-cache/merge.html","searchKeys":["merge","open override fun merge(records: Collection<Record>, cacheHeaders: CacheHeaders, recordMerger: RecordMerger): Set<String>","com.apollographql.cache.normalized.memory.MemoryCache.merge"]},{"name":"open override fun metadataForObject(obj: ApolloJsonElement, context: MetadataGeneratorContext): Map<String, ApolloJsonElement>","description":"com.apollographql.cache.normalized.api.ConnectionMetadataGenerator.metadataForObject","location":"normalized-cache/com.apollographql.cache.normalized.api/-connection-metadata-generator/metadata-for-object.html","searchKeys":["metadataForObject","open override fun metadataForObject(obj: ApolloJsonElement, context: MetadataGeneratorContext): Map<String, ApolloJsonElement>","com.apollographql.cache.normalized.api.ConnectionMetadataGenerator.metadataForObject"]},{"name":"open override fun metadataForObject(obj: ApolloJsonElement, context: MetadataGeneratorContext): Map<String, ApolloJsonElement>","description":"com.apollographql.cache.normalized.api.EmptyMetadataGenerator.metadataForObject","location":"normalized-cache/com.apollographql.cache.normalized.api/-empty-metadata-generator/metadata-for-object.html","searchKeys":["metadataForObject","open override fun metadataForObject(obj: ApolloJsonElement, context: MetadataGeneratorContext): Map<String, ApolloJsonElement>","com.apollographql.cache.normalized.api.EmptyMetadataGenerator.metadataForObject"]},{"name":"open override fun remove(cacheKey: CacheKey, cascade: Boolean): Boolean","description":"com.apollographql.cache.normalized.memory.MemoryCache.remove","location":"normalized-cache/com.apollographql.cache.normalized.memory/-memory-cache/remove.html","searchKeys":["remove","open override fun remove(cacheKey: CacheKey, cascade: Boolean): Boolean","com.apollographql.cache.normalized.memory.MemoryCache.remove"]},{"name":"open override fun remove(cacheKeys: Collection<CacheKey>, cascade: Boolean): Int","description":"com.apollographql.cache.normalized.memory.MemoryCache.remove","location":"normalized-cache/com.apollographql.cache.normalized.memory/-memory-cache/remove.html","searchKeys":["remove","open override fun remove(cacheKeys: Collection<CacheKey>, cascade: Boolean): Int","com.apollographql.cache.normalized.memory.MemoryCache.remove"]},{"name":"open override fun resolveField(context: ResolverContext): Any?","description":"com.apollographql.cache.normalized.api.CacheControlCacheResolver.resolveField","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-control-cache-resolver/resolve-field.html","searchKeys":["resolveField","open override fun resolveField(context: ResolverContext): Any?","com.apollographql.cache.normalized.api.CacheControlCacheResolver.resolveField"]},{"name":"open override fun resolveField(context: ResolverContext): Any?","description":"com.apollographql.cache.normalized.api.DefaultCacheResolver.resolveField","location":"normalized-cache/com.apollographql.cache.normalized.api/-default-cache-resolver/resolve-field.html","searchKeys":["resolveField","open override fun resolveField(context: ResolverContext): Any?","com.apollographql.cache.normalized.api.DefaultCacheResolver.resolveField"]},{"name":"open override fun resolveField(context: ResolverContext): Any?","description":"com.apollographql.cache.normalized.api.FieldPolicyCacheResolver.resolveField","location":"normalized-cache/com.apollographql.cache.normalized.api/-field-policy-cache-resolver/resolve-field.html","searchKeys":["resolveField","open override fun resolveField(context: ResolverContext): Any?","com.apollographql.cache.normalized.api.FieldPolicyCacheResolver.resolveField"]},{"name":"open override fun toString(): String","description":"com.apollographql.cache.normalized.api.CacheKey.toString","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-key/to-string.html","searchKeys":["toString","open override fun toString(): String","com.apollographql.cache.normalized.api.CacheKey.toString"]},{"name":"open override fun trim(maxSizeBytes: Long, trimFactor: Float): Long","description":"com.apollographql.cache.normalized.memory.MemoryCache.trim","location":"normalized-cache/com.apollographql.cache.normalized.memory/-memory-cache/trim.html","searchKeys":["trim","open override fun trim(maxSizeBytes: Long, trimFactor: Float): Long","com.apollographql.cache.normalized.memory.MemoryCache.trim"]},{"name":"open override val key: ExecutionContext.Key<*>","description":"com.apollographql.cache.normalized.CacheInfo.key","location":"normalized-cache/com.apollographql.cache.normalized/-cache-info/key.html","searchKeys":["key","open override val key: ExecutionContext.Key<*>","com.apollographql.cache.normalized.CacheInfo.key"]},{"name":"operator fun plus(cacheHeaders: CacheHeaders): CacheHeaders","description":"com.apollographql.cache.normalized.api.CacheHeaders.plus","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-headers/plus.html","searchKeys":["plus","operator fun plus(cacheHeaders: CacheHeaders): CacheHeaders","com.apollographql.cache.normalized.api.CacheHeaders.plus"]},{"name":"override fun resolveField(context: ResolverContext): Any?","description":"com.apollographql.cache.normalized.api.CacheKeyResolver.resolveField","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-key-resolver/resolve-field.html","searchKeys":["resolveField","override fun resolveField(context: ResolverContext): Any?","com.apollographql.cache.normalized.api.CacheKeyResolver.resolveField"]},{"name":"sealed interface MaxAge","description":"com.apollographql.cache.normalized.api.MaxAge","location":"normalized-cache/com.apollographql.cache.normalized.api/-max-age/index.html","searchKeys":["MaxAge","sealed interface MaxAge","com.apollographql.cache.normalized.api.MaxAge"]},{"name":"suspend fun publish(keys: Set<String>)","description":"com.apollographql.cache.normalized.ApolloStore.publish","location":"normalized-cache/com.apollographql.cache.normalized/-apollo-store/publish.html","searchKeys":["publish","suspend fun publish(keys: Set<String>)","com.apollographql.cache.normalized.ApolloStore.publish"]},{"name":"typealias DataWithErrors = Map<String, Any?>","description":"com.apollographql.cache.normalized.api.DataWithErrors","location":"normalized-cache/com.apollographql.cache.normalized.api/-data-with-errors/index.html","searchKeys":["DataWithErrors","typealias DataWithErrors = Map<String, Any?>","com.apollographql.cache.normalized.api.DataWithErrors"]},{"name":"typealias RecordValue = Any?","description":"com.apollographql.cache.normalized.api.RecordValue","location":"normalized-cache/com.apollographql.cache.normalized.api/-record-value/index.html","searchKeys":["RecordValue","typealias RecordValue = Any?","com.apollographql.cache.normalized.api.RecordValue"]},{"name":"val <D : Operation.Data> ApolloRequest<D>.fetchFromCache: Boolean","description":"com.apollographql.cache.normalized.fetchFromCache","location":"normalized-cache/com.apollographql.cache.normalized/fetch-from-cache.html","searchKeys":["fetchFromCache","val <D : Operation.Data> ApolloRequest<D>.fetchFromCache: Boolean","com.apollographql.cache.normalized.fetchFromCache"]},{"name":"val <D : Operation.Data> ApolloResponse<D>.cacheHeaders: CacheHeaders","description":"com.apollographql.cache.normalized.cacheHeaders","location":"normalized-cache/com.apollographql.cache.normalized/cache-headers.html","searchKeys":["cacheHeaders","val <D : Operation.Data> ApolloResponse<D>.cacheHeaders: CacheHeaders","com.apollographql.cache.normalized.cacheHeaders"]},{"name":"val <D : Operation.Data> ApolloResponse<D>.cacheInfo: CacheInfo?","description":"com.apollographql.cache.normalized.cacheInfo","location":"normalized-cache/com.apollographql.cache.normalized/cache-info.html","searchKeys":["cacheInfo","val <D : Operation.Data> ApolloResponse<D>.cacheInfo: CacheInfo?","com.apollographql.cache.normalized.cacheInfo"]},{"name":"val <D : Operation.Data> ApolloResponse<D>.isFromCache: Boolean","description":"com.apollographql.cache.normalized.isFromCache","location":"normalized-cache/com.apollographql.cache.normalized/is-from-cache.html","searchKeys":["isFromCache","val <D : Operation.Data> ApolloResponse<D>.isFromCache: Boolean","com.apollographql.cache.normalized.isFromCache"]},{"name":"val ALL_KEYS: AbstractSet<String>","description":"com.apollographql.cache.normalized.CacheManager.Companion.ALL_KEYS","location":"normalized-cache/com.apollographql.cache.normalized/-cache-manager/-companion/-a-l-l_-k-e-y-s.html","searchKeys":["ALL_KEYS","val ALL_KEYS: AbstractSet<String>","com.apollographql.cache.normalized.CacheManager.Companion.ALL_KEYS"]},{"name":"val ApolloClient.apolloStore: ApolloStore","description":"com.apollographql.cache.normalized.apolloStore","location":"normalized-cache/com.apollographql.cache.normalized/apollo-store.html","searchKeys":["apolloStore","val ApolloClient.apolloStore: ApolloStore","com.apollographql.cache.normalized.apolloStore"]},{"name":"val CacheAndNetworkInterceptor: ApolloInterceptor","description":"com.apollographql.cache.normalized.CacheAndNetworkInterceptor","location":"normalized-cache/com.apollographql.cache.normalized/-cache-and-network-interceptor.html","searchKeys":["CacheAndNetworkInterceptor","val CacheAndNetworkInterceptor: ApolloInterceptor","com.apollographql.cache.normalized.CacheAndNetworkInterceptor"]},{"name":"val CacheFirstInterceptor: ApolloInterceptor","description":"com.apollographql.cache.normalized.CacheFirstInterceptor","location":"normalized-cache/com.apollographql.cache.normalized/-cache-first-interceptor.html","searchKeys":["CacheFirstInterceptor","val CacheFirstInterceptor: ApolloInterceptor","com.apollographql.cache.normalized.CacheFirstInterceptor"]},{"name":"val CacheOnlyInterceptor: ApolloInterceptor","description":"com.apollographql.cache.normalized.CacheOnlyInterceptor","location":"normalized-cache/com.apollographql.cache.normalized/-cache-only-interceptor.html","searchKeys":["CacheOnlyInterceptor","val CacheOnlyInterceptor: ApolloInterceptor","com.apollographql.cache.normalized.CacheOnlyInterceptor"]},{"name":"val ConnectionRecordMerger: FieldRecordMerger","description":"com.apollographql.cache.normalized.api.ConnectionRecordMerger","location":"normalized-cache/com.apollographql.cache.normalized.api/-connection-record-merger.html","searchKeys":["ConnectionRecordMerger","val ConnectionRecordMerger: FieldRecordMerger","com.apollographql.cache.normalized.api.ConnectionRecordMerger"]},{"name":"val DefaultMaxAgeProvider: MaxAgeProvider","description":"com.apollographql.cache.normalized.api.DefaultMaxAgeProvider","location":"normalized-cache/com.apollographql.cache.normalized.api/-default-max-age-provider.html","searchKeys":["DefaultMaxAgeProvider","val DefaultMaxAgeProvider: MaxAgeProvider","com.apollographql.cache.normalized.api.DefaultMaxAgeProvider"]},{"name":"val Error.cacheMissException: CacheMissException?","description":"com.apollographql.cache.normalized.cacheMissException","location":"normalized-cache/com.apollographql.cache.normalized/cache-miss-exception.html","searchKeys":["cacheMissException","val Error.cacheMissException: CacheMissException?","com.apollographql.cache.normalized.cacheMissException"]},{"name":"val MUTATION_ROOT: CacheKey","description":"com.apollographql.cache.normalized.api.CacheKey.Companion.MUTATION_ROOT","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-key/-companion/-m-u-t-a-t-i-o-n_-r-o-o-t.html","searchKeys":["MUTATION_ROOT","val MUTATION_ROOT: CacheKey","com.apollographql.cache.normalized.api.CacheKey.Companion.MUTATION_ROOT"]},{"name":"val NONE: CacheHeaders","description":"com.apollographql.cache.normalized.api.CacheHeaders.Companion.NONE","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-headers/-companion/-n-o-n-e.html","searchKeys":["NONE","val NONE: CacheHeaders","com.apollographql.cache.normalized.api.CacheHeaders.Companion.NONE"]},{"name":"val NetworkFirstInterceptor: ApolloInterceptor","description":"com.apollographql.cache.normalized.NetworkFirstInterceptor","location":"normalized-cache/com.apollographql.cache.normalized/-network-first-interceptor.html","searchKeys":["NetworkFirstInterceptor","val NetworkFirstInterceptor: ApolloInterceptor","com.apollographql.cache.normalized.NetworkFirstInterceptor"]},{"name":"val NetworkOnlyInterceptor: ApolloInterceptor","description":"com.apollographql.cache.normalized.NetworkOnlyInterceptor","location":"normalized-cache/com.apollographql.cache.normalized/-network-only-interceptor.html","searchKeys":["NetworkOnlyInterceptor","val NetworkOnlyInterceptor: ApolloInterceptor","com.apollographql.cache.normalized.NetworkOnlyInterceptor"]},{"name":"val QUERY_ROOT: CacheKey","description":"com.apollographql.cache.normalized.api.CacheKey.Companion.QUERY_ROOT","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-key/-companion/-q-u-e-r-y_-r-o-o-t.html","searchKeys":["QUERY_ROOT","val QUERY_ROOT: CacheKey","com.apollographql.cache.normalized.api.CacheKey.Companion.QUERY_ROOT"]},{"name":"val SUBSCRIPTION_ROOT: CacheKey","description":"com.apollographql.cache.normalized.api.CacheKey.Companion.SUBSCRIPTION_ROOT","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-key/-companion/-s-u-b-s-c-r-i-p-t-i-o-n_-r-o-o-t.html","searchKeys":["SUBSCRIPTION_ROOT","val SUBSCRIPTION_ROOT: CacheKey","com.apollographql.cache.normalized.api.CacheKey.Companion.SUBSCRIPTION_ROOT"]},{"name":"val cacheEndMillis: Long","description":"com.apollographql.cache.normalized.CacheInfo.cacheEndMillis","location":"normalized-cache/com.apollographql.cache.normalized/-cache-info/cache-end-millis.html","searchKeys":["cacheEndMillis","val cacheEndMillis: Long","com.apollographql.cache.normalized.CacheInfo.cacheEndMillis"]},{"name":"val cacheHeaders: CacheHeaders","description":"com.apollographql.cache.normalized.CacheManager.ReadResult.cacheHeaders","location":"normalized-cache/com.apollographql.cache.normalized/-cache-manager/-read-result/cache-headers.html","searchKeys":["cacheHeaders","val cacheHeaders: CacheHeaders","com.apollographql.cache.normalized.CacheManager.ReadResult.cacheHeaders"]},{"name":"val cacheHeaders: CacheHeaders","description":"com.apollographql.cache.normalized.api.CacheResolver.ResolvedValue.cacheHeaders","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-resolver/-resolved-value/cache-headers.html","searchKeys":["cacheHeaders","val cacheHeaders: CacheHeaders","com.apollographql.cache.normalized.api.CacheResolver.ResolvedValue.cacheHeaders"]},{"name":"val cacheHeaders: CacheHeaders","description":"com.apollographql.cache.normalized.api.RecordMergerContext.cacheHeaders","location":"normalized-cache/com.apollographql.cache.normalized.api/-record-merger-context/cache-headers.html","searchKeys":["cacheHeaders","val cacheHeaders: CacheHeaders","com.apollographql.cache.normalized.api.RecordMergerContext.cacheHeaders"]},{"name":"val cacheHeaders: CacheHeaders","description":"com.apollographql.cache.normalized.api.ResolverContext.cacheHeaders","location":"normalized-cache/com.apollographql.cache.normalized.api/-resolver-context/cache-headers.html","searchKeys":["cacheHeaders","val cacheHeaders: CacheHeaders","com.apollographql.cache.normalized.api.ResolverContext.cacheHeaders"]},{"name":"val cacheManager: CacheManager","description":"com.apollographql.cache.normalized.ApolloStore.cacheManager","location":"normalized-cache/com.apollographql.cache.normalized/-apollo-store/cache-manager.html","searchKeys":["cacheManager","val cacheManager: CacheManager","com.apollographql.cache.normalized.ApolloStore.cacheManager"]},{"name":"val cacheMissException: CacheMissException?","description":"com.apollographql.cache.normalized.CacheInfo.cacheMissException","location":"normalized-cache/com.apollographql.cache.normalized/-cache-info/cache-miss-exception.html","searchKeys":["cacheMissException","val cacheMissException: CacheMissException?","com.apollographql.cache.normalized.CacheInfo.cacheMissException"]},{"name":"val cacheStartMillis: Long","description":"com.apollographql.cache.normalized.CacheInfo.cacheStartMillis","location":"normalized-cache/com.apollographql.cache.normalized/-cache-info/cache-start-millis.html","searchKeys":["cacheStartMillis","val cacheStartMillis: Long","com.apollographql.cache.normalized.CacheInfo.cacheStartMillis"]},{"name":"val changedKeys: SharedFlow<Set<String>>","description":"com.apollographql.cache.normalized.ApolloStore.changedKeys","location":"normalized-cache/com.apollographql.cache.normalized/-apollo-store/changed-keys.html","searchKeys":["changedKeys","val changedKeys: SharedFlow<Set<String>>","com.apollographql.cache.normalized.ApolloStore.changedKeys"]},{"name":"val customScalarAdapters: CustomScalarAdapters","description":"com.apollographql.cache.normalized.ApolloStore.customScalarAdapters","location":"normalized-cache/com.apollographql.cache.normalized/-apollo-store/custom-scalar-adapters.html","searchKeys":["customScalarAdapters","val customScalarAdapters: CustomScalarAdapters","com.apollographql.cache.normalized.ApolloStore.customScalarAdapters"]},{"name":"val data: D","description":"com.apollographql.cache.normalized.CacheManager.ReadResult.data","location":"normalized-cache/com.apollographql.cache.normalized/-cache-manager/-read-result/data.html","searchKeys":["data","val data: D","com.apollographql.cache.normalized.CacheManager.ReadResult.data"]},{"name":"val duration: Duration","description":"com.apollographql.cache.normalized.api.MaxAge.Duration.duration","location":"normalized-cache/com.apollographql.cache.normalized.api/-max-age/-duration/duration.html","searchKeys":["duration","val duration: Duration","com.apollographql.cache.normalized.api.MaxAge.Duration.duration"]},{"name":"val entries: EnumEntries<FetchPolicy>","description":"com.apollographql.cache.normalized.FetchPolicy.entries","location":"normalized-cache/com.apollographql.cache.normalized/-fetch-policy/entries.html","searchKeys":["entries","val entries: EnumEntries<FetchPolicy>","com.apollographql.cache.normalized.FetchPolicy.entries"]},{"name":"val existing: Record","description":"com.apollographql.cache.normalized.api.RecordMergerContext.existing","location":"normalized-cache/com.apollographql.cache.normalized.api/-record-merger-context/existing.html","searchKeys":["existing","val existing: Record","com.apollographql.cache.normalized.api.RecordMergerContext.existing"]},{"name":"val field: CompiledField","description":"com.apollographql.cache.normalized.api.CacheKeyGeneratorContext.field","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-key-generator-context/field.html","searchKeys":["field","val field: CompiledField","com.apollographql.cache.normalized.api.CacheKeyGeneratorContext.field"]},{"name":"val field: CompiledField","description":"com.apollographql.cache.normalized.api.FieldKeyContext.field","location":"normalized-cache/com.apollographql.cache.normalized.api/-field-key-context/field.html","searchKeys":["field","val field: CompiledField","com.apollographql.cache.normalized.api.FieldKeyContext.field"]},{"name":"val field: CompiledField","description":"com.apollographql.cache.normalized.api.MetadataGeneratorContext.field","location":"normalized-cache/com.apollographql.cache.normalized.api/-metadata-generator-context/field.html","searchKeys":["field","val field: CompiledField","com.apollographql.cache.normalized.api.MetadataGeneratorContext.field"]},{"name":"val field: CompiledField","description":"com.apollographql.cache.normalized.api.ResolverContext.field","location":"normalized-cache/com.apollographql.cache.normalized.api/-resolver-context/field.html","searchKeys":["field","val field: CompiledField","com.apollographql.cache.normalized.api.ResolverContext.field"]},{"name":"val fieldKeyGenerator: FieldKeyGenerator","description":"com.apollographql.cache.normalized.api.ResolverContext.fieldKeyGenerator","location":"normalized-cache/com.apollographql.cache.normalized.api/-resolver-context/field-key-generator.html","searchKeys":["fieldKeyGenerator","val fieldKeyGenerator: FieldKeyGenerator","com.apollographql.cache.normalized.api.ResolverContext.fieldKeyGenerator"]},{"name":"val fieldPath: List<MaxAgeContext.Field>","description":"com.apollographql.cache.normalized.api.MaxAgeContext.fieldPath","location":"normalized-cache/com.apollographql.cache.normalized.api/-max-age-context/field-path.html","searchKeys":["fieldPath","val fieldPath: List<MaxAgeContext.Field>","com.apollographql.cache.normalized.api.MaxAgeContext.fieldPath"]},{"name":"val fields: Map<String, RecordValue>","description":"com.apollographql.cache.normalized.api.Record.fields","location":"normalized-cache/com.apollographql.cache.normalized.api/-record/fields.html","searchKeys":["fields","val fields: Map<String, RecordValue>","com.apollographql.cache.normalized.api.Record.fields"]},{"name":"val implements: List<MaxAgeContext.Type>","description":"com.apollographql.cache.normalized.api.MaxAgeContext.Type.implements","location":"normalized-cache/com.apollographql.cache.normalized.api/-max-age-context/-type/implements.html","searchKeys":["implements","val implements: List<MaxAgeContext.Type>","com.apollographql.cache.normalized.api.MaxAgeContext.Type.implements"]},{"name":"val incoming: Record","description":"com.apollographql.cache.normalized.api.RecordMergerContext.incoming","location":"normalized-cache/com.apollographql.cache.normalized.api/-record-merger-context/incoming.html","searchKeys":["incoming","val incoming: Record","com.apollographql.cache.normalized.api.RecordMergerContext.incoming"]},{"name":"val isCacheHit: Boolean","description":"com.apollographql.cache.normalized.CacheInfo.isCacheHit","location":"normalized-cache/com.apollographql.cache.normalized/-cache-info/is-cache-hit.html","searchKeys":["isCacheHit","val isCacheHit: Boolean","com.apollographql.cache.normalized.CacheInfo.isCacheHit"]},{"name":"val isComposite: Boolean","description":"com.apollographql.cache.normalized.api.MaxAgeContext.Type.isComposite","location":"normalized-cache/com.apollographql.cache.normalized.api/-max-age-context/-type/is-composite.html","searchKeys":["isComposite","val isComposite: Boolean","com.apollographql.cache.normalized.api.MaxAgeContext.Type.isComposite"]},{"name":"val isFromCache: Boolean","description":"com.apollographql.cache.normalized.CacheInfo.isFromCache","location":"normalized-cache/com.apollographql.cache.normalized/-cache-info/is-from-cache.html","searchKeys":["isFromCache","val isFromCache: Boolean","com.apollographql.cache.normalized.CacheInfo.isFromCache"]},{"name":"val isStale: Boolean","description":"com.apollographql.cache.normalized.CacheInfo.isStale","location":"normalized-cache/com.apollographql.cache.normalized/-cache-info/is-stale.html","searchKeys":["isStale","val isStale: Boolean","com.apollographql.cache.normalized.CacheInfo.isStale"]},{"name":"val key: CacheKey","description":"com.apollographql.cache.normalized.api.Record.key","location":"normalized-cache/com.apollographql.cache.normalized.api/-record/key.html","searchKeys":["key","val key: CacheKey","com.apollographql.cache.normalized.api.Record.key"]},{"name":"val key: String","description":"com.apollographql.cache.normalized.api.CacheKey.key","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-key/key.html","searchKeys":["key","val key: String","com.apollographql.cache.normalized.api.CacheKey.key"]},{"name":"val metadata: Map<String, ApolloJsonElement>","description":"com.apollographql.cache.normalized.api.FieldRecordMerger.FieldInfo.metadata","location":"normalized-cache/com.apollographql.cache.normalized.api/-field-record-merger/-field-info/metadata.html","searchKeys":["metadata","val metadata: Map<String, ApolloJsonElement>","com.apollographql.cache.normalized.api.FieldRecordMerger.FieldInfo.metadata"]},{"name":"val metadata: Map<String, Map<String, ApolloJsonElement>>","description":"com.apollographql.cache.normalized.api.Record.metadata","location":"normalized-cache/com.apollographql.cache.normalized.api/-record/metadata.html","searchKeys":["metadata","val metadata: Map<String, Map<String, ApolloJsonElement>>","com.apollographql.cache.normalized.api.Record.metadata"]},{"name":"val mutationId: Uuid? = null","description":"com.apollographql.cache.normalized.api.Record.mutationId","location":"normalized-cache/com.apollographql.cache.normalized.api/-record/mutation-id.html","searchKeys":["mutationId","val mutationId: Uuid? = null","com.apollographql.cache.normalized.api.Record.mutationId"]},{"name":"val name: String","description":"com.apollographql.cache.normalized.api.MaxAgeContext.Field.name","location":"normalized-cache/com.apollographql.cache.normalized.api/-max-age-context/-field/name.html","searchKeys":["name","val name: String","com.apollographql.cache.normalized.api.MaxAgeContext.Field.name"]},{"name":"val name: String","description":"com.apollographql.cache.normalized.api.MaxAgeContext.Type.name","location":"normalized-cache/com.apollographql.cache.normalized.api/-max-age-context/-type/name.html","searchKeys":["name","val name: String","com.apollographql.cache.normalized.api.MaxAgeContext.Type.name"]},{"name":"val networkEndMillis: Long","description":"com.apollographql.cache.normalized.CacheInfo.networkEndMillis","location":"normalized-cache/com.apollographql.cache.normalized/-cache-info/network-end-millis.html","searchKeys":["networkEndMillis","val networkEndMillis: Long","com.apollographql.cache.normalized.CacheInfo.networkEndMillis"]},{"name":"val networkException: ApolloException?","description":"com.apollographql.cache.normalized.CacheInfo.networkException","location":"normalized-cache/com.apollographql.cache.normalized/-cache-info/network-exception.html","searchKeys":["networkException","val networkException: ApolloException?","com.apollographql.cache.normalized.CacheInfo.networkException"]},{"name":"val networkStartMillis: Long","description":"com.apollographql.cache.normalized.CacheInfo.networkStartMillis","location":"normalized-cache/com.apollographql.cache.normalized/-cache-info/network-start-millis.html","searchKeys":["networkStartMillis","val networkStartMillis: Long","com.apollographql.cache.normalized.CacheInfo.networkStartMillis"]},{"name":"val parent: Map<String, Any?>","description":"com.apollographql.cache.normalized.api.ResolverContext.parent","location":"normalized-cache/com.apollographql.cache.normalized.api/-resolver-context/parent.html","searchKeys":["parent","val parent: Map<String, Any?>","com.apollographql.cache.normalized.api.ResolverContext.parent"]},{"name":"val parentKey: CacheKey","description":"com.apollographql.cache.normalized.api.ResolverContext.parentKey","location":"normalized-cache/com.apollographql.cache.normalized.api/-resolver-context/parent-key.html","searchKeys":["parentKey","val parentKey: CacheKey","com.apollographql.cache.normalized.api.ResolverContext.parentKey"]},{"name":"val parentType: CompiledNamedType","description":"com.apollographql.cache.normalized.api.EmbeddedFieldsContext.parentType","location":"normalized-cache/com.apollographql.cache.normalized.api/-embedded-fields-context/parent-type.html","searchKeys":["parentType","val parentType: CompiledNamedType","com.apollographql.cache.normalized.api.EmbeddedFieldsContext.parentType"]},{"name":"val parentType: String","description":"com.apollographql.cache.normalized.api.FieldKeyContext.parentType","location":"normalized-cache/com.apollographql.cache.normalized.api/-field-key-context/parent-type.html","searchKeys":["parentType","val parentType: String","com.apollographql.cache.normalized.api.FieldKeyContext.parentType"]},{"name":"val parentType: String","description":"com.apollographql.cache.normalized.api.ResolverContext.parentType","location":"normalized-cache/com.apollographql.cache.normalized.api/-resolver-context/parent-type.html","searchKeys":["parentType","val parentType: String","com.apollographql.cache.normalized.api.ResolverContext.parentType"]},{"name":"val path: List<CompiledField>","description":"com.apollographql.cache.normalized.api.ResolverContext.path","location":"normalized-cache/com.apollographql.cache.normalized.api/-resolver-context/path.html","searchKeys":["path","val path: List<CompiledField>","com.apollographql.cache.normalized.api.ResolverContext.path"]},{"name":"val removedDanglingReferences: RemovedFieldsAndRecords","description":"com.apollographql.cache.normalized.GarbageCollectResult.removedDanglingReferences","location":"normalized-cache/com.apollographql.cache.normalized/-garbage-collect-result/removed-dangling-references.html","searchKeys":["removedDanglingReferences","val removedDanglingReferences: RemovedFieldsAndRecords","com.apollographql.cache.normalized.GarbageCollectResult.removedDanglingReferences"]},{"name":"val removedFields: Set<String>","description":"com.apollographql.cache.normalized.RemovedFieldsAndRecords.removedFields","location":"normalized-cache/com.apollographql.cache.normalized/-removed-fields-and-records/removed-fields.html","searchKeys":["removedFields","val removedFields: Set<String>","com.apollographql.cache.normalized.RemovedFieldsAndRecords.removedFields"]},{"name":"val removedRecords: Set<CacheKey>","description":"com.apollographql.cache.normalized.RemovedFieldsAndRecords.removedRecords","location":"normalized-cache/com.apollographql.cache.normalized/-removed-fields-and-records/removed-records.html","searchKeys":["removedRecords","val removedRecords: Set<CacheKey>","com.apollographql.cache.normalized.RemovedFieldsAndRecords.removedRecords"]},{"name":"val removedStaleFields: RemovedFieldsAndRecords","description":"com.apollographql.cache.normalized.GarbageCollectResult.removedStaleFields","location":"normalized-cache/com.apollographql.cache.normalized/-garbage-collect-result/removed-stale-fields.html","searchKeys":["removedStaleFields","val removedStaleFields: RemovedFieldsAndRecords","com.apollographql.cache.normalized.GarbageCollectResult.removedStaleFields"]},{"name":"val removedUnreachableRecords: Set<CacheKey>","description":"com.apollographql.cache.normalized.GarbageCollectResult.removedUnreachableRecords","location":"normalized-cache/com.apollographql.cache.normalized/-garbage-collect-result/removed-unreachable-records.html","searchKeys":["removedUnreachableRecords","val removedUnreachableRecords: Set<CacheKey>","com.apollographql.cache.normalized.GarbageCollectResult.removedUnreachableRecords"]},{"name":"val size: Int","description":"com.apollographql.cache.normalized.memory.MemoryCache.size","location":"normalized-cache/com.apollographql.cache.normalized.memory/-memory-cache/size.html","searchKeys":["size","val size: Int","com.apollographql.cache.normalized.memory.MemoryCache.size"]},{"name":"val sizeInBytes: Int","description":"com.apollographql.cache.normalized.api.Record.sizeInBytes","location":"normalized-cache/com.apollographql.cache.normalized.api/-record/size-in-bytes.html","searchKeys":["sizeInBytes","val sizeInBytes: Int","com.apollographql.cache.normalized.api.Record.sizeInBytes"]},{"name":"val type: MaxAgeContext.Type","description":"com.apollographql.cache.normalized.api.MaxAgeContext.Field.type","location":"normalized-cache/com.apollographql.cache.normalized.api/-max-age-context/-field/type.html","searchKeys":["type","val type: MaxAgeContext.Type","com.apollographql.cache.normalized.api.MaxAgeContext.Field.type"]},{"name":"val value: Any?","description":"com.apollographql.cache.normalized.api.CacheResolver.ResolvedValue.value","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-resolver/-resolved-value/value.html","searchKeys":["value","val value: Any?","com.apollographql.cache.normalized.api.CacheResolver.ResolvedValue.value"]},{"name":"val value: Any?","description":"com.apollographql.cache.normalized.api.FieldRecordMerger.FieldInfo.value","location":"normalized-cache/com.apollographql.cache.normalized.api/-field-record-merger/-field-info/value.html","searchKeys":["value","val value: Any?","com.apollographql.cache.normalized.api.FieldRecordMerger.FieldInfo.value"]},{"name":"val variables: Executable.Variables","description":"com.apollographql.cache.normalized.api.CacheKeyGeneratorContext.variables","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-key-generator-context/variables.html","searchKeys":["variables","val variables: Executable.Variables","com.apollographql.cache.normalized.api.CacheKeyGeneratorContext.variables"]},{"name":"val variables: Executable.Variables","description":"com.apollographql.cache.normalized.api.FieldKeyContext.variables","location":"normalized-cache/com.apollographql.cache.normalized.api/-field-key-context/variables.html","searchKeys":["variables","val variables: Executable.Variables","com.apollographql.cache.normalized.api.FieldKeyContext.variables"]},{"name":"val variables: Executable.Variables","description":"com.apollographql.cache.normalized.api.MetadataGeneratorContext.variables","location":"normalized-cache/com.apollographql.cache.normalized.api/-metadata-generator-context/variables.html","searchKeys":["variables","val variables: Executable.Variables","com.apollographql.cache.normalized.api.MetadataGeneratorContext.variables"]},{"name":"val variables: Executable.Variables","description":"com.apollographql.cache.normalized.api.ResolverContext.variables","location":"normalized-cache/com.apollographql.cache.normalized.api/-resolver-context/variables.html","searchKeys":["variables","val variables: Executable.Variables","com.apollographql.cache.normalized.api.ResolverContext.variables"]},{"name":"value class CacheKey(val key: String)","description":"com.apollographql.cache.normalized.api.CacheKey","location":"normalized-cache/com.apollographql.cache.normalized.api/-cache-key/index.html","searchKeys":["CacheKey","value class CacheKey(val key: String)","com.apollographql.cache.normalized.api.CacheKey"]}]