[{"name":"CacheAndNetwork","description":"com.apollographql.cache.normalized.FetchPolicy.CacheAndNetwork","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-fetch-policy/-cache-and-network/index.html","searchKeys":["CacheAndNetwork","CacheAndNetwork","com.apollographql.cache.normalized.FetchPolicy.CacheAndNetwork"]},{"name":"CacheFirst","description":"com.apollographql.cache.normalized.FetchPolicy.CacheFirst","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-fetch-policy/-cache-first/index.html","searchKeys":["CacheFirst","CacheFirst","com.apollographql.cache.normalized.FetchPolicy.CacheFirst"]},{"name":"CacheOnly","description":"com.apollographql.cache.normalized.FetchPolicy.CacheOnly","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-fetch-policy/-cache-only/index.html","searchKeys":["CacheOnly","CacheOnly","com.apollographql.cache.normalized.FetchPolicy.CacheOnly"]},{"name":"NetworkFirst","description":"com.apollographql.cache.normalized.FetchPolicy.NetworkFirst","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-fetch-policy/-network-first/index.html","searchKeys":["NetworkFirst","NetworkFirst","com.apollographql.cache.normalized.FetchPolicy.NetworkFirst"]},{"name":"NetworkOnly","description":"com.apollographql.cache.normalized.FetchPolicy.NetworkOnly","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-fetch-policy/-network-only/index.html","searchKeys":["NetworkOnly","NetworkOnly","com.apollographql.cache.normalized.FetchPolicy.NetworkOnly"]},{"name":"abstract class CacheKeyResolver : CacheResolver","description":"com.apollographql.cache.normalized.api.CacheKeyResolver","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-key-resolver/index.html","searchKeys":["CacheKeyResolver","abstract class CacheKeyResolver : CacheResolver","com.apollographql.cache.normalized.api.CacheKeyResolver"]},{"name":"abstract class NormalizedCacheFactory","description":"com.apollographql.cache.normalized.api.NormalizedCacheFactory","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-normalized-cache-factory/index.html","searchKeys":["NormalizedCacheFactory","abstract class NormalizedCacheFactory","com.apollographql.cache.normalized.api.NormalizedCacheFactory"]},{"name":"abstract fun <D : Fragment.Data> readFragment(fragment: Fragment<D>, cacheKey: CacheKey, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty, cacheHeaders: CacheHeaders = CacheHeaders.NONE): D","description":"com.apollographql.cache.normalized.ApolloStore.readFragment","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-apollo-store/read-fragment.html","searchKeys":["readFragment","abstract fun <D : Fragment.Data> readFragment(fragment: Fragment<D>, cacheKey: CacheKey, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty, cacheHeaders: CacheHeaders = CacheHeaders.NONE): D","com.apollographql.cache.normalized.ApolloStore.readFragment"]},{"name":"abstract fun <D : Fragment.Data> writeFragment(fragment: Fragment<D>, cacheKey: CacheKey, fragmentData: D, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty, cacheHeaders: CacheHeaders = CacheHeaders.NONE): Set<String>","description":"com.apollographql.cache.normalized.ApolloStore.writeFragment","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-apollo-store/write-fragment.html","searchKeys":["writeFragment","abstract fun <D : Fragment.Data> writeFragment(fragment: Fragment<D>, cacheKey: CacheKey, fragmentData: D, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty, cacheHeaders: CacheHeaders = CacheHeaders.NONE): Set<String>","com.apollographql.cache.normalized.ApolloStore.writeFragment"]},{"name":"abstract fun <D : Operation.Data> normalize(operation: Operation<D>, data: D, customScalarAdapters: CustomScalarAdapters): Map<String, Record>","description":"com.apollographql.cache.normalized.ApolloStore.normalize","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-apollo-store/normalize.html","searchKeys":["normalize","abstract fun <D : Operation.Data> normalize(operation: Operation<D>, data: D, customScalarAdapters: CustomScalarAdapters): Map<String, Record>","com.apollographql.cache.normalized.ApolloStore.normalize"]},{"name":"abstract fun <D : Operation.Data> readOperation(operation: Operation<D>, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty, cacheHeaders: CacheHeaders = CacheHeaders.NONE): D","description":"com.apollographql.cache.normalized.ApolloStore.readOperation","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-apollo-store/read-operation.html","searchKeys":["readOperation","abstract fun <D : Operation.Data> readOperation(operation: Operation<D>, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty, cacheHeaders: CacheHeaders = CacheHeaders.NONE): D","com.apollographql.cache.normalized.ApolloStore.readOperation"]},{"name":"abstract fun <D : Operation.Data> writeOperation(operation: Operation<D>, operationData: D, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty, cacheHeaders: CacheHeaders = CacheHeaders.NONE): Set<String>","description":"com.apollographql.cache.normalized.ApolloStore.writeOperation","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-apollo-store/write-operation.html","searchKeys":["writeOperation","abstract fun <D : Operation.Data> writeOperation(operation: Operation<D>, operationData: D, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty, cacheHeaders: CacheHeaders = CacheHeaders.NONE): Set<String>","com.apollographql.cache.normalized.ApolloStore.writeOperation"]},{"name":"abstract fun <D : Operation.Data> writeOptimisticUpdates(operation: Operation<D>, operationData: D, mutationId: Uuid, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty): Set<String>","description":"com.apollographql.cache.normalized.ApolloStore.writeOptimisticUpdates","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-apollo-store/write-optimistic-updates.html","searchKeys":["writeOptimisticUpdates","abstract fun <D : Operation.Data> writeOptimisticUpdates(operation: Operation<D>, operationData: D, mutationId: Uuid, customScalarAdapters: CustomScalarAdapters = CustomScalarAdapters.Empty): Set<String>","com.apollographql.cache.normalized.ApolloStore.writeOptimisticUpdates"]},{"name":"abstract fun <R> accessCache(block: (NormalizedCache) -> R): R","description":"com.apollographql.cache.normalized.ApolloStore.accessCache","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-apollo-store/access-cache.html","searchKeys":["accessCache","abstract fun <R> accessCache(block: (NormalizedCache) -> R): R","com.apollographql.cache.normalized.ApolloStore.accessCache"]},{"name":"abstract fun cacheKeyForField(context: ResolverContext): CacheKey?","description":"com.apollographql.cache.normalized.api.CacheKeyResolver.cacheKeyForField","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-key-resolver/cache-key-for-field.html","searchKeys":["cacheKeyForField","abstract fun cacheKeyForField(context: ResolverContext): CacheKey?","com.apollographql.cache.normalized.api.CacheKeyResolver.cacheKeyForField"]},{"name":"abstract fun cacheKeyForObject(obj: Map<String, Any?>, context: CacheKeyGeneratorContext): CacheKey?","description":"com.apollographql.cache.normalized.api.CacheKeyGenerator.cacheKeyForObject","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-key-generator/cache-key-for-object.html","searchKeys":["cacheKeyForObject","abstract fun cacheKeyForObject(obj: Map<String, Any?>, context: CacheKeyGeneratorContext): CacheKey?","com.apollographql.cache.normalized.api.CacheKeyGenerator.cacheKeyForObject"]},{"name":"abstract fun clearAll()","description":"com.apollographql.cache.normalized.api.NormalizedCache.clearAll","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-normalized-cache/clear-all.html","searchKeys":["clearAll","abstract fun clearAll()","com.apollographql.cache.normalized.api.NormalizedCache.clearAll"]},{"name":"abstract fun clearAll(): Boolean","description":"com.apollographql.cache.normalized.ApolloStore.clearAll","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-apollo-store/clear-all.html","searchKeys":["clearAll","abstract fun clearAll(): Boolean","com.apollographql.cache.normalized.ApolloStore.clearAll"]},{"name":"abstract fun create(): NormalizedCache","description":"com.apollographql.cache.normalized.api.NormalizedCacheFactory.create","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-normalized-cache-factory/create.html","searchKeys":["create","abstract fun create(): NormalizedCache","com.apollographql.cache.normalized.api.NormalizedCacheFactory.create"]},{"name":"abstract fun dispose()","description":"com.apollographql.cache.normalized.ApolloStore.dispose","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-apollo-store/dispose.html","searchKeys":["dispose","abstract fun dispose()","com.apollographql.cache.normalized.ApolloStore.dispose"]},{"name":"abstract fun dump(): Map<KClass<*>, Map<String, Record>>","description":"com.apollographql.cache.normalized.ApolloStore.dump","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-apollo-store/dump.html","searchKeys":["dump","abstract fun dump(): Map<KClass<*>, Map<String, Record>>","com.apollographql.cache.normalized.ApolloStore.dump"]},{"name":"abstract fun dump(): Map<KClass<*>, Map<String, Record>>","description":"com.apollographql.cache.normalized.api.ReadOnlyNormalizedCache.dump","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-read-only-normalized-cache/dump.html","searchKeys":["dump","abstract fun dump(): Map<KClass<*>, Map<String, Record>>","com.apollographql.cache.normalized.api.ReadOnlyNormalizedCache.dump"]},{"name":"abstract fun getAllPresent(): Map<Key, Value>","description":"com.apollographql.cache.normalized.api.internal.store.Cache.getAllPresent","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal.store/-cache/get-all-present.html","searchKeys":["getAllPresent","abstract fun getAllPresent(): Map<Key, Value>","com.apollographql.cache.normalized.api.internal.store.Cache.getAllPresent"]},{"name":"abstract fun getAllPresent(keys: List<*>): Map<Key, Value>","description":"com.apollographql.cache.normalized.api.internal.store.Cache.getAllPresent","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal.store/-cache/get-all-present.html","searchKeys":["getAllPresent","abstract fun getAllPresent(keys: List<*>): Map<Key, Value>","com.apollographql.cache.normalized.api.internal.store.Cache.getAllPresent"]},{"name":"abstract fun getEmbeddedFields(context: EmbeddedFieldsContext): List<String>","description":"com.apollographql.cache.normalized.api.EmbeddedFieldsProvider.getEmbeddedFields","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-embedded-fields-provider/get-embedded-fields.html","searchKeys":["getEmbeddedFields","abstract fun getEmbeddedFields(context: EmbeddedFieldsContext): List<String>","com.apollographql.cache.normalized.api.EmbeddedFieldsProvider.getEmbeddedFields"]},{"name":"abstract fun getFieldKey(context: FieldKeyContext): String","description":"com.apollographql.cache.normalized.api.FieldKeyGenerator.getFieldKey","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-field-key-generator/get-field-key.html","searchKeys":["getFieldKey","abstract fun getFieldKey(context: FieldKeyContext): String","com.apollographql.cache.normalized.api.FieldKeyGenerator.getFieldKey"]},{"name":"abstract fun getIfPresent(key: Key): Value?","description":"com.apollographql.cache.normalized.api.internal.store.Cache.getIfPresent","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal.store/-cache/get-if-present.html","searchKeys":["getIfPresent","abstract fun getIfPresent(key: Key): Value?","com.apollographql.cache.normalized.api.internal.store.Cache.getIfPresent"]},{"name":"abstract fun getOrPut(key: Key, valueProducer: () -> Value): Value","description":"com.apollographql.cache.normalized.api.internal.store.Cache.getOrPut","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal.store/-cache/get-or-put.html","searchKeys":["getOrPut","abstract fun getOrPut(key: Key, valueProducer: () -> Value): Value","com.apollographql.cache.normalized.api.internal.store.Cache.getOrPut"]},{"name":"abstract fun invalidate(key: Key)","description":"com.apollographql.cache.normalized.api.internal.store.Cache.invalidate","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal.store/-cache/invalidate.html","searchKeys":["invalidate","abstract fun invalidate(key: Key)","com.apollographql.cache.normalized.api.internal.store.Cache.invalidate"]},{"name":"abstract fun invalidateAll()","description":"com.apollographql.cache.normalized.api.internal.store.Cache.invalidateAll","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal.store/-cache/invalidate-all.html","searchKeys":["invalidateAll","abstract fun invalidateAll()","com.apollographql.cache.normalized.api.internal.store.Cache.invalidateAll"]},{"name":"abstract fun invalidateAll(keys: List<Key>)","description":"com.apollographql.cache.normalized.api.internal.store.Cache.invalidateAll","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal.store/-cache/invalidate-all.html","searchKeys":["invalidateAll","abstract fun invalidateAll(keys: List<Key>)","com.apollographql.cache.normalized.api.internal.store.Cache.invalidateAll"]},{"name":"abstract fun loadRecord(key: String, cacheHeaders: CacheHeaders): Record?","description":"com.apollographql.cache.normalized.api.ReadOnlyNormalizedCache.loadRecord","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-read-only-normalized-cache/load-record.html","searchKeys":["loadRecord","abstract fun loadRecord(key: String, cacheHeaders: CacheHeaders): Record?","com.apollographql.cache.normalized.api.ReadOnlyNormalizedCache.loadRecord"]},{"name":"abstract fun loadRecords(keys: Collection<String>, cacheHeaders: CacheHeaders): Collection<Record>","description":"com.apollographql.cache.normalized.api.ReadOnlyNormalizedCache.loadRecords","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-read-only-normalized-cache/load-records.html","searchKeys":["loadRecords","abstract fun loadRecords(keys: Collection<String>, cacheHeaders: CacheHeaders): Collection<Record>","com.apollographql.cache.normalized.api.ReadOnlyNormalizedCache.loadRecords"]},{"name":"abstract fun merge(existing: Record, incoming: Record): Pair<Record, Set<String>>","description":"com.apollographql.cache.normalized.api.RecordMerger.merge","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-record-merger/merge.html","searchKeys":["merge","abstract fun merge(existing: Record, incoming: Record): Pair<Record, Set<String>>","com.apollographql.cache.normalized.api.RecordMerger.merge"]},{"name":"abstract fun merge(record: Record, cacheHeaders: CacheHeaders, recordMerger: RecordMerger): Set<String>","description":"com.apollographql.cache.normalized.api.NormalizedCache.merge","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-normalized-cache/merge.html","searchKeys":["merge","abstract fun merge(record: Record, cacheHeaders: CacheHeaders, recordMerger: RecordMerger): Set<String>","com.apollographql.cache.normalized.api.NormalizedCache.merge"]},{"name":"abstract fun merge(records: Collection<Record>, cacheHeaders: CacheHeaders, recordMerger: RecordMerger): Set<String>","description":"com.apollographql.cache.normalized.api.NormalizedCache.merge","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-normalized-cache/merge.html","searchKeys":["merge","abstract fun merge(records: Collection<Record>, cacheHeaders: CacheHeaders, recordMerger: RecordMerger): Set<String>","com.apollographql.cache.normalized.api.NormalizedCache.merge"]},{"name":"abstract fun mergeFields(existing: FieldRecordMerger.FieldInfo, incoming: FieldRecordMerger.FieldInfo): FieldRecordMerger.FieldInfo","description":"com.apollographql.cache.normalized.api.FieldRecordMerger.FieldMerger.mergeFields","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-field-record-merger/-field-merger/merge-fields.html","searchKeys":["mergeFields","abstract fun mergeFields(existing: FieldRecordMerger.FieldInfo, incoming: FieldRecordMerger.FieldInfo): FieldRecordMerger.FieldInfo","com.apollographql.cache.normalized.api.FieldRecordMerger.FieldMerger.mergeFields"]},{"name":"abstract fun metadataForObject(obj: ApolloJsonElement, context: MetadataGeneratorContext): Map<String, ApolloJsonElement>","description":"com.apollographql.cache.normalized.api.MetadataGenerator.metadataForObject","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-metadata-generator/metadata-for-object.html","searchKeys":["metadataForObject","abstract fun metadataForObject(obj: ApolloJsonElement, context: MetadataGeneratorContext): Map<String, ApolloJsonElement>","com.apollographql.cache.normalized.api.MetadataGenerator.metadataForObject"]},{"name":"abstract fun put(key: Key, value: Value)","description":"com.apollographql.cache.normalized.api.internal.store.Cache.put","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal.store/-cache/put.html","searchKeys":["put","abstract fun put(key: Key, value: Value)","com.apollographql.cache.normalized.api.internal.store.Cache.put"]},{"name":"abstract fun putAll(map: Map<Key, Value>)","description":"com.apollographql.cache.normalized.api.internal.store.Cache.putAll","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal.store/-cache/put-all.html","searchKeys":["putAll","abstract fun putAll(map: Map<Key, Value>)","com.apollographql.cache.normalized.api.internal.store.Cache.putAll"]},{"name":"abstract fun remove(cacheKey: CacheKey, cascade: Boolean = true): Boolean","description":"com.apollographql.cache.normalized.ApolloStore.remove","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-apollo-store/remove.html","searchKeys":["remove","abstract fun remove(cacheKey: CacheKey, cascade: Boolean = true): Boolean","com.apollographql.cache.normalized.ApolloStore.remove"]},{"name":"abstract fun remove(cacheKey: CacheKey, cascade: Boolean): Boolean","description":"com.apollographql.cache.normalized.api.NormalizedCache.remove","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-normalized-cache/remove.html","searchKeys":["remove","abstract fun remove(cacheKey: CacheKey, cascade: Boolean): Boolean","com.apollographql.cache.normalized.api.NormalizedCache.remove"]},{"name":"abstract fun remove(cacheKeys: List<CacheKey>, cascade: Boolean = true): Int","description":"com.apollographql.cache.normalized.ApolloStore.remove","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-apollo-store/remove.html","searchKeys":["remove","abstract fun remove(cacheKeys: List<CacheKey>, cascade: Boolean = true): Int","com.apollographql.cache.normalized.ApolloStore.remove"]},{"name":"abstract fun remove(pattern: String): Int","description":"com.apollographql.cache.normalized.api.NormalizedCache.remove","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-normalized-cache/remove.html","searchKeys":["remove","abstract fun remove(pattern: String): Int","com.apollographql.cache.normalized.api.NormalizedCache.remove"]},{"name":"abstract fun resolveField(context: ResolverContext): Any?","description":"com.apollographql.cache.normalized.api.CacheResolver.resolveField","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-resolver/resolve-field.html","searchKeys":["resolveField","abstract fun resolveField(context: ResolverContext): Any?","com.apollographql.cache.normalized.api.CacheResolver.resolveField"]},{"name":"abstract fun rollbackOptimisticUpdates(mutationId: Uuid): Set<String>","description":"com.apollographql.cache.normalized.ApolloStore.rollbackOptimisticUpdates","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-apollo-store/rollback-optimistic-updates.html","searchKeys":["rollbackOptimisticUpdates","abstract fun rollbackOptimisticUpdates(mutationId: Uuid): Set<String>","com.apollographql.cache.normalized.ApolloStore.rollbackOptimisticUpdates"]},{"name":"abstract fun size(): Long","description":"com.apollographql.cache.normalized.api.internal.store.Cache.size","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal.store/-cache/size.html","searchKeys":["size","abstract fun size(): Long","com.apollographql.cache.normalized.api.internal.store.Cache.size"]},{"name":"abstract fun toMap(): Map<String, Any?>","description":"com.apollographql.cache.normalized.api.CacheData.toMap","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-data/to-map.html","searchKeys":["toMap","abstract fun toMap(): Map<String, Any?>","com.apollographql.cache.normalized.api.CacheData.toMap"]},{"name":"abstract suspend fun publish(keys: Set<String>)","description":"com.apollographql.cache.normalized.ApolloStore.publish","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-apollo-store/publish.html","searchKeys":["publish","abstract suspend fun publish(keys: Set<String>)","com.apollographql.cache.normalized.ApolloStore.publish"]},{"name":"abstract val changedKeys: SharedFlow<Set<String>>","description":"com.apollographql.cache.normalized.ApolloStore.changedKeys","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-apollo-store/changed-keys.html","searchKeys":["changedKeys","abstract val changedKeys: SharedFlow<Set<String>>","com.apollographql.cache.normalized.ApolloStore.changedKeys"]},{"name":"class Builder","description":"com.apollographql.cache.normalized.CacheInfo.Builder","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/-builder/index.html","searchKeys":["Builder","class Builder","com.apollographql.cache.normalized.CacheInfo.Builder"]},{"name":"class Builder","description":"com.apollographql.cache.normalized.api.CacheHeaders.Builder","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-headers/-builder/index.html","searchKeys":["Builder","class Builder","com.apollographql.cache.normalized.api.CacheHeaders.Builder"]},{"name":"class CacheBuilder<Key : Any, Output : Any>","description":"com.apollographql.cache.normalized.api.internal.store.CacheBuilder","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal.store/-cache-builder/index.html","searchKeys":["CacheBuilder","class CacheBuilder<Key : Any, Output : Any>","com.apollographql.cache.normalized.api.internal.store.CacheBuilder"]},{"name":"class CacheHeaders","description":"com.apollographql.cache.normalized.api.CacheHeaders","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-headers/index.html","searchKeys":["CacheHeaders","class CacheHeaders","com.apollographql.cache.normalized.api.CacheHeaders"]},{"name":"class CacheInfo : ExecutionContext.Element","description":"com.apollographql.cache.normalized.CacheInfo","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/index.html","searchKeys":["CacheInfo","class CacheInfo : ExecutionContext.Element","com.apollographql.cache.normalized.CacheInfo"]},{"name":"class CacheKey(val key: String)","description":"com.apollographql.cache.normalized.api.CacheKey","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-key/index.html","searchKeys":["CacheKey","class CacheKey(val key: String)","com.apollographql.cache.normalized.api.CacheKey"]},{"name":"class CacheKeyGeneratorContext(val field: CompiledField, val variables: Executable.Variables)","description":"com.apollographql.cache.normalized.api.CacheKeyGeneratorContext","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-key-generator-context/index.html","searchKeys":["CacheKeyGeneratorContext","class CacheKeyGeneratorContext(val field: CompiledField, val variables: Executable.Variables)","com.apollographql.cache.normalized.api.CacheKeyGeneratorContext"]},{"name":"class CacheMissLoggingInterceptor(log: (String) -> Unit) : ApolloInterceptor","description":"com.apollographql.cache.normalized.CacheMissLoggingInterceptor","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-miss-logging-interceptor/index.html","searchKeys":["CacheMissLoggingInterceptor","class CacheMissLoggingInterceptor(log: (String) -> Unit) : ApolloInterceptor","com.apollographql.cache.normalized.CacheMissLoggingInterceptor"]},{"name":"class ConnectionEmbeddedFieldsProvider(connectionFields: Map<String, List<String>>, connectionTypes: Set<String>) : EmbeddedFieldsProvider","description":"com.apollographql.cache.normalized.api.ConnectionEmbeddedFieldsProvider","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-connection-embedded-fields-provider/index.html","searchKeys":["ConnectionEmbeddedFieldsProvider","class ConnectionEmbeddedFieldsProvider(connectionFields: Map<String, List<String>>, connectionTypes: Set<String>) : EmbeddedFieldsProvider","com.apollographql.cache.normalized.api.ConnectionEmbeddedFieldsProvider"]},{"name":"class ConnectionFieldKeyGenerator(connectionFields: Map<String, List<String>>) : FieldKeyGenerator","description":"com.apollographql.cache.normalized.api.ConnectionFieldKeyGenerator","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-connection-field-key-generator/index.html","searchKeys":["ConnectionFieldKeyGenerator","class ConnectionFieldKeyGenerator(connectionFields: Map<String, List<String>>) : FieldKeyGenerator","com.apollographql.cache.normalized.api.ConnectionFieldKeyGenerator"]},{"name":"class ConnectionMetadataGenerator(connectionTypes: Set<String>) : MetadataGenerator","description":"com.apollographql.cache.normalized.api.ConnectionMetadataGenerator","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-connection-metadata-generator/index.html","searchKeys":["ConnectionMetadataGenerator","class ConnectionMetadataGenerator(connectionTypes: Set<String>) : MetadataGenerator","com.apollographql.cache.normalized.api.ConnectionMetadataGenerator"]},{"name":"class EmbeddedFieldsContext(val parentType: CompiledNamedType)","description":"com.apollographql.cache.normalized.api.EmbeddedFieldsContext","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-embedded-fields-context/index.html","searchKeys":["EmbeddedFieldsContext","class EmbeddedFieldsContext(val parentType: CompiledNamedType)","com.apollographql.cache.normalized.api.EmbeddedFieldsContext"]},{"name":"class ExpireDateCacheResolver : CacheResolver","description":"com.apollographql.cache.normalized.api.ExpireDateCacheResolver","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-expire-date-cache-resolver/index.html","searchKeys":["ExpireDateCacheResolver","class ExpireDateCacheResolver : CacheResolver","com.apollographql.cache.normalized.api.ExpireDateCacheResolver"]},{"name":"class FieldKeyContext(val parentType: String, val field: CompiledField, val variables: Executable.Variables)","description":"com.apollographql.cache.normalized.api.FieldKeyContext","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-field-key-context/index.html","searchKeys":["FieldKeyContext","class FieldKeyContext(val parentType: String, val field: CompiledField, val variables: Executable.Variables)","com.apollographql.cache.normalized.api.FieldKeyContext"]},{"name":"class FieldRecordMerger(fieldMerger: FieldRecordMerger.FieldMerger) : RecordMerger","description":"com.apollographql.cache.normalized.api.FieldRecordMerger","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-field-record-merger/index.html","searchKeys":["FieldRecordMerger","class FieldRecordMerger(fieldMerger: FieldRecordMerger.FieldMerger) : RecordMerger","com.apollographql.cache.normalized.api.FieldRecordMerger"]},{"name":"class MemoryCache(nextCache: NormalizedCache? = null, maxSizeBytes: Int = Int.MAX_VALUE, expireAfterMillis: Long = -1) : NormalizedCache","description":"com.apollographql.cache.normalized.api.MemoryCache","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-memory-cache/index.html","searchKeys":["MemoryCache","class MemoryCache(nextCache: NormalizedCache? = null, maxSizeBytes: Int = Int.MAX_VALUE, expireAfterMillis: Long = -1) : NormalizedCache","com.apollographql.cache.normalized.api.MemoryCache"]},{"name":"class MemoryCacheFactory constructor(maxSizeBytes: Int = Int.MAX_VALUE, expireAfterMillis: Long = -1) : NormalizedCacheFactory","description":"com.apollographql.cache.normalized.api.MemoryCacheFactory","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-memory-cache-factory/index.html","searchKeys":["MemoryCacheFactory","class MemoryCacheFactory constructor(maxSizeBytes: Int = Int.MAX_VALUE, expireAfterMillis: Long = -1) : NormalizedCacheFactory","com.apollographql.cache.normalized.api.MemoryCacheFactory"]},{"name":"class MetadataGeneratorContext(val field: CompiledField, val variables: Executable.Variables)","description":"com.apollographql.cache.normalized.api.MetadataGeneratorContext","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-metadata-generator-context/index.html","searchKeys":["MetadataGeneratorContext","class MetadataGeneratorContext(val field: CompiledField, val variables: Executable.Variables)","com.apollographql.cache.normalized.api.MetadataGeneratorContext"]},{"name":"class OptimisticNormalizedCache(wrapped: NormalizedCache) : NormalizedCache","description":"com.apollographql.cache.normalized.api.internal.OptimisticNormalizedCache","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal/-optimistic-normalized-cache/index.html","searchKeys":["OptimisticNormalizedCache","class OptimisticNormalizedCache(wrapped: NormalizedCache) : NormalizedCache","com.apollographql.cache.normalized.api.internal.OptimisticNormalizedCache"]},{"name":"class ReceiveDateCacheResolver(maxAge: Int) : CacheResolver","description":"com.apollographql.cache.normalized.api.ReceiveDateCacheResolver","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-receive-date-cache-resolver/index.html","searchKeys":["ReceiveDateCacheResolver","class ReceiveDateCacheResolver(maxAge: Int) : CacheResolver","com.apollographql.cache.normalized.api.ReceiveDateCacheResolver"]},{"name":"class Record(val key: String, val fields: Map<String, Any?>, val mutationId: Uuid? = null) : Map<String, Any?> ","description":"com.apollographql.cache.normalized.api.Record","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-record/index.html","searchKeys":["Record","class Record(val key: String, val fields: Map<String, Any?>, val mutationId: Uuid? = null) : Map<String, Any?> ","com.apollographql.cache.normalized.api.Record"]},{"name":"class ResolverContext(val field: CompiledField, val variables: Executable.Variables, val parent: Map<String, Any?>, val parentKey: String, val parentType: String, val cacheHeaders: CacheHeaders, val fieldKeyGenerator: FieldKeyGenerator)","description":"com.apollographql.cache.normalized.api.ResolverContext","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-resolver-context/index.html","searchKeys":["ResolverContext","class ResolverContext(val field: CompiledField, val variables: Executable.Variables, val parent: Map<String, Any?>, val parentKey: String, val parentType: String, val cacheHeaders: CacheHeaders, val fieldKeyGenerator: FieldKeyGenerator)","com.apollographql.cache.normalized.api.ResolverContext"]},{"name":"const val DO_NOT_STORE: String","description":"com.apollographql.cache.normalized.api.ApolloCacheHeaders.DO_NOT_STORE","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-apollo-cache-headers/-d-o_-n-o-t_-s-t-o-r-e.html","searchKeys":["DO_NOT_STORE","const val DO_NOT_STORE: String","com.apollographql.cache.normalized.api.ApolloCacheHeaders.DO_NOT_STORE"]},{"name":"const val EVICT_AFTER_READ: String","description":"com.apollographql.cache.normalized.api.ApolloCacheHeaders.EVICT_AFTER_READ","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-apollo-cache-headers/-e-v-i-c-t_-a-f-t-e-r_-r-e-a-d.html","searchKeys":["EVICT_AFTER_READ","const val EVICT_AFTER_READ: String","com.apollographql.cache.normalized.api.ApolloCacheHeaders.EVICT_AFTER_READ"]},{"name":"const val EXPIRATION_DATE: String","description":"com.apollographql.cache.normalized.api.ApolloCacheHeaders.EXPIRATION_DATE","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-apollo-cache-headers/-e-x-p-i-r-a-t-i-o-n_-d-a-t-e.html","searchKeys":["EXPIRATION_DATE","const val EXPIRATION_DATE: String","com.apollographql.cache.normalized.api.ApolloCacheHeaders.EXPIRATION_DATE"]},{"name":"const val MAX_STALE: String","description":"com.apollographql.cache.normalized.api.ApolloCacheHeaders.MAX_STALE","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-apollo-cache-headers/-m-a-x_-s-t-a-l-e.html","searchKeys":["MAX_STALE","const val MAX_STALE: String","com.apollographql.cache.normalized.api.ApolloCacheHeaders.MAX_STALE"]},{"name":"const val MEMORY_CACHE_ONLY: String","description":"com.apollographql.cache.normalized.api.ApolloCacheHeaders.MEMORY_CACHE_ONLY","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-apollo-cache-headers/-m-e-m-o-r-y_-c-a-c-h-e_-o-n-l-y.html","searchKeys":["MEMORY_CACHE_ONLY","const val MEMORY_CACHE_ONLY: String","com.apollographql.cache.normalized.api.ApolloCacheHeaders.MEMORY_CACHE_ONLY"]},{"name":"const val RECEIVED_DATE: String","description":"com.apollographql.cache.normalized.api.ApolloCacheHeaders.RECEIVED_DATE","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-apollo-cache-headers/-r-e-c-e-i-v-e-d_-d-a-t-e.html","searchKeys":["RECEIVED_DATE","const val RECEIVED_DATE: String","com.apollographql.cache.normalized.api.ApolloCacheHeaders.RECEIVED_DATE"]},{"name":"const val VERSION: String","description":"com.apollographql.cache.normalized.VERSION","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-v-e-r-s-i-o-n.html","searchKeys":["VERSION","const val VERSION: String","com.apollographql.cache.normalized.VERSION"]},{"name":"constructor()","description":"com.apollographql.cache.normalized.CacheInfo.Builder.Builder","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/-builder/-builder.html","searchKeys":["Builder","constructor()","com.apollographql.cache.normalized.CacheInfo.Builder.Builder"]},{"name":"constructor()","description":"com.apollographql.cache.normalized.api.CacheHeaders.Builder.Builder","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-headers/-builder/-builder.html","searchKeys":["Builder","constructor()","com.apollographql.cache.normalized.api.CacheHeaders.Builder.Builder"]},{"name":"constructor()","description":"com.apollographql.cache.normalized.api.CacheKeyResolver.CacheKeyResolver","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-key-resolver/-cache-key-resolver.html","searchKeys":["CacheKeyResolver","constructor()","com.apollographql.cache.normalized.api.CacheKeyResolver.CacheKeyResolver"]},{"name":"constructor()","description":"com.apollographql.cache.normalized.api.ExpireDateCacheResolver.ExpireDateCacheResolver","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-expire-date-cache-resolver/-expire-date-cache-resolver.html","searchKeys":["ExpireDateCacheResolver","constructor()","com.apollographql.cache.normalized.api.ExpireDateCacheResolver.ExpireDateCacheResolver"]},{"name":"constructor()","description":"com.apollographql.cache.normalized.api.NormalizedCacheFactory.NormalizedCacheFactory","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-normalized-cache-factory/-normalized-cache-factory.html","searchKeys":["NormalizedCacheFactory","constructor()","com.apollographql.cache.normalized.api.NormalizedCacheFactory.NormalizedCacheFactory"]},{"name":"constructor()","description":"com.apollographql.cache.normalized.api.internal.Lock.Lock","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal/-lock/-lock.html","searchKeys":["Lock","constructor()","com.apollographql.cache.normalized.api.internal.Lock.Lock"]},{"name":"constructor()","description":"com.apollographql.cache.normalized.api.internal.store.CacheBuilder.CacheBuilder","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal.store/-cache-builder/-cache-builder.html","searchKeys":["CacheBuilder","constructor()","com.apollographql.cache.normalized.api.internal.store.CacheBuilder.CacheBuilder"]},{"name":"constructor(connectionFields: Map<String, List<String>>)","description":"com.apollographql.cache.normalized.api.ConnectionFieldKeyGenerator.ConnectionFieldKeyGenerator","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-connection-field-key-generator/-connection-field-key-generator.html","searchKeys":["ConnectionFieldKeyGenerator","constructor(connectionFields: Map<String, List<String>>)","com.apollographql.cache.normalized.api.ConnectionFieldKeyGenerator.ConnectionFieldKeyGenerator"]},{"name":"constructor(connectionFields: Map<String, List<String>>, connectionTypes: Set<String>)","description":"com.apollographql.cache.normalized.api.ConnectionEmbeddedFieldsProvider.ConnectionEmbeddedFieldsProvider","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-connection-embedded-fields-provider/-connection-embedded-fields-provider.html","searchKeys":["ConnectionEmbeddedFieldsProvider","constructor(connectionFields: Map<String, List<String>>, connectionTypes: Set<String>)","com.apollographql.cache.normalized.api.ConnectionEmbeddedFieldsProvider.ConnectionEmbeddedFieldsProvider"]},{"name":"constructor(connectionTypes: Set<String>)","description":"com.apollographql.cache.normalized.api.ConnectionMetadataGenerator.ConnectionMetadataGenerator","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-connection-metadata-generator/-connection-metadata-generator.html","searchKeys":["ConnectionMetadataGenerator","constructor(connectionTypes: Set<String>)","com.apollographql.cache.normalized.api.ConnectionMetadataGenerator.ConnectionMetadataGenerator"]},{"name":"constructor(field: CompiledField, variables: Executable.Variables)","description":"com.apollographql.cache.normalized.api.CacheKeyGeneratorContext.CacheKeyGeneratorContext","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-key-generator-context/-cache-key-generator-context.html","searchKeys":["CacheKeyGeneratorContext","constructor(field: CompiledField, variables: Executable.Variables)","com.apollographql.cache.normalized.api.CacheKeyGeneratorContext.CacheKeyGeneratorContext"]},{"name":"constructor(field: CompiledField, variables: Executable.Variables)","description":"com.apollographql.cache.normalized.api.MetadataGeneratorContext.MetadataGeneratorContext","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-metadata-generator-context/-metadata-generator-context.html","searchKeys":["MetadataGeneratorContext","constructor(field: CompiledField, variables: Executable.Variables)","com.apollographql.cache.normalized.api.MetadataGeneratorContext.MetadataGeneratorContext"]},{"name":"constructor(field: CompiledField, variables: Executable.Variables, parent: Map<String, Any?>, parentKey: String, parentType: String, cacheHeaders: CacheHeaders, fieldKeyGenerator: FieldKeyGenerator)","description":"com.apollographql.cache.normalized.api.ResolverContext.ResolverContext","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-resolver-context/-resolver-context.html","searchKeys":["ResolverContext","constructor(field: CompiledField, variables: Executable.Variables, parent: Map<String, Any?>, parentKey: String, parentType: String, cacheHeaders: CacheHeaders, fieldKeyGenerator: FieldKeyGenerator)","com.apollographql.cache.normalized.api.ResolverContext.ResolverContext"]},{"name":"constructor(fieldMerger: FieldRecordMerger.FieldMerger)","description":"com.apollographql.cache.normalized.api.FieldRecordMerger.FieldRecordMerger","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-field-record-merger/-field-record-merger.html","searchKeys":["FieldRecordMerger","constructor(fieldMerger: FieldRecordMerger.FieldMerger)","com.apollographql.cache.normalized.api.FieldRecordMerger.FieldRecordMerger"]},{"name":"constructor(key: String)","description":"com.apollographql.cache.normalized.api.CacheKey.CacheKey","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-key/-cache-key.html","searchKeys":["CacheKey","constructor(key: String)","com.apollographql.cache.normalized.api.CacheKey.CacheKey"]},{"name":"constructor(key: String, fields: Map<String, Any?>, mutationId: Uuid? = null)","description":"com.apollographql.cache.normalized.api.Record.Record","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-record/-record.html","searchKeys":["Record","constructor(key: String, fields: Map<String, Any?>, mutationId: Uuid? = null)","com.apollographql.cache.normalized.api.Record.Record"]},{"name":"constructor(key: String, fields: Map<String, Any?>, mutationId: Uuid?, metadata: Map<String, Map<String, ApolloJsonElement>>)","description":"com.apollographql.cache.normalized.api.Record.Record","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-record/-record.html","searchKeys":["Record","constructor(key: String, fields: Map<String, Any?>, mutationId: Uuid?, metadata: Map<String, Map<String, ApolloJsonElement>>)","com.apollographql.cache.normalized.api.Record.Record"]},{"name":"constructor(log: (String) -> Unit)","description":"com.apollographql.cache.normalized.CacheMissLoggingInterceptor.CacheMissLoggingInterceptor","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-miss-logging-interceptor/-cache-miss-logging-interceptor.html","searchKeys":["CacheMissLoggingInterceptor","constructor(log: (String) -> Unit)","com.apollographql.cache.normalized.CacheMissLoggingInterceptor.CacheMissLoggingInterceptor"]},{"name":"constructor(maxAge: Int)","description":"com.apollographql.cache.normalized.api.ReceiveDateCacheResolver.ReceiveDateCacheResolver","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-receive-date-cache-resolver/-receive-date-cache-resolver.html","searchKeys":["ReceiveDateCacheResolver","constructor(maxAge: Int)","com.apollographql.cache.normalized.api.ReceiveDateCacheResolver.ReceiveDateCacheResolver"]},{"name":"constructor(maxSizeBytes: Int = Int.MAX_VALUE, expireAfterMillis: Long = -1)","description":"com.apollographql.cache.normalized.api.MemoryCacheFactory.MemoryCacheFactory","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-memory-cache-factory/-memory-cache-factory.html","searchKeys":["MemoryCacheFactory","constructor(maxSizeBytes: Int = Int.MAX_VALUE, expireAfterMillis: Long = -1)","com.apollographql.cache.normalized.api.MemoryCacheFactory.MemoryCacheFactory"]},{"name":"constructor(millisStart: Long, millisEnd: Long, hit: Boolean, missedKey: String?, missedField: String?)","description":"com.apollographql.cache.normalized.CacheInfo.CacheInfo","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/-cache-info.html","searchKeys":["CacheInfo","constructor(millisStart: Long, millisEnd: Long, hit: Boolean, missedKey: String?, missedField: String?)","com.apollographql.cache.normalized.CacheInfo.CacheInfo"]},{"name":"constructor(nextCache: NormalizedCache? = null, maxSizeBytes: Int = Int.MAX_VALUE, expireAfterMillis: Long = -1)","description":"com.apollographql.cache.normalized.api.MemoryCache.MemoryCache","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-memory-cache/-memory-cache.html","searchKeys":["MemoryCache","constructor(nextCache: NormalizedCache? = null, maxSizeBytes: Int = Int.MAX_VALUE, expireAfterMillis: Long = -1)","com.apollographql.cache.normalized.api.MemoryCache.MemoryCache"]},{"name":"constructor(parentType: CompiledNamedType)","description":"com.apollographql.cache.normalized.api.EmbeddedFieldsContext.EmbeddedFieldsContext","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-embedded-fields-context/-embedded-fields-context.html","searchKeys":["EmbeddedFieldsContext","constructor(parentType: CompiledNamedType)","com.apollographql.cache.normalized.api.EmbeddedFieldsContext.EmbeddedFieldsContext"]},{"name":"constructor(parentType: String, field: CompiledField, variables: Executable.Variables)","description":"com.apollographql.cache.normalized.api.FieldKeyContext.FieldKeyContext","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-field-key-context/-field-key-context.html","searchKeys":["FieldKeyContext","constructor(parentType: String, field: CompiledField, variables: Executable.Variables)","com.apollographql.cache.normalized.api.FieldKeyContext.FieldKeyContext"]},{"name":"constructor(typename: String, values: List<String>)","description":"com.apollographql.cache.normalized.api.CacheKey.CacheKey","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-key/-cache-key.html","searchKeys":["CacheKey","constructor(typename: String, values: List<String>)","com.apollographql.cache.normalized.api.CacheKey.CacheKey"]},{"name":"constructor(typename: String, vararg values: String)","description":"com.apollographql.cache.normalized.api.CacheKey.CacheKey","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-key/-cache-key.html","searchKeys":["CacheKey","constructor(typename: String, vararg values: String)","com.apollographql.cache.normalized.api.CacheKey.CacheKey"]},{"name":"constructor(value: Any?, metadata: Map<String, ApolloJsonElement>)","description":"com.apollographql.cache.normalized.api.FieldRecordMerger.FieldInfo.FieldInfo","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-field-record-merger/-field-info/-field-info.html","searchKeys":["FieldInfo","constructor(value: Any?, metadata: Map<String, ApolloJsonElement>)","com.apollographql.cache.normalized.api.FieldRecordMerger.FieldInfo.FieldInfo"]},{"name":"constructor(wrapped: NormalizedCache)","description":"com.apollographql.cache.normalized.api.internal.OptimisticNormalizedCache.OptimisticNormalizedCache","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal/-optimistic-normalized-cache/-optimistic-normalized-cache.html","searchKeys":["OptimisticNormalizedCache","constructor(wrapped: NormalizedCache)","com.apollographql.cache.normalized.api.internal.OptimisticNormalizedCache.OptimisticNormalizedCache"]},{"name":"data class FieldInfo(val value: Any?, val metadata: Map<String, ApolloJsonElement>)","description":"com.apollographql.cache.normalized.api.FieldRecordMerger.FieldInfo","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-field-record-merger/-field-info/index.html","searchKeys":["FieldInfo","data class FieldInfo(val value: Any?, val metadata: Map<String, ApolloJsonElement>)","com.apollographql.cache.normalized.api.FieldRecordMerger.FieldInfo"]},{"name":"enum FetchPolicy : Enum<FetchPolicy> ","description":"com.apollographql.cache.normalized.FetchPolicy","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-fetch-policy/index.html","searchKeys":["FetchPolicy","enum FetchPolicy : Enum<FetchPolicy> ","com.apollographql.cache.normalized.FetchPolicy"]},{"name":"expect class Lock","description":"com.apollographql.cache.normalized.api.internal.Lock","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal/-lock/index.html","searchKeys":["Lock","expect class Lock","com.apollographql.cache.normalized.api.internal.Lock"]},{"name":"expect fun <T> read(block: () -> T): T","description":"com.apollographql.cache.normalized.api.internal.Lock.read","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal/-lock/read.html","searchKeys":["read","expect fun <T> read(block: () -> T): T","com.apollographql.cache.normalized.api.internal.Lock.read"]},{"name":"expect fun <T> write(block: () -> T): T","description":"com.apollographql.cache.normalized.api.internal.Lock.write","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal/-lock/write.html","searchKeys":["write","expect fun <T> write(block: () -> T): T","com.apollographql.cache.normalized.api.internal.Lock.write"]},{"name":"fun <D : Executable.Data> CacheData.toData(adapter: Adapter<D>, customScalarAdapters: CustomScalarAdapters, variables: Executable.Variables): D","description":"com.apollographql.cache.normalized.api.toData","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/to-data.html","searchKeys":["toData","fun <D : Executable.Data> CacheData.toData(adapter: Adapter<D>, customScalarAdapters: CustomScalarAdapters, variables: Executable.Variables): D","com.apollographql.cache.normalized.api.toData"]},{"name":"fun <D : Executable.Data> Executable<D>.normalize(data: D, customScalarAdapters: CustomScalarAdapters, cacheKeyGenerator: CacheKeyGenerator, metadataGenerator: MetadataGenerator = EmptyMetadataGenerator, fieldKeyGenerator: FieldKeyGenerator = DefaultFieldKeyGenerator, embeddedFieldsProvider: EmbeddedFieldsProvider = DefaultEmbeddedFieldsProvider, rootKey: String): Map<String, Record>","description":"com.apollographql.cache.normalized.api.normalize","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/normalize.html","searchKeys":["normalize","fun <D : Executable.Data> Executable<D>.normalize(data: D, customScalarAdapters: CustomScalarAdapters, cacheKeyGenerator: CacheKeyGenerator, metadataGenerator: MetadataGenerator = EmptyMetadataGenerator, fieldKeyGenerator: FieldKeyGenerator = DefaultFieldKeyGenerator, embeddedFieldsProvider: EmbeddedFieldsProvider = DefaultEmbeddedFieldsProvider, rootKey: String): Map<String, Record>","com.apollographql.cache.normalized.api.normalize"]},{"name":"fun <D : Executable.Data> Executable<D>.readDataFromCache(cacheKey: CacheKey, customScalarAdapters: CustomScalarAdapters, cache: ReadOnlyNormalizedCache, cacheResolver: CacheResolver, cacheHeaders: CacheHeaders, fieldKeyGenerator: FieldKeyGenerator = DefaultFieldKeyGenerator): D","description":"com.apollographql.cache.normalized.api.readDataFromCache","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/read-data-from-cache.html","searchKeys":["readDataFromCache","fun <D : Executable.Data> Executable<D>.readDataFromCache(cacheKey: CacheKey, customScalarAdapters: CustomScalarAdapters, cache: ReadOnlyNormalizedCache, cacheResolver: CacheResolver, cacheHeaders: CacheHeaders, fieldKeyGenerator: FieldKeyGenerator = DefaultFieldKeyGenerator): D","com.apollographql.cache.normalized.api.readDataFromCache"]},{"name":"fun <D : Executable.Data> Executable<D>.readDataFromCache(customScalarAdapters: CustomScalarAdapters, cache: ReadOnlyNormalizedCache, cacheResolver: CacheResolver, cacheHeaders: CacheHeaders, fieldKeyGenerator: FieldKeyGenerator = DefaultFieldKeyGenerator): D","description":"com.apollographql.cache.normalized.api.readDataFromCache","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/read-data-from-cache.html","searchKeys":["readDataFromCache","fun <D : Executable.Data> Executable<D>.readDataFromCache(customScalarAdapters: CustomScalarAdapters, cache: ReadOnlyNormalizedCache, cacheResolver: CacheResolver, cacheHeaders: CacheHeaders, fieldKeyGenerator: FieldKeyGenerator = DefaultFieldKeyGenerator): D","com.apollographql.cache.normalized.api.readDataFromCache"]},{"name":"fun <D : Executable.Data> Executable<D>.readDataFromCacheInternal(cacheKey: CacheKey, cache: ReadOnlyNormalizedCache, cacheResolver: CacheResolver, cacheHeaders: CacheHeaders, variables: Executable.Variables, fieldKeyGenerator: FieldKeyGenerator): CacheData","description":"com.apollographql.cache.normalized.api.readDataFromCacheInternal","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/read-data-from-cache-internal.html","searchKeys":["readDataFromCacheInternal","fun <D : Executable.Data> Executable<D>.readDataFromCacheInternal(cacheKey: CacheKey, cache: ReadOnlyNormalizedCache, cacheResolver: CacheResolver, cacheHeaders: CacheHeaders, variables: Executable.Variables, fieldKeyGenerator: FieldKeyGenerator): CacheData","com.apollographql.cache.normalized.api.readDataFromCacheInternal"]},{"name":"fun <D : Mutation.Data> ApolloCall<D>.optimisticUpdates(data: D): ApolloCall<D>","description":"com.apollographql.cache.normalized.optimisticUpdates","location":"normalized-cache-incubating/com.apollographql.cache.normalized/optimistic-updates.html","searchKeys":["optimisticUpdates","fun <D : Mutation.Data> ApolloCall<D>.optimisticUpdates(data: D): ApolloCall<D>","com.apollographql.cache.normalized.optimisticUpdates"]},{"name":"fun <D : Mutation.Data> ApolloRequest.Builder<D>.optimisticUpdates(data: D): ApolloRequest.Builder<D>","description":"com.apollographql.cache.normalized.optimisticUpdates","location":"normalized-cache-incubating/com.apollographql.cache.normalized/optimistic-updates.html","searchKeys":["optimisticUpdates","fun <D : Mutation.Data> ApolloRequest.Builder<D>.optimisticUpdates(data: D): ApolloRequest.Builder<D>","com.apollographql.cache.normalized.optimisticUpdates"]},{"name":"fun <D : Operation.Data> ApolloResponse.Builder<D>.cacheHeaders(cacheHeaders: CacheHeaders): ApolloResponse.Builder<D>","description":"com.apollographql.cache.normalized.cacheHeaders","location":"normalized-cache-incubating/com.apollographql.cache.normalized/cache-headers.html","searchKeys":["cacheHeaders","fun <D : Operation.Data> ApolloResponse.Builder<D>.cacheHeaders(cacheHeaders: CacheHeaders): ApolloResponse.Builder<D>","com.apollographql.cache.normalized.cacheHeaders"]},{"name":"fun <D : Operation.Data> Operation<D>.normalize(data: D, customScalarAdapters: CustomScalarAdapters, cacheKeyGenerator: CacheKeyGenerator, metadataGenerator: MetadataGenerator = EmptyMetadataGenerator, fieldKeyGenerator: FieldKeyGenerator = DefaultFieldKeyGenerator, embeddedFieldsProvider: EmbeddedFieldsProvider = DefaultEmbeddedFieldsProvider): Map<String, Record>","description":"com.apollographql.cache.normalized.api.normalize","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/normalize.html","searchKeys":["normalize","fun <D : Operation.Data> Operation<D>.normalize(data: D, customScalarAdapters: CustomScalarAdapters, cacheKeyGenerator: CacheKeyGenerator, metadataGenerator: MetadataGenerator = EmptyMetadataGenerator, fieldKeyGenerator: FieldKeyGenerator = DefaultFieldKeyGenerator, embeddedFieldsProvider: EmbeddedFieldsProvider = DefaultEmbeddedFieldsProvider): Map<String, Record>","com.apollographql.cache.normalized.api.normalize"]},{"name":"fun <D : Query.Data> ApolloCall<D>.executeCacheAndNetwork(): Flow<ApolloResponse<D>>","description":"com.apollographql.cache.normalized.executeCacheAndNetwork","location":"normalized-cache-incubating/com.apollographql.cache.normalized/execute-cache-and-network.html","searchKeys":["executeCacheAndNetwork","fun <D : Query.Data> ApolloCall<D>.executeCacheAndNetwork(): Flow<ApolloResponse<D>>","com.apollographql.cache.normalized.executeCacheAndNetwork"]},{"name":"fun <D : Query.Data> ApolloCall<D>.watch(): Flow<ApolloResponse<D>>","description":"com.apollographql.cache.normalized.watch","location":"normalized-cache-incubating/com.apollographql.cache.normalized/watch.html","searchKeys":["watch","fun <D : Query.Data> ApolloCall<D>.watch(): Flow<ApolloResponse<D>>","com.apollographql.cache.normalized.watch"]},{"name":"fun <D : Query.Data> ApolloCall<D>.watch(data: D?): Flow<ApolloResponse<D>>","description":"com.apollographql.cache.normalized.watch","location":"normalized-cache-incubating/com.apollographql.cache.normalized/watch.html","searchKeys":["watch","fun <D : Query.Data> ApolloCall<D>.watch(data: D?): Flow<ApolloResponse<D>>","com.apollographql.cache.normalized.watch"]},{"name":"fun <D : Query.Data> ApolloCall<D>.watch(fetchThrows: Boolean): Flow<ApolloResponse<D>>","description":"com.apollographql.cache.normalized.watch","location":"normalized-cache-incubating/com.apollographql.cache.normalized/watch.html","searchKeys":["watch","fun <D : Query.Data> ApolloCall<D>.watch(fetchThrows: Boolean): Flow<ApolloResponse<D>>","com.apollographql.cache.normalized.watch"]},{"name":"fun <D : Query.Data> ApolloCall<D>.watch(fetchThrows: Boolean, refetchThrows: Boolean): Flow<ApolloResponse<D>>","description":"com.apollographql.cache.normalized.watch","location":"normalized-cache-incubating/com.apollographql.cache.normalized/watch.html","searchKeys":["watch","fun <D : Query.Data> ApolloCall<D>.watch(fetchThrows: Boolean, refetchThrows: Boolean): Flow<ApolloResponse<D>>","com.apollographql.cache.normalized.watch"]},{"name":"fun <T> MutableExecutionOptions<T>.cacheHeaders(cacheHeaders: CacheHeaders): T","description":"com.apollographql.cache.normalized.cacheHeaders","location":"normalized-cache-incubating/com.apollographql.cache.normalized/cache-headers.html","searchKeys":["cacheHeaders","fun <T> MutableExecutionOptions<T>.cacheHeaders(cacheHeaders: CacheHeaders): T","com.apollographql.cache.normalized.cacheHeaders"]},{"name":"fun <T> MutableExecutionOptions<T>.doNotStore(doNotStore: Boolean): T","description":"com.apollographql.cache.normalized.doNotStore","location":"normalized-cache-incubating/com.apollographql.cache.normalized/do-not-store.html","searchKeys":["doNotStore","fun <T> MutableExecutionOptions<T>.doNotStore(doNotStore: Boolean): T","com.apollographql.cache.normalized.doNotStore"]},{"name":"fun <T> MutableExecutionOptions<T>.emitCacheMisses(emitCacheMisses: Boolean): MutableExecutionOptions<T>","description":"com.apollographql.cache.normalized.emitCacheMisses","location":"normalized-cache-incubating/com.apollographql.cache.normalized/emit-cache-misses.html","searchKeys":["emitCacheMisses","fun <T> MutableExecutionOptions<T>.emitCacheMisses(emitCacheMisses: Boolean): MutableExecutionOptions<T>","com.apollographql.cache.normalized.emitCacheMisses"]},{"name":"fun <T> MutableExecutionOptions<T>.fetchPolicy(fetchPolicy: FetchPolicy): T","description":"com.apollographql.cache.normalized.fetchPolicy","location":"normalized-cache-incubating/com.apollographql.cache.normalized/fetch-policy.html","searchKeys":["fetchPolicy","fun <T> MutableExecutionOptions<T>.fetchPolicy(fetchPolicy: FetchPolicy): T","com.apollographql.cache.normalized.fetchPolicy"]},{"name":"fun <T> MutableExecutionOptions<T>.fetchPolicyInterceptor(interceptor: ApolloInterceptor): T","description":"com.apollographql.cache.normalized.fetchPolicyInterceptor","location":"normalized-cache-incubating/com.apollographql.cache.normalized/fetch-policy-interceptor.html","searchKeys":["fetchPolicyInterceptor","fun <T> MutableExecutionOptions<T>.fetchPolicyInterceptor(interceptor: ApolloInterceptor): T","com.apollographql.cache.normalized.fetchPolicyInterceptor"]},{"name":"fun <T> MutableExecutionOptions<T>.memoryCacheOnly(memoryCacheOnly: Boolean): T","description":"com.apollographql.cache.normalized.memoryCacheOnly","location":"normalized-cache-incubating/com.apollographql.cache.normalized/memory-cache-only.html","searchKeys":["memoryCacheOnly","fun <T> MutableExecutionOptions<T>.memoryCacheOnly(memoryCacheOnly: Boolean): T","com.apollographql.cache.normalized.memoryCacheOnly"]},{"name":"fun <T> MutableExecutionOptions<T>.refetchPolicy(fetchPolicy: FetchPolicy): T","description":"com.apollographql.cache.normalized.refetchPolicy","location":"normalized-cache-incubating/com.apollographql.cache.normalized/refetch-policy.html","searchKeys":["refetchPolicy","fun <T> MutableExecutionOptions<T>.refetchPolicy(fetchPolicy: FetchPolicy): T","com.apollographql.cache.normalized.refetchPolicy"]},{"name":"fun <T> MutableExecutionOptions<T>.refetchPolicyInterceptor(interceptor: ApolloInterceptor): T","description":"com.apollographql.cache.normalized.refetchPolicyInterceptor","location":"normalized-cache-incubating/com.apollographql.cache.normalized/refetch-policy-interceptor.html","searchKeys":["refetchPolicyInterceptor","fun <T> MutableExecutionOptions<T>.refetchPolicyInterceptor(interceptor: ApolloInterceptor): T","com.apollographql.cache.normalized.refetchPolicyInterceptor"]},{"name":"fun <T> MutableExecutionOptions<T>.storeExpirationDate(storeExpirationDate: Boolean): T","description":"com.apollographql.cache.normalized.storeExpirationDate","location":"normalized-cache-incubating/com.apollographql.cache.normalized/store-expiration-date.html","searchKeys":["storeExpirationDate","fun <T> MutableExecutionOptions<T>.storeExpirationDate(storeExpirationDate: Boolean): T","com.apollographql.cache.normalized.storeExpirationDate"]},{"name":"fun <T> MutableExecutionOptions<T>.storePartialResponses(storePartialResponses: Boolean): T","description":"com.apollographql.cache.normalized.storePartialResponses","location":"normalized-cache-incubating/com.apollographql.cache.normalized/store-partial-responses.html","searchKeys":["storePartialResponses","fun <T> MutableExecutionOptions<T>.storePartialResponses(storePartialResponses: Boolean): T","com.apollographql.cache.normalized.storePartialResponses"]},{"name":"fun <T> MutableExecutionOptions<T>.storeReceiveDate(storeReceiveDate: Boolean): T","description":"com.apollographql.cache.normalized.storeReceiveDate","location":"normalized-cache-incubating/com.apollographql.cache.normalized/store-receive-date.html","searchKeys":["storeReceiveDate","fun <T> MutableExecutionOptions<T>.storeReceiveDate(storeReceiveDate: Boolean): T","com.apollographql.cache.normalized.storeReceiveDate"]},{"name":"fun <T> MutableExecutionOptions<T>.writeToCacheAsynchronously(writeToCacheAsynchronously: Boolean): T","description":"com.apollographql.cache.normalized.writeToCacheAsynchronously","location":"normalized-cache-incubating/com.apollographql.cache.normalized/write-to-cache-asynchronously.html","searchKeys":["writeToCacheAsynchronously","fun <T> MutableExecutionOptions<T>.writeToCacheAsynchronously(writeToCacheAsynchronously: Boolean): T","com.apollographql.cache.normalized.writeToCacheAsynchronously"]},{"name":"fun ApolloClient.Builder.logCacheMisses(log: (String) -> Unit = { println(it) }): ApolloClient.Builder","description":"com.apollographql.cache.normalized.logCacheMisses","location":"normalized-cache-incubating/com.apollographql.cache.normalized/log-cache-misses.html","searchKeys":["logCacheMisses","fun ApolloClient.Builder.logCacheMisses(log: (String) -> Unit = { println(it) }): ApolloClient.Builder","com.apollographql.cache.normalized.logCacheMisses"]},{"name":"fun ApolloClient.Builder.normalizedCache(normalizedCacheFactory: NormalizedCacheFactory, cacheKeyGenerator: CacheKeyGenerator = TypePolicyCacheKeyGenerator, metadataGenerator: MetadataGenerator = EmptyMetadataGenerator, cacheResolver: CacheResolver = FieldPolicyCacheResolver, recordMerger: RecordMerger = DefaultRecordMerger, fieldKeyGenerator: FieldKeyGenerator = DefaultFieldKeyGenerator, embeddedFieldsProvider: EmbeddedFieldsProvider = DefaultEmbeddedFieldsProvider, writeToCacheAsynchronously: Boolean = false): ApolloClient.Builder","description":"com.apollographql.cache.normalized.normalizedCache","location":"normalized-cache-incubating/com.apollographql.cache.normalized/normalized-cache.html","searchKeys":["normalizedCache","fun ApolloClient.Builder.normalizedCache(normalizedCacheFactory: NormalizedCacheFactory, cacheKeyGenerator: CacheKeyGenerator = TypePolicyCacheKeyGenerator, metadataGenerator: MetadataGenerator = EmptyMetadataGenerator, cacheResolver: CacheResolver = FieldPolicyCacheResolver, recordMerger: RecordMerger = DefaultRecordMerger, fieldKeyGenerator: FieldKeyGenerator = DefaultFieldKeyGenerator, embeddedFieldsProvider: EmbeddedFieldsProvider = DefaultEmbeddedFieldsProvider, writeToCacheAsynchronously: Boolean = false): ApolloClient.Builder","com.apollographql.cache.normalized.normalizedCache"]},{"name":"fun ApolloClient.Builder.store(store: ApolloStore, writeToCacheAsynchronously: Boolean = false): ApolloClient.Builder","description":"com.apollographql.cache.normalized.store","location":"normalized-cache-incubating/com.apollographql.cache.normalized/store.html","searchKeys":["store","fun ApolloClient.Builder.store(store: ApolloStore, writeToCacheAsynchronously: Boolean = false): ApolloClient.Builder","com.apollographql.cache.normalized.store"]},{"name":"fun ApolloStore(normalizedCacheFactory: NormalizedCacheFactory, cacheKeyGenerator: CacheKeyGenerator = TypePolicyCacheKeyGenerator, metadataGenerator: MetadataGenerator = EmptyMetadataGenerator, cacheResolver: CacheResolver = FieldPolicyCacheResolver, recordMerger: RecordMerger = DefaultRecordMerger, fieldKeyGenerator: FieldKeyGenerator = DefaultFieldKeyGenerator, embeddedFieldsProvider: EmbeddedFieldsProvider = DefaultEmbeddedFieldsProvider): ApolloStore","description":"com.apollographql.cache.normalized.ApolloStore","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-apollo-store.html","searchKeys":["ApolloStore","fun ApolloStore(normalizedCacheFactory: NormalizedCacheFactory, cacheKeyGenerator: CacheKeyGenerator = TypePolicyCacheKeyGenerator, metadataGenerator: MetadataGenerator = EmptyMetadataGenerator, cacheResolver: CacheResolver = FieldPolicyCacheResolver, recordMerger: RecordMerger = DefaultRecordMerger, fieldKeyGenerator: FieldKeyGenerator = DefaultFieldKeyGenerator, embeddedFieldsProvider: EmbeddedFieldsProvider = DefaultEmbeddedFieldsProvider): ApolloStore","com.apollographql.cache.normalized.ApolloStore"]},{"name":"fun Collection<Record>?.dependentKeys(): Set<String>","description":"com.apollographql.cache.normalized.api.dependentKeys","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/dependent-keys.html","searchKeys":["dependentKeys","fun Collection<Record>?.dependentKeys(): Set<String>","com.apollographql.cache.normalized.api.dependentKeys"]},{"name":"fun Record.expirationDate(field: String): Long?","description":"com.apollographql.cache.normalized.api.expirationDate","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/expiration-date.html","searchKeys":["expirationDate","fun Record.expirationDate(field: String): Long?","com.apollographql.cache.normalized.api.expirationDate"]},{"name":"fun Record.receivedDate(field: String): Long?","description":"com.apollographql.cache.normalized.api.receivedDate","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/received-date.html","searchKeys":["receivedDate","fun Record.receivedDate(field: String): Long?","com.apollographql.cache.normalized.api.receivedDate"]},{"name":"fun Record.withDates(receivedDate: String?, expirationDate: String?): Record","description":"com.apollographql.cache.normalized.api.withDates","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/with-dates.html","searchKeys":["withDates","fun Record.withDates(receivedDate: String?, expirationDate: String?): Record","com.apollographql.cache.normalized.api.withDates"]},{"name":"fun addHeader(headerName: String, headerValue: String): CacheHeaders.Builder","description":"com.apollographql.cache.normalized.api.CacheHeaders.Builder.addHeader","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-headers/-builder/add-header.html","searchKeys":["addHeader","fun addHeader(headerName: String, headerValue: String): CacheHeaders.Builder","com.apollographql.cache.normalized.api.CacheHeaders.Builder.addHeader"]},{"name":"fun addHeaders(headerMap: Map<String, String>): CacheHeaders.Builder","description":"com.apollographql.cache.normalized.api.CacheHeaders.Builder.addHeaders","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-headers/-builder/add-headers.html","searchKeys":["addHeaders","fun addHeaders(headerMap: Map<String, String>): CacheHeaders.Builder","com.apollographql.cache.normalized.api.CacheHeaders.Builder.addHeaders"]},{"name":"fun addOptimisticUpdate(record: Record): Set<String>","description":"com.apollographql.cache.normalized.api.internal.OptimisticNormalizedCache.addOptimisticUpdate","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal/-optimistic-normalized-cache/add-optimistic-update.html","searchKeys":["addOptimisticUpdate","fun addOptimisticUpdate(record: Record): Set<String>","com.apollographql.cache.normalized.api.internal.OptimisticNormalizedCache.addOptimisticUpdate"]},{"name":"fun addOptimisticUpdates(recordSet: Collection<Record>): Set<String>","description":"com.apollographql.cache.normalized.api.internal.OptimisticNormalizedCache.addOptimisticUpdates","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal/-optimistic-normalized-cache/add-optimistic-updates.html","searchKeys":["addOptimisticUpdates","fun addOptimisticUpdates(recordSet: Collection<Record>): Set<String>","com.apollographql.cache.normalized.api.internal.OptimisticNormalizedCache.addOptimisticUpdates"]},{"name":"fun allArgumentValues(): Map<String, ApolloJsonElement>","description":"com.apollographql.cache.normalized.api.MetadataGeneratorContext.allArgumentValues","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-metadata-generator-context/all-argument-values.html","searchKeys":["allArgumentValues","fun allArgumentValues(): Map<String, ApolloJsonElement>","com.apollographql.cache.normalized.api.MetadataGeneratorContext.allArgumentValues"]},{"name":"fun argumentValue(argumentName: String): ApolloJsonElement","description":"com.apollographql.cache.normalized.api.MetadataGeneratorContext.argumentValue","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-metadata-generator-context/argument-value.html","searchKeys":["argumentValue","fun argumentValue(argumentName: String): ApolloJsonElement","com.apollographql.cache.normalized.api.MetadataGeneratorContext.argumentValue"]},{"name":"fun build(): Cache<Key, Output>","description":"com.apollographql.cache.normalized.api.internal.store.CacheBuilder.build","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal.store/-cache-builder/build.html","searchKeys":["build","fun build(): Cache<Key, Output>","com.apollographql.cache.normalized.api.internal.store.CacheBuilder.build"]},{"name":"fun build(): CacheHeaders","description":"com.apollographql.cache.normalized.api.CacheHeaders.Builder.build","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-headers/-builder/build.html","searchKeys":["build","fun build(): CacheHeaders","com.apollographql.cache.normalized.api.CacheHeaders.Builder.build"]},{"name":"fun build(): CacheInfo","description":"com.apollographql.cache.normalized.CacheInfo.Builder.build","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/-builder/build.html","searchKeys":["build","fun build(): CacheInfo","com.apollographql.cache.normalized.CacheInfo.Builder.build"]},{"name":"fun builder(): CacheHeaders.Builder","description":"com.apollographql.cache.normalized.api.CacheHeaders.Companion.builder","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-headers/-companion/builder.html","searchKeys":["builder","fun builder(): CacheHeaders.Builder","com.apollographql.cache.normalized.api.CacheHeaders.Companion.builder"]},{"name":"fun cacheEndMillis(cacheEndMillis: Long): CacheInfo.Builder","description":"com.apollographql.cache.normalized.CacheInfo.Builder.cacheEndMillis","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/-builder/cache-end-millis.html","searchKeys":["cacheEndMillis","fun cacheEndMillis(cacheEndMillis: Long): CacheInfo.Builder","com.apollographql.cache.normalized.CacheInfo.Builder.cacheEndMillis"]},{"name":"fun cacheHit(cacheHit: Boolean): CacheInfo.Builder","description":"com.apollographql.cache.normalized.CacheInfo.Builder.cacheHit","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/-builder/cache-hit.html","searchKeys":["cacheHit","fun cacheHit(cacheHit: Boolean): CacheInfo.Builder","com.apollographql.cache.normalized.CacheInfo.Builder.cacheHit"]},{"name":"fun cacheMissException(cacheMissException: CacheMissException?): CacheInfo.Builder","description":"com.apollographql.cache.normalized.CacheInfo.Builder.cacheMissException","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/-builder/cache-miss-exception.html","searchKeys":["cacheMissException","fun cacheMissException(cacheMissException: CacheMissException?): CacheInfo.Builder","com.apollographql.cache.normalized.CacheInfo.Builder.cacheMissException"]},{"name":"fun cacheStartMillis(cacheStartMillis: Long): CacheInfo.Builder","description":"com.apollographql.cache.normalized.CacheInfo.Builder.cacheStartMillis","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/-builder/cache-start-millis.html","searchKeys":["cacheStartMillis","fun cacheStartMillis(cacheStartMillis: Long): CacheInfo.Builder","com.apollographql.cache.normalized.CacheInfo.Builder.cacheStartMillis"]},{"name":"fun canDeserialize(value: String): Boolean","description":"com.apollographql.cache.normalized.api.CacheKey.Companion.canDeserialize","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-key/-companion/can-deserialize.html","searchKeys":["canDeserialize","fun canDeserialize(value: String): Boolean","com.apollographql.cache.normalized.api.CacheKey.Companion.canDeserialize"]},{"name":"fun chain(factory: NormalizedCacheFactory): MemoryCacheFactory","description":"com.apollographql.cache.normalized.api.MemoryCacheFactory.chain","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-memory-cache-factory/chain.html","searchKeys":["chain","fun chain(factory: NormalizedCacheFactory): MemoryCacheFactory","com.apollographql.cache.normalized.api.MemoryCacheFactory.chain"]},{"name":"fun concurrencyLevel(producer: () -> Int): CacheBuilder<Key, Output>","description":"com.apollographql.cache.normalized.api.internal.store.CacheBuilder.concurrencyLevel","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal.store/-cache-builder/concurrency-level.html","searchKeys":["concurrencyLevel","fun concurrencyLevel(producer: () -> Int): CacheBuilder<Key, Output>","com.apollographql.cache.normalized.api.internal.store.CacheBuilder.concurrencyLevel"]},{"name":"fun deserialize(key: String, bytes: ByteArray): Record","description":"com.apollographql.cache.normalized.api.internal.BlobRecordSerializer.deserialize","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal/-blob-record-serializer/deserialize.html","searchKeys":["deserialize","fun deserialize(key: String, bytes: ByteArray): Record","com.apollographql.cache.normalized.api.internal.BlobRecordSerializer.deserialize"]},{"name":"fun deserialize(serializedCacheKey: String): CacheKey","description":"com.apollographql.cache.normalized.api.CacheKey.Companion.deserialize","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-key/-companion/deserialize.html","searchKeys":["deserialize","fun deserialize(serializedCacheKey: String): CacheKey","com.apollographql.cache.normalized.api.CacheKey.Companion.deserialize"]},{"name":"fun expireAfterAccess(duration: Duration): CacheBuilder<Key, Output>","description":"com.apollographql.cache.normalized.api.internal.store.CacheBuilder.expireAfterAccess","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal.store/-cache-builder/expire-after-access.html","searchKeys":["expireAfterAccess","fun expireAfterAccess(duration: Duration): CacheBuilder<Key, Output>","com.apollographql.cache.normalized.api.internal.store.CacheBuilder.expireAfterAccess"]},{"name":"fun expireAfterWrite(duration: Duration): CacheBuilder<Key, Output>","description":"com.apollographql.cache.normalized.api.internal.store.CacheBuilder.expireAfterWrite","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal.store/-cache-builder/expire-after-write.html","searchKeys":["expireAfterWrite","fun expireAfterWrite(duration: Duration): CacheBuilder<Key, Output>","com.apollographql.cache.normalized.api.internal.store.CacheBuilder.expireAfterWrite"]},{"name":"fun fieldKeys(): Set<String>","description":"com.apollographql.cache.normalized.api.Record.fieldKeys","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-record/field-keys.html","searchKeys":["fieldKeys","fun fieldKeys(): Set<String>","com.apollographql.cache.normalized.api.Record.fieldKeys"]},{"name":"fun from(typename: String, values: List<String>): CacheKey","description":"com.apollographql.cache.normalized.api.CacheKey.Companion.from","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-key/-companion/from.html","searchKeys":["from","fun from(typename: String, values: List<String>): CacheKey","com.apollographql.cache.normalized.api.CacheKey.Companion.from"]},{"name":"fun from(typename: String, vararg values: String): CacheKey","description":"com.apollographql.cache.normalized.api.CacheKey.Companion.from","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-key/-companion/from.html","searchKeys":["from","fun from(typename: String, vararg values: String): CacheKey","com.apollographql.cache.normalized.api.CacheKey.Companion.from"]},{"name":"fun hasHeader(headerName: String): Boolean","description":"com.apollographql.cache.normalized.api.CacheHeaders.hasHeader","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-headers/has-header.html","searchKeys":["hasHeader","fun hasHeader(headerName: String): Boolean","com.apollographql.cache.normalized.api.CacheHeaders.hasHeader"]},{"name":"fun headerValue(header: String): String?","description":"com.apollographql.cache.normalized.api.CacheHeaders.headerValue","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-headers/header-value.html","searchKeys":["headerValue","fun headerValue(header: String): String?","com.apollographql.cache.normalized.api.CacheHeaders.headerValue"]},{"name":"fun maximumSize(maximumSize: Long): CacheBuilder<Key, Output>","description":"com.apollographql.cache.normalized.api.internal.store.CacheBuilder.maximumSize","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal.store/-cache-builder/maximum-size.html","searchKeys":["maximumSize","fun maximumSize(maximumSize: Long): CacheBuilder<Key, Output>","com.apollographql.cache.normalized.api.internal.store.CacheBuilder.maximumSize"]},{"name":"fun mergeWith(newRecord: Record): Pair<Record, Set<String>>","description":"com.apollographql.cache.normalized.api.Record.mergeWith","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-record/merge-with.html","searchKeys":["mergeWith","fun mergeWith(newRecord: Record): Pair<Record, Set<String>>","com.apollographql.cache.normalized.api.Record.mergeWith"]},{"name":"fun networkEndMillis(networkEndMillis: Long): CacheInfo.Builder","description":"com.apollographql.cache.normalized.CacheInfo.Builder.networkEndMillis","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/-builder/network-end-millis.html","searchKeys":["networkEndMillis","fun networkEndMillis(networkEndMillis: Long): CacheInfo.Builder","com.apollographql.cache.normalized.CacheInfo.Builder.networkEndMillis"]},{"name":"fun networkException(networkException: ApolloException?): CacheInfo.Builder","description":"com.apollographql.cache.normalized.CacheInfo.Builder.networkException","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/-builder/network-exception.html","searchKeys":["networkException","fun networkException(networkException: ApolloException?): CacheInfo.Builder","com.apollographql.cache.normalized.CacheInfo.Builder.networkException"]},{"name":"fun networkStartMillis(networkStartMillis: Long): CacheInfo.Builder","description":"com.apollographql.cache.normalized.CacheInfo.Builder.networkStartMillis","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/-builder/network-start-millis.html","searchKeys":["networkStartMillis","fun networkStartMillis(networkStartMillis: Long): CacheInfo.Builder","com.apollographql.cache.normalized.CacheInfo.Builder.networkStartMillis"]},{"name":"fun newBuilder(): CacheHeaders.Builder","description":"com.apollographql.cache.normalized.api.CacheHeaders.newBuilder","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-headers/new-builder.html","searchKeys":["newBuilder","fun newBuilder(): CacheHeaders.Builder","com.apollographql.cache.normalized.api.CacheHeaders.newBuilder"]},{"name":"fun newBuilder(): CacheInfo.Builder","description":"com.apollographql.cache.normalized.CacheInfo.newBuilder","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/new-builder.html","searchKeys":["newBuilder","fun newBuilder(): CacheInfo.Builder","com.apollographql.cache.normalized.CacheInfo.newBuilder"]},{"name":"fun prettifyDump(dump: Map<KClass<*>, Map<String, Record>>): String","description":"com.apollographql.cache.normalized.api.NormalizedCache.Companion.prettifyDump","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-normalized-cache/-companion/prettify-dump.html","searchKeys":["prettifyDump","fun prettifyDump(dump: Map<KClass<*>, Map<String, Record>>): String","com.apollographql.cache.normalized.api.NormalizedCache.Companion.prettifyDump"]},{"name":"fun referencedFields(): List<CacheKey>","description":"com.apollographql.cache.normalized.api.Record.referencedFields","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-record/referenced-fields.html","searchKeys":["referencedFields","fun referencedFields(): List<CacheKey>","com.apollographql.cache.normalized.api.Record.referencedFields"]},{"name":"fun removeOptimisticUpdates(mutationId: Uuid): Set<String>","description":"com.apollographql.cache.normalized.api.internal.OptimisticNormalizedCache.removeOptimisticUpdates","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal/-optimistic-normalized-cache/remove-optimistic-updates.html","searchKeys":["removeOptimisticUpdates","fun removeOptimisticUpdates(mutationId: Uuid): Set<String>","com.apollographql.cache.normalized.api.internal.OptimisticNormalizedCache.removeOptimisticUpdates"]},{"name":"fun rootKey(): CacheKey","description":"com.apollographql.cache.normalized.api.CacheKey.Companion.rootKey","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-key/-companion/root-key.html","searchKeys":["rootKey","fun rootKey(): CacheKey","com.apollographql.cache.normalized.api.CacheKey.Companion.rootKey"]},{"name":"fun serialize(): String","description":"com.apollographql.cache.normalized.api.CacheKey.serialize","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-key/serialize.html","searchKeys":["serialize","fun serialize(): String","com.apollographql.cache.normalized.api.CacheKey.serialize"]},{"name":"fun serialize(record: Record): ByteArray","description":"com.apollographql.cache.normalized.api.internal.BlobRecordSerializer.serialize","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal/-blob-record-serializer/serialize.html","searchKeys":["serialize","fun serialize(record: Record): ByteArray","com.apollographql.cache.normalized.api.internal.BlobRecordSerializer.serialize"]},{"name":"fun ticker(ticker: Ticker): CacheBuilder<Key, Output>","description":"com.apollographql.cache.normalized.api.internal.store.CacheBuilder.ticker","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal.store/-cache-builder/ticker.html","searchKeys":["ticker","fun ticker(ticker: Ticker): CacheBuilder<Key, Output>","com.apollographql.cache.normalized.api.internal.store.CacheBuilder.ticker"]},{"name":"fun valueOf(value: String): FetchPolicy","description":"com.apollographql.cache.normalized.FetchPolicy.valueOf","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-fetch-policy/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): FetchPolicy","com.apollographql.cache.normalized.FetchPolicy.valueOf"]},{"name":"fun values(): Array<FetchPolicy>","description":"com.apollographql.cache.normalized.FetchPolicy.values","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-fetch-policy/values.html","searchKeys":["values","fun values(): Array<FetchPolicy>","com.apollographql.cache.normalized.FetchPolicy.values"]},{"name":"fun weigher(maximumWeight: Long, weigher: Weigher<Key, Output>): CacheBuilder<Key, Output>","description":"com.apollographql.cache.normalized.api.internal.store.CacheBuilder.weigher","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal.store/-cache-builder/weigher.html","searchKeys":["weigher","fun weigher(maximumWeight: Long, weigher: Weigher<Key, Output>): CacheBuilder<Key, Output>","com.apollographql.cache.normalized.api.internal.store.CacheBuilder.weigher"]},{"name":"interface ApolloStore","description":"com.apollographql.cache.normalized.ApolloStore","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-apollo-store/index.html","searchKeys":["ApolloStore","interface ApolloStore","com.apollographql.cache.normalized.ApolloStore"]},{"name":"interface Cache<Key : Any, Value : Any>","description":"com.apollographql.cache.normalized.api.internal.store.Cache","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal.store/-cache/index.html","searchKeys":["Cache","interface Cache<Key : Any, Value : Any>","com.apollographql.cache.normalized.api.internal.store.Cache"]},{"name":"interface CacheData","description":"com.apollographql.cache.normalized.api.CacheData","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-data/index.html","searchKeys":["CacheData","interface CacheData","com.apollographql.cache.normalized.api.CacheData"]},{"name":"interface CacheKeyGenerator","description":"com.apollographql.cache.normalized.api.CacheKeyGenerator","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-key-generator/index.html","searchKeys":["CacheKeyGenerator","interface CacheKeyGenerator","com.apollographql.cache.normalized.api.CacheKeyGenerator"]},{"name":"interface CacheResolver","description":"com.apollographql.cache.normalized.api.CacheResolver","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-resolver/index.html","searchKeys":["CacheResolver","interface CacheResolver","com.apollographql.cache.normalized.api.CacheResolver"]},{"name":"interface EmbeddedFieldsProvider","description":"com.apollographql.cache.normalized.api.EmbeddedFieldsProvider","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-embedded-fields-provider/index.html","searchKeys":["EmbeddedFieldsProvider","interface EmbeddedFieldsProvider","com.apollographql.cache.normalized.api.EmbeddedFieldsProvider"]},{"name":"interface FieldKeyGenerator","description":"com.apollographql.cache.normalized.api.FieldKeyGenerator","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-field-key-generator/index.html","searchKeys":["FieldKeyGenerator","interface FieldKeyGenerator","com.apollographql.cache.normalized.api.FieldKeyGenerator"]},{"name":"interface FieldMerger","description":"com.apollographql.cache.normalized.api.FieldRecordMerger.FieldMerger","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-field-record-merger/-field-merger/index.html","searchKeys":["FieldMerger","interface FieldMerger","com.apollographql.cache.normalized.api.FieldRecordMerger.FieldMerger"]},{"name":"interface MetadataGenerator","description":"com.apollographql.cache.normalized.api.MetadataGenerator","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-metadata-generator/index.html","searchKeys":["MetadataGenerator","interface MetadataGenerator","com.apollographql.cache.normalized.api.MetadataGenerator"]},{"name":"interface NormalizedCache : ReadOnlyNormalizedCache","description":"com.apollographql.cache.normalized.api.NormalizedCache","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-normalized-cache/index.html","searchKeys":["NormalizedCache","interface NormalizedCache : ReadOnlyNormalizedCache","com.apollographql.cache.normalized.api.NormalizedCache"]},{"name":"interface ReadOnlyNormalizedCache","description":"com.apollographql.cache.normalized.api.ReadOnlyNormalizedCache","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-read-only-normalized-cache/index.html","searchKeys":["ReadOnlyNormalizedCache","interface ReadOnlyNormalizedCache","com.apollographql.cache.normalized.api.ReadOnlyNormalizedCache"]},{"name":"interface RecordMerger","description":"com.apollographql.cache.normalized.api.RecordMerger","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-record-merger/index.html","searchKeys":["RecordMerger","interface RecordMerger","com.apollographql.cache.normalized.api.RecordMerger"]},{"name":"object ApolloCacheHeaders","description":"com.apollographql.cache.normalized.api.ApolloCacheHeaders","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-apollo-cache-headers/index.html","searchKeys":["ApolloCacheHeaders","object ApolloCacheHeaders","com.apollographql.cache.normalized.api.ApolloCacheHeaders"]},{"name":"object BlobRecordSerializer","description":"com.apollographql.cache.normalized.api.internal.BlobRecordSerializer","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal/-blob-record-serializer/index.html","searchKeys":["BlobRecordSerializer","object BlobRecordSerializer","com.apollographql.cache.normalized.api.internal.BlobRecordSerializer"]},{"name":"object Companion","description":"com.apollographql.cache.normalized.api.CacheHeaders.Companion","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-headers/-companion/index.html","searchKeys":["Companion","object Companion","com.apollographql.cache.normalized.api.CacheHeaders.Companion"]},{"name":"object Companion","description":"com.apollographql.cache.normalized.api.CacheKey.Companion","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-key/-companion/index.html","searchKeys":["Companion","object Companion","com.apollographql.cache.normalized.api.CacheKey.Companion"]},{"name":"object Companion","description":"com.apollographql.cache.normalized.api.ConnectionEmbeddedFieldsProvider.Companion","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-connection-embedded-fields-provider/-companion/index.html","searchKeys":["Companion","object Companion","com.apollographql.cache.normalized.api.ConnectionEmbeddedFieldsProvider.Companion"]},{"name":"object Companion","description":"com.apollographql.cache.normalized.api.ConnectionFieldKeyGenerator.Companion","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-connection-field-key-generator/-companion/index.html","searchKeys":["Companion","object Companion","com.apollographql.cache.normalized.api.ConnectionFieldKeyGenerator.Companion"]},{"name":"object Companion","description":"com.apollographql.cache.normalized.api.NormalizedCache.Companion","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-normalized-cache/-companion/index.html","searchKeys":["Companion","object Companion","com.apollographql.cache.normalized.api.NormalizedCache.Companion"]},{"name":"object Companion","description":"com.apollographql.cache.normalized.api.Record.Companion","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-record/-companion/index.html","searchKeys":["Companion","object Companion","com.apollographql.cache.normalized.api.Record.Companion"]},{"name":"object Companion","description":"com.apollographql.cache.normalized.api.internal.store.CacheBuilder.Companion","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal.store/-cache-builder/-companion/index.html","searchKeys":["Companion","object Companion","com.apollographql.cache.normalized.api.internal.store.CacheBuilder.Companion"]},{"name":"object DefaultCacheResolver : CacheResolver","description":"com.apollographql.cache.normalized.api.DefaultCacheResolver","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-default-cache-resolver/index.html","searchKeys":["DefaultCacheResolver","object DefaultCacheResolver : CacheResolver","com.apollographql.cache.normalized.api.DefaultCacheResolver"]},{"name":"object DefaultEmbeddedFieldsProvider : EmbeddedFieldsProvider","description":"com.apollographql.cache.normalized.api.DefaultEmbeddedFieldsProvider","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-default-embedded-fields-provider/index.html","searchKeys":["DefaultEmbeddedFieldsProvider","object DefaultEmbeddedFieldsProvider : EmbeddedFieldsProvider","com.apollographql.cache.normalized.api.DefaultEmbeddedFieldsProvider"]},{"name":"object DefaultFieldKeyGenerator : FieldKeyGenerator","description":"com.apollographql.cache.normalized.api.DefaultFieldKeyGenerator","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-default-field-key-generator/index.html","searchKeys":["DefaultFieldKeyGenerator","object DefaultFieldKeyGenerator : FieldKeyGenerator","com.apollographql.cache.normalized.api.DefaultFieldKeyGenerator"]},{"name":"object DefaultRecordMerger : RecordMerger","description":"com.apollographql.cache.normalized.api.DefaultRecordMerger","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-default-record-merger/index.html","searchKeys":["DefaultRecordMerger","object DefaultRecordMerger : RecordMerger","com.apollographql.cache.normalized.api.DefaultRecordMerger"]},{"name":"object EmptyMetadataGenerator : MetadataGenerator","description":"com.apollographql.cache.normalized.api.EmptyMetadataGenerator","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-empty-metadata-generator/index.html","searchKeys":["EmptyMetadataGenerator","object EmptyMetadataGenerator : MetadataGenerator","com.apollographql.cache.normalized.api.EmptyMetadataGenerator"]},{"name":"object FieldPolicyCacheResolver : CacheResolver","description":"com.apollographql.cache.normalized.api.FieldPolicyCacheResolver","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-field-policy-cache-resolver/index.html","searchKeys":["FieldPolicyCacheResolver","object FieldPolicyCacheResolver : CacheResolver","com.apollographql.cache.normalized.api.FieldPolicyCacheResolver"]},{"name":"object Key : ExecutionContext.Key<CacheInfo> ","description":"com.apollographql.cache.normalized.CacheInfo.Key","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/-key/index.html","searchKeys":["Key","object Key : ExecutionContext.Key<CacheInfo> ","com.apollographql.cache.normalized.CacheInfo.Key"]},{"name":"object TypePolicyCacheKeyGenerator : CacheKeyGenerator","description":"com.apollographql.cache.normalized.api.TypePolicyCacheKeyGenerator","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-type-policy-cache-key-generator/index.html","searchKeys":["TypePolicyCacheKeyGenerator","object TypePolicyCacheKeyGenerator : CacheKeyGenerator","com.apollographql.cache.normalized.api.TypePolicyCacheKeyGenerator"]},{"name":"open fun listOfCacheKeysForField(context: ResolverContext): List<CacheKey?>?","description":"com.apollographql.cache.normalized.api.CacheKeyResolver.listOfCacheKeysForField","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-key-resolver/list-of-cache-keys-for-field.html","searchKeys":["listOfCacheKeysForField","open fun listOfCacheKeysForField(context: ResolverContext): List<CacheKey?>?","com.apollographql.cache.normalized.api.CacheKeyResolver.listOfCacheKeysForField"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.apollographql.cache.normalized.api.CacheKey.equals","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-key/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.apollographql.cache.normalized.api.CacheKey.equals"]},{"name":"open override fun <D : Operation.Data> intercept(request: ApolloRequest<D>, chain: ApolloInterceptorChain): Flow<ApolloResponse<D>>","description":"com.apollographql.cache.normalized.CacheMissLoggingInterceptor.intercept","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-miss-logging-interceptor/intercept.html","searchKeys":["intercept","open override fun <D : Operation.Data> intercept(request: ApolloRequest<D>, chain: ApolloInterceptorChain): Flow<ApolloResponse<D>>","com.apollographql.cache.normalized.CacheMissLoggingInterceptor.intercept"]},{"name":"open override fun cacheKeyForObject(obj: Map<String, Any?>, context: CacheKeyGeneratorContext): CacheKey?","description":"com.apollographql.cache.normalized.api.TypePolicyCacheKeyGenerator.cacheKeyForObject","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-type-policy-cache-key-generator/cache-key-for-object.html","searchKeys":["cacheKeyForObject","open override fun cacheKeyForObject(obj: Map<String, Any?>, context: CacheKeyGeneratorContext): CacheKey?","com.apollographql.cache.normalized.api.TypePolicyCacheKeyGenerator.cacheKeyForObject"]},{"name":"open override fun clearAll()","description":"com.apollographql.cache.normalized.api.MemoryCache.clearAll","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-memory-cache/clear-all.html","searchKeys":["clearAll","open override fun clearAll()","com.apollographql.cache.normalized.api.MemoryCache.clearAll"]},{"name":"open override fun clearAll()","description":"com.apollographql.cache.normalized.api.internal.OptimisticNormalizedCache.clearAll","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal/-optimistic-normalized-cache/clear-all.html","searchKeys":["clearAll","open override fun clearAll()","com.apollographql.cache.normalized.api.internal.OptimisticNormalizedCache.clearAll"]},{"name":"open override fun create(): MemoryCache","description":"com.apollographql.cache.normalized.api.MemoryCacheFactory.create","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-memory-cache-factory/create.html","searchKeys":["create","open override fun create(): MemoryCache","com.apollographql.cache.normalized.api.MemoryCacheFactory.create"]},{"name":"open override fun dump(): Map<KClass<*>, Map<String, Record>>","description":"com.apollographql.cache.normalized.api.MemoryCache.dump","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-memory-cache/dump.html","searchKeys":["dump","open override fun dump(): Map<KClass<*>, Map<String, Record>>","com.apollographql.cache.normalized.api.MemoryCache.dump"]},{"name":"open override fun dump(): Map<KClass<*>, Map<String, Record>>","description":"com.apollographql.cache.normalized.api.internal.OptimisticNormalizedCache.dump","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal/-optimistic-normalized-cache/dump.html","searchKeys":["dump","open override fun dump(): Map<KClass<*>, Map<String, Record>>","com.apollographql.cache.normalized.api.internal.OptimisticNormalizedCache.dump"]},{"name":"open override fun getEmbeddedFields(context: EmbeddedFieldsContext): List<String>","description":"com.apollographql.cache.normalized.api.ConnectionEmbeddedFieldsProvider.getEmbeddedFields","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-connection-embedded-fields-provider/get-embedded-fields.html","searchKeys":["getEmbeddedFields","open override fun getEmbeddedFields(context: EmbeddedFieldsContext): List<String>","com.apollographql.cache.normalized.api.ConnectionEmbeddedFieldsProvider.getEmbeddedFields"]},{"name":"open override fun getEmbeddedFields(context: EmbeddedFieldsContext): List<String>","description":"com.apollographql.cache.normalized.api.DefaultEmbeddedFieldsProvider.getEmbeddedFields","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-default-embedded-fields-provider/get-embedded-fields.html","searchKeys":["getEmbeddedFields","open override fun getEmbeddedFields(context: EmbeddedFieldsContext): List<String>","com.apollographql.cache.normalized.api.DefaultEmbeddedFieldsProvider.getEmbeddedFields"]},{"name":"open override fun getFieldKey(context: FieldKeyContext): String","description":"com.apollographql.cache.normalized.api.ConnectionFieldKeyGenerator.getFieldKey","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-connection-field-key-generator/get-field-key.html","searchKeys":["getFieldKey","open override fun getFieldKey(context: FieldKeyContext): String","com.apollographql.cache.normalized.api.ConnectionFieldKeyGenerator.getFieldKey"]},{"name":"open override fun getFieldKey(context: FieldKeyContext): String","description":"com.apollographql.cache.normalized.api.DefaultFieldKeyGenerator.getFieldKey","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-default-field-key-generator/get-field-key.html","searchKeys":["getFieldKey","open override fun getFieldKey(context: FieldKeyContext): String","com.apollographql.cache.normalized.api.DefaultFieldKeyGenerator.getFieldKey"]},{"name":"open override fun hashCode(): Int","description":"com.apollographql.cache.normalized.api.CacheKey.hashCode","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-key/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.apollographql.cache.normalized.api.CacheKey.hashCode"]},{"name":"open override fun loadRecord(key: String, cacheHeaders: CacheHeaders): Record?","description":"com.apollographql.cache.normalized.api.MemoryCache.loadRecord","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-memory-cache/load-record.html","searchKeys":["loadRecord","open override fun loadRecord(key: String, cacheHeaders: CacheHeaders): Record?","com.apollographql.cache.normalized.api.MemoryCache.loadRecord"]},{"name":"open override fun loadRecord(key: String, cacheHeaders: CacheHeaders): Record?","description":"com.apollographql.cache.normalized.api.internal.OptimisticNormalizedCache.loadRecord","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal/-optimistic-normalized-cache/load-record.html","searchKeys":["loadRecord","open override fun loadRecord(key: String, cacheHeaders: CacheHeaders): Record?","com.apollographql.cache.normalized.api.internal.OptimisticNormalizedCache.loadRecord"]},{"name":"open override fun loadRecords(keys: Collection<String>, cacheHeaders: CacheHeaders): Collection<Record>","description":"com.apollographql.cache.normalized.api.MemoryCache.loadRecords","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-memory-cache/load-records.html","searchKeys":["loadRecords","open override fun loadRecords(keys: Collection<String>, cacheHeaders: CacheHeaders): Collection<Record>","com.apollographql.cache.normalized.api.MemoryCache.loadRecords"]},{"name":"open override fun loadRecords(keys: Collection<String>, cacheHeaders: CacheHeaders): Collection<Record>","description":"com.apollographql.cache.normalized.api.internal.OptimisticNormalizedCache.loadRecords","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal/-optimistic-normalized-cache/load-records.html","searchKeys":["loadRecords","open override fun loadRecords(keys: Collection<String>, cacheHeaders: CacheHeaders): Collection<Record>","com.apollographql.cache.normalized.api.internal.OptimisticNormalizedCache.loadRecords"]},{"name":"open override fun merge(existing: Record, incoming: Record): Pair<Record, Set<String>>","description":"com.apollographql.cache.normalized.api.DefaultRecordMerger.merge","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-default-record-merger/merge.html","searchKeys":["merge","open override fun merge(existing: Record, incoming: Record): Pair<Record, Set<String>>","com.apollographql.cache.normalized.api.DefaultRecordMerger.merge"]},{"name":"open override fun merge(existing: Record, incoming: Record): Pair<Record, Set<String>>","description":"com.apollographql.cache.normalized.api.FieldRecordMerger.merge","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-field-record-merger/merge.html","searchKeys":["merge","open override fun merge(existing: Record, incoming: Record): Pair<Record, Set<String>>","com.apollographql.cache.normalized.api.FieldRecordMerger.merge"]},{"name":"open override fun merge(record: Record, cacheHeaders: CacheHeaders, recordMerger: RecordMerger): Set<String>","description":"com.apollographql.cache.normalized.api.MemoryCache.merge","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-memory-cache/merge.html","searchKeys":["merge","open override fun merge(record: Record, cacheHeaders: CacheHeaders, recordMerger: RecordMerger): Set<String>","com.apollographql.cache.normalized.api.MemoryCache.merge"]},{"name":"open override fun merge(record: Record, cacheHeaders: CacheHeaders, recordMerger: RecordMerger): Set<String>","description":"com.apollographql.cache.normalized.api.internal.OptimisticNormalizedCache.merge","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal/-optimistic-normalized-cache/merge.html","searchKeys":["merge","open override fun merge(record: Record, cacheHeaders: CacheHeaders, recordMerger: RecordMerger): Set<String>","com.apollographql.cache.normalized.api.internal.OptimisticNormalizedCache.merge"]},{"name":"open override fun merge(records: Collection<Record>, cacheHeaders: CacheHeaders, recordMerger: RecordMerger): Set<String>","description":"com.apollographql.cache.normalized.api.MemoryCache.merge","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-memory-cache/merge.html","searchKeys":["merge","open override fun merge(records: Collection<Record>, cacheHeaders: CacheHeaders, recordMerger: RecordMerger): Set<String>","com.apollographql.cache.normalized.api.MemoryCache.merge"]},{"name":"open override fun merge(records: Collection<Record>, cacheHeaders: CacheHeaders, recordMerger: RecordMerger): Set<String>","description":"com.apollographql.cache.normalized.api.internal.OptimisticNormalizedCache.merge","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal/-optimistic-normalized-cache/merge.html","searchKeys":["merge","open override fun merge(records: Collection<Record>, cacheHeaders: CacheHeaders, recordMerger: RecordMerger): Set<String>","com.apollographql.cache.normalized.api.internal.OptimisticNormalizedCache.merge"]},{"name":"open override fun metadataForObject(obj: ApolloJsonElement, context: MetadataGeneratorContext): Map<String, ApolloJsonElement>","description":"com.apollographql.cache.normalized.api.ConnectionMetadataGenerator.metadataForObject","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-connection-metadata-generator/metadata-for-object.html","searchKeys":["metadataForObject","open override fun metadataForObject(obj: ApolloJsonElement, context: MetadataGeneratorContext): Map<String, ApolloJsonElement>","com.apollographql.cache.normalized.api.ConnectionMetadataGenerator.metadataForObject"]},{"name":"open override fun metadataForObject(obj: ApolloJsonElement, context: MetadataGeneratorContext): Map<String, ApolloJsonElement>","description":"com.apollographql.cache.normalized.api.EmptyMetadataGenerator.metadataForObject","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-empty-metadata-generator/metadata-for-object.html","searchKeys":["metadataForObject","open override fun metadataForObject(obj: ApolloJsonElement, context: MetadataGeneratorContext): Map<String, ApolloJsonElement>","com.apollographql.cache.normalized.api.EmptyMetadataGenerator.metadataForObject"]},{"name":"open override fun remove(cacheKey: CacheKey, cascade: Boolean): Boolean","description":"com.apollographql.cache.normalized.api.MemoryCache.remove","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-memory-cache/remove.html","searchKeys":["remove","open override fun remove(cacheKey: CacheKey, cascade: Boolean): Boolean","com.apollographql.cache.normalized.api.MemoryCache.remove"]},{"name":"open override fun remove(cacheKey: CacheKey, cascade: Boolean): Boolean","description":"com.apollographql.cache.normalized.api.internal.OptimisticNormalizedCache.remove","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal/-optimistic-normalized-cache/remove.html","searchKeys":["remove","open override fun remove(cacheKey: CacheKey, cascade: Boolean): Boolean","com.apollographql.cache.normalized.api.internal.OptimisticNormalizedCache.remove"]},{"name":"open override fun remove(pattern: String): Int","description":"com.apollographql.cache.normalized.api.MemoryCache.remove","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-memory-cache/remove.html","searchKeys":["remove","open override fun remove(pattern: String): Int","com.apollographql.cache.normalized.api.MemoryCache.remove"]},{"name":"open override fun remove(pattern: String): Int","description":"com.apollographql.cache.normalized.api.internal.OptimisticNormalizedCache.remove","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal/-optimistic-normalized-cache/remove.html","searchKeys":["remove","open override fun remove(pattern: String): Int","com.apollographql.cache.normalized.api.internal.OptimisticNormalizedCache.remove"]},{"name":"open override fun resolveField(context: ResolverContext): Any?","description":"com.apollographql.cache.normalized.api.DefaultCacheResolver.resolveField","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-default-cache-resolver/resolve-field.html","searchKeys":["resolveField","open override fun resolveField(context: ResolverContext): Any?","com.apollographql.cache.normalized.api.DefaultCacheResolver.resolveField"]},{"name":"open override fun resolveField(context: ResolverContext): Any?","description":"com.apollographql.cache.normalized.api.ExpireDateCacheResolver.resolveField","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-expire-date-cache-resolver/resolve-field.html","searchKeys":["resolveField","open override fun resolveField(context: ResolverContext): Any?","com.apollographql.cache.normalized.api.ExpireDateCacheResolver.resolveField"]},{"name":"open override fun resolveField(context: ResolverContext): Any?","description":"com.apollographql.cache.normalized.api.FieldPolicyCacheResolver.resolveField","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-field-policy-cache-resolver/resolve-field.html","searchKeys":["resolveField","open override fun resolveField(context: ResolverContext): Any?","com.apollographql.cache.normalized.api.FieldPolicyCacheResolver.resolveField"]},{"name":"open override fun resolveField(context: ResolverContext): Any?","description":"com.apollographql.cache.normalized.api.ReceiveDateCacheResolver.resolveField","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-receive-date-cache-resolver/resolve-field.html","searchKeys":["resolveField","open override fun resolveField(context: ResolverContext): Any?","com.apollographql.cache.normalized.api.ReceiveDateCacheResolver.resolveField"]},{"name":"open override fun toString(): String","description":"com.apollographql.cache.normalized.api.CacheKey.toString","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-key/to-string.html","searchKeys":["toString","open override fun toString(): String","com.apollographql.cache.normalized.api.CacheKey.toString"]},{"name":"open override val key: ExecutionContext.Key<*>","description":"com.apollographql.cache.normalized.CacheInfo.key","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/key.html","searchKeys":["key","open override val key: ExecutionContext.Key<*>","com.apollographql.cache.normalized.CacheInfo.key"]},{"name":"operator fun plus(cacheHeaders: CacheHeaders): CacheHeaders","description":"com.apollographql.cache.normalized.api.CacheHeaders.plus","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-headers/plus.html","searchKeys":["plus","operator fun plus(cacheHeaders: CacheHeaders): CacheHeaders","com.apollographql.cache.normalized.api.CacheHeaders.plus"]},{"name":"override fun resolveField(context: ResolverContext): Any?","description":"com.apollographql.cache.normalized.api.CacheKeyResolver.resolveField","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-key-resolver/resolve-field.html","searchKeys":["resolveField","override fun resolveField(context: ResolverContext): Any?","com.apollographql.cache.normalized.api.CacheKeyResolver.resolveField"]},{"name":"typealias Ticker = () -> Long","description":"com.apollographql.cache.normalized.api.internal.store.Ticker","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal.store/-ticker/index.html","searchKeys":["Ticker","typealias Ticker = () -> Long","com.apollographql.cache.normalized.api.internal.store.Ticker"]},{"name":"typealias Weigher<Key, Value> = (key: Key, value: Value) -> Int","description":"com.apollographql.cache.normalized.api.internal.store.Weigher","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api.internal.store/-weigher/index.html","searchKeys":["Weigher","typealias Weigher<Key, Value> = (key: Key, value: Value) -> Int","com.apollographql.cache.normalized.api.internal.store.Weigher"]},{"name":"val <D : Operation.Data> ApolloResponse<D>.cacheHeaders: CacheHeaders","description":"com.apollographql.cache.normalized.cacheHeaders","location":"normalized-cache-incubating/com.apollographql.cache.normalized/cache-headers.html","searchKeys":["cacheHeaders","val <D : Operation.Data> ApolloResponse<D>.cacheHeaders: CacheHeaders","com.apollographql.cache.normalized.cacheHeaders"]},{"name":"val <D : Operation.Data> ApolloResponse<D>.cacheInfo: CacheInfo?","description":"com.apollographql.cache.normalized.cacheInfo","location":"normalized-cache-incubating/com.apollographql.cache.normalized/cache-info.html","searchKeys":["cacheInfo","val <D : Operation.Data> ApolloResponse<D>.cacheInfo: CacheInfo?","com.apollographql.cache.normalized.cacheInfo"]},{"name":"val <D : Operation.Data> ApolloResponse<D>.isFromCache: Boolean","description":"com.apollographql.cache.normalized.isFromCache","location":"normalized-cache-incubating/com.apollographql.cache.normalized/is-from-cache.html","searchKeys":["isFromCache","val <D : Operation.Data> ApolloResponse<D>.isFromCache: Boolean","com.apollographql.cache.normalized.isFromCache"]},{"name":"val ApolloClient.apolloStore: ApolloStore","description":"com.apollographql.cache.normalized.apolloStore","location":"normalized-cache-incubating/com.apollographql.cache.normalized/apollo-store.html","searchKeys":["apolloStore","val ApolloClient.apolloStore: ApolloStore","com.apollographql.cache.normalized.apolloStore"]},{"name":"val CacheAndNetworkInterceptor: ApolloInterceptor","description":"com.apollographql.cache.normalized.CacheAndNetworkInterceptor","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-and-network-interceptor.html","searchKeys":["CacheAndNetworkInterceptor","val CacheAndNetworkInterceptor: ApolloInterceptor","com.apollographql.cache.normalized.CacheAndNetworkInterceptor"]},{"name":"val CacheFirstInterceptor: ApolloInterceptor","description":"com.apollographql.cache.normalized.CacheFirstInterceptor","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-first-interceptor.html","searchKeys":["CacheFirstInterceptor","val CacheFirstInterceptor: ApolloInterceptor","com.apollographql.cache.normalized.CacheFirstInterceptor"]},{"name":"val CacheOnlyInterceptor: ApolloInterceptor","description":"com.apollographql.cache.normalized.CacheOnlyInterceptor","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-only-interceptor.html","searchKeys":["CacheOnlyInterceptor","val CacheOnlyInterceptor: ApolloInterceptor","com.apollographql.cache.normalized.CacheOnlyInterceptor"]},{"name":"val ConnectionRecordMerger: FieldRecordMerger","description":"com.apollographql.cache.normalized.api.ConnectionRecordMerger","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-connection-record-merger.html","searchKeys":["ConnectionRecordMerger","val ConnectionRecordMerger: FieldRecordMerger","com.apollographql.cache.normalized.api.ConnectionRecordMerger"]},{"name":"val NONE: CacheHeaders","description":"com.apollographql.cache.normalized.api.CacheHeaders.Companion.NONE","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-headers/-companion/-n-o-n-e.html","searchKeys":["NONE","val NONE: CacheHeaders","com.apollographql.cache.normalized.api.CacheHeaders.Companion.NONE"]},{"name":"val NetworkFirstInterceptor: ApolloInterceptor","description":"com.apollographql.cache.normalized.NetworkFirstInterceptor","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-network-first-interceptor.html","searchKeys":["NetworkFirstInterceptor","val NetworkFirstInterceptor: ApolloInterceptor","com.apollographql.cache.normalized.NetworkFirstInterceptor"]},{"name":"val NetworkOnlyInterceptor: ApolloInterceptor","description":"com.apollographql.cache.normalized.NetworkOnlyInterceptor","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-network-only-interceptor.html","searchKeys":["NetworkOnlyInterceptor","val NetworkOnlyInterceptor: ApolloInterceptor","com.apollographql.cache.normalized.NetworkOnlyInterceptor"]},{"name":"val cacheEndMillis: Long","description":"com.apollographql.cache.normalized.CacheInfo.cacheEndMillis","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/cache-end-millis.html","searchKeys":["cacheEndMillis","val cacheEndMillis: Long","com.apollographql.cache.normalized.CacheInfo.cacheEndMillis"]},{"name":"val cacheHeaders: CacheHeaders","description":"com.apollographql.cache.normalized.api.ResolverContext.cacheHeaders","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-resolver-context/cache-headers.html","searchKeys":["cacheHeaders","val cacheHeaders: CacheHeaders","com.apollographql.cache.normalized.api.ResolverContext.cacheHeaders"]},{"name":"val cacheMissException: CacheMissException?","description":"com.apollographql.cache.normalized.CacheInfo.cacheMissException","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/cache-miss-exception.html","searchKeys":["cacheMissException","val cacheMissException: CacheMissException?","com.apollographql.cache.normalized.CacheInfo.cacheMissException"]},{"name":"val cacheStartMillis: Long","description":"com.apollographql.cache.normalized.CacheInfo.cacheStartMillis","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/cache-start-millis.html","searchKeys":["cacheStartMillis","val cacheStartMillis: Long","com.apollographql.cache.normalized.CacheInfo.cacheStartMillis"]},{"name":"val entries: EnumEntries<FetchPolicy>","description":"com.apollographql.cache.normalized.FetchPolicy.entries","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-fetch-policy/entries.html","searchKeys":["entries","val entries: EnumEntries<FetchPolicy>","com.apollographql.cache.normalized.FetchPolicy.entries"]},{"name":"val field: CompiledField","description":"com.apollographql.cache.normalized.api.CacheKeyGeneratorContext.field","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-key-generator-context/field.html","searchKeys":["field","val field: CompiledField","com.apollographql.cache.normalized.api.CacheKeyGeneratorContext.field"]},{"name":"val field: CompiledField","description":"com.apollographql.cache.normalized.api.FieldKeyContext.field","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-field-key-context/field.html","searchKeys":["field","val field: CompiledField","com.apollographql.cache.normalized.api.FieldKeyContext.field"]},{"name":"val field: CompiledField","description":"com.apollographql.cache.normalized.api.MetadataGeneratorContext.field","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-metadata-generator-context/field.html","searchKeys":["field","val field: CompiledField","com.apollographql.cache.normalized.api.MetadataGeneratorContext.field"]},{"name":"val field: CompiledField","description":"com.apollographql.cache.normalized.api.ResolverContext.field","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-resolver-context/field.html","searchKeys":["field","val field: CompiledField","com.apollographql.cache.normalized.api.ResolverContext.field"]},{"name":"val fieldKeyGenerator: FieldKeyGenerator","description":"com.apollographql.cache.normalized.api.ResolverContext.fieldKeyGenerator","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-resolver-context/field-key-generator.html","searchKeys":["fieldKeyGenerator","val fieldKeyGenerator: FieldKeyGenerator","com.apollographql.cache.normalized.api.ResolverContext.fieldKeyGenerator"]},{"name":"val fields: Map<String, Any?>","description":"com.apollographql.cache.normalized.api.Record.fields","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-record/fields.html","searchKeys":["fields","val fields: Map<String, Any?>","com.apollographql.cache.normalized.api.Record.fields"]},{"name":"val hit: Boolean","description":"com.apollographql.cache.normalized.CacheInfo.hit","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/hit.html","searchKeys":["hit","val hit: Boolean","com.apollographql.cache.normalized.CacheInfo.hit"]},{"name":"val isCacheHit: Boolean","description":"com.apollographql.cache.normalized.CacheInfo.isCacheHit","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/is-cache-hit.html","searchKeys":["isCacheHit","val isCacheHit: Boolean","com.apollographql.cache.normalized.CacheInfo.isCacheHit"]},{"name":"val key: String","description":"com.apollographql.cache.normalized.api.CacheKey.key","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-key/key.html","searchKeys":["key","val key: String","com.apollographql.cache.normalized.api.CacheKey.key"]},{"name":"val key: String","description":"com.apollographql.cache.normalized.api.Record.key","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-record/key.html","searchKeys":["key","val key: String","com.apollographql.cache.normalized.api.Record.key"]},{"name":"val metadata: Map<String, ApolloJsonElement>","description":"com.apollographql.cache.normalized.api.FieldRecordMerger.FieldInfo.metadata","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-field-record-merger/-field-info/metadata.html","searchKeys":["metadata","val metadata: Map<String, ApolloJsonElement>","com.apollographql.cache.normalized.api.FieldRecordMerger.FieldInfo.metadata"]},{"name":"val millisEnd: Long","description":"com.apollographql.cache.normalized.CacheInfo.millisEnd","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/millis-end.html","searchKeys":["millisEnd","val millisEnd: Long","com.apollographql.cache.normalized.CacheInfo.millisEnd"]},{"name":"val millisStart: Long","description":"com.apollographql.cache.normalized.CacheInfo.millisStart","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/millis-start.html","searchKeys":["millisStart","val millisStart: Long","com.apollographql.cache.normalized.CacheInfo.millisStart"]},{"name":"val missedField: String?","description":"com.apollographql.cache.normalized.CacheInfo.missedField","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/missed-field.html","searchKeys":["missedField","val missedField: String?","com.apollographql.cache.normalized.CacheInfo.missedField"]},{"name":"val missedKey: String?","description":"com.apollographql.cache.normalized.CacheInfo.missedKey","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/missed-key.html","searchKeys":["missedKey","val missedKey: String?","com.apollographql.cache.normalized.CacheInfo.missedKey"]},{"name":"val mutationId: Uuid? = null","description":"com.apollographql.cache.normalized.api.Record.mutationId","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-record/mutation-id.html","searchKeys":["mutationId","val mutationId: Uuid? = null","com.apollographql.cache.normalized.api.Record.mutationId"]},{"name":"val networkEndMillis: Long","description":"com.apollographql.cache.normalized.CacheInfo.networkEndMillis","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/network-end-millis.html","searchKeys":["networkEndMillis","val networkEndMillis: Long","com.apollographql.cache.normalized.CacheInfo.networkEndMillis"]},{"name":"val networkException: ApolloException?","description":"com.apollographql.cache.normalized.CacheInfo.networkException","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/network-exception.html","searchKeys":["networkException","val networkException: ApolloException?","com.apollographql.cache.normalized.CacheInfo.networkException"]},{"name":"val networkStartMillis: Long","description":"com.apollographql.cache.normalized.CacheInfo.networkStartMillis","location":"normalized-cache-incubating/com.apollographql.cache.normalized/-cache-info/network-start-millis.html","searchKeys":["networkStartMillis","val networkStartMillis: Long","com.apollographql.cache.normalized.CacheInfo.networkStartMillis"]},{"name":"val parent: Map<String, Any?>","description":"com.apollographql.cache.normalized.api.ResolverContext.parent","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-resolver-context/parent.html","searchKeys":["parent","val parent: Map<String, Any?>","com.apollographql.cache.normalized.api.ResolverContext.parent"]},{"name":"val parentKey: String","description":"com.apollographql.cache.normalized.api.ResolverContext.parentKey","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-resolver-context/parent-key.html","searchKeys":["parentKey","val parentKey: String","com.apollographql.cache.normalized.api.ResolverContext.parentKey"]},{"name":"val parentType: CompiledNamedType","description":"com.apollographql.cache.normalized.api.EmbeddedFieldsContext.parentType","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-embedded-fields-context/parent-type.html","searchKeys":["parentType","val parentType: CompiledNamedType","com.apollographql.cache.normalized.api.EmbeddedFieldsContext.parentType"]},{"name":"val parentType: String","description":"com.apollographql.cache.normalized.api.FieldKeyContext.parentType","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-field-key-context/parent-type.html","searchKeys":["parentType","val parentType: String","com.apollographql.cache.normalized.api.FieldKeyContext.parentType"]},{"name":"val parentType: String","description":"com.apollographql.cache.normalized.api.ResolverContext.parentType","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-resolver-context/parent-type.html","searchKeys":["parentType","val parentType: String","com.apollographql.cache.normalized.api.ResolverContext.parentType"]},{"name":"val size: Int","description":"com.apollographql.cache.normalized.api.MemoryCache.size","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-memory-cache/size.html","searchKeys":["size","val size: Int","com.apollographql.cache.normalized.api.MemoryCache.size"]},{"name":"val sizeInBytes: Int","description":"com.apollographql.cache.normalized.api.Record.sizeInBytes","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-record/size-in-bytes.html","searchKeys":["sizeInBytes","val sizeInBytes: Int","com.apollographql.cache.normalized.api.Record.sizeInBytes"]},{"name":"val value: Any?","description":"com.apollographql.cache.normalized.api.FieldRecordMerger.FieldInfo.value","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-field-record-merger/-field-info/value.html","searchKeys":["value","val value: Any?","com.apollographql.cache.normalized.api.FieldRecordMerger.FieldInfo.value"]},{"name":"val variables: Executable.Variables","description":"com.apollographql.cache.normalized.api.CacheKeyGeneratorContext.variables","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-cache-key-generator-context/variables.html","searchKeys":["variables","val variables: Executable.Variables","com.apollographql.cache.normalized.api.CacheKeyGeneratorContext.variables"]},{"name":"val variables: Executable.Variables","description":"com.apollographql.cache.normalized.api.FieldKeyContext.variables","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-field-key-context/variables.html","searchKeys":["variables","val variables: Executable.Variables","com.apollographql.cache.normalized.api.FieldKeyContext.variables"]},{"name":"val variables: Executable.Variables","description":"com.apollographql.cache.normalized.api.MetadataGeneratorContext.variables","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-metadata-generator-context/variables.html","searchKeys":["variables","val variables: Executable.Variables","com.apollographql.cache.normalized.api.MetadataGeneratorContext.variables"]},{"name":"val variables: Executable.Variables","description":"com.apollographql.cache.normalized.api.ResolverContext.variables","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-resolver-context/variables.html","searchKeys":["variables","val variables: Executable.Variables","com.apollographql.cache.normalized.api.ResolverContext.variables"]},{"name":"var metadata: Map<String, Map<String, ApolloJsonElement>>","description":"com.apollographql.cache.normalized.api.Record.metadata","location":"normalized-cache-incubating/com.apollographql.cache.normalized.api/-record/metadata.html","searchKeys":["metadata","var metadata: Map<String, Map<String, ApolloJsonElement>>","com.apollographql.cache.normalized.api.Record.metadata"]},{"name":"abstract val blob2Queries: Blob2Queries","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blob2Database.blob2Queries","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blob2-database/blob2-queries.html","searchKeys":["blob2Queries","abstract val blob2Queries: Blob2Queries","com.apollographql.cache.normalized.sql.internal.blob2.Blob2Database.blob2Queries"]},{"name":"abstract val blobQueries: BlobQueries","description":"com.apollographql.cache.normalized.sql.internal.blob.BlobDatabase.blobQueries","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob/-blob-database/blob-queries.html","searchKeys":["blobQueries","abstract val blobQueries: BlobQueries","com.apollographql.cache.normalized.sql.internal.blob.BlobDatabase.blobQueries"]},{"name":"class ApolloInitializer : Initializer<Unit> ","description":"com.apollographql.cache.normalized.sql.ApolloInitializer","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql/-apollo-initializer/index.html","searchKeys":["ApolloInitializer","class ApolloInitializer : Initializer<Unit> ","com.apollographql.cache.normalized.sql.ApolloInitializer"]},{"name":"class Blob2Queries(driver: SqlDriver) : TransacterImpl","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blob2-queries/index.html","searchKeys":["Blob2Queries","class Blob2Queries(driver: SqlDriver) : TransacterImpl","com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries"]},{"name":"class BlobQueries(driver: SqlDriver) : TransacterImpl","description":"com.apollographql.cache.normalized.sql.internal.blob.BlobQueries","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob/-blob-queries/index.html","searchKeys":["BlobQueries","class BlobQueries(driver: SqlDriver) : TransacterImpl","com.apollographql.cache.normalized.sql.internal.blob.BlobQueries"]},{"name":"class SqlNormalizedCache","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCache","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql/-sql-normalized-cache/index.html","searchKeys":["SqlNormalizedCache","class SqlNormalizedCache","com.apollographql.cache.normalized.sql.SqlNormalizedCache"]},{"name":"class TrimmableNormalizedCacheFactory : NormalizedCacheFactory","description":"com.apollographql.cache.normalized.sql.TrimmableNormalizedCacheFactory","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql/-trimmable-normalized-cache-factory/index.html","searchKeys":["TrimmableNormalizedCacheFactory","class TrimmableNormalizedCacheFactory : NormalizedCacheFactory","com.apollographql.cache.normalized.sql.TrimmableNormalizedCacheFactory"]},{"name":"const val VERSION: String","description":"com.apollographql.cache.normalized.sql.VERSION","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql/-v-e-r-s-i-o-n.html","searchKeys":["VERSION","const val VERSION: String","com.apollographql.cache.normalized.sql.VERSION"]},{"name":"constructor()","description":"com.apollographql.cache.normalized.sql.ApolloInitializer.ApolloInitializer","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql/-apollo-initializer/-apollo-initializer.html","searchKeys":["ApolloInitializer","constructor()","com.apollographql.cache.normalized.sql.ApolloInitializer.ApolloInitializer"]},{"name":"constructor(driver: SqlDriver)","description":"com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.BlobQueries","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob/-blob-queries/-blob-queries.html","searchKeys":["BlobQueries","constructor(driver: SqlDriver)","com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.BlobQueries"]},{"name":"constructor(driver: SqlDriver)","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.Blob2Queries","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blob2-queries/-blob2-queries.html","searchKeys":["Blob2Queries","constructor(driver: SqlDriver)","com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.Blob2Queries"]},{"name":"constructor(key: String, blob: ByteArray)","description":"com.apollographql.cache.normalized.sql.internal.blob.Blobs.Blobs","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob/-blobs/-blobs.html","searchKeys":["Blobs","constructor(key: String, blob: ByteArray)","com.apollographql.cache.normalized.sql.internal.blob.Blobs.Blobs"]},{"name":"constructor(key: String, blob: ByteArray)","description":"com.apollographql.cache.normalized.sql.internal.blob2.RecordForKey.RecordForKey","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-record-for-key/-record-for-key.html","searchKeys":["RecordForKey","constructor(key: String, blob: ByteArray)","com.apollographql.cache.normalized.sql.internal.blob2.RecordForKey.RecordForKey"]},{"name":"constructor(key: String, blob: ByteArray)","description":"com.apollographql.cache.normalized.sql.internal.blob2.RecordsForKeys.RecordsForKeys","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-records-for-keys/-records-for-keys.html","searchKeys":["RecordsForKeys","constructor(key: String, blob: ByteArray)","com.apollographql.cache.normalized.sql.internal.blob2.RecordsForKeys.RecordsForKeys"]},{"name":"constructor(key: String, blob: ByteArray, date: Long?)","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blobs.Blobs","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blobs/-blobs.html","searchKeys":["Blobs","constructor(key: String, blob: ByteArray, date: Long?)","com.apollographql.cache.normalized.sql.internal.blob2.Blobs.Blobs"]},{"name":"constructor(name: String?, baseDir: String?)","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCacheFactory.SqlNormalizedCacheFactory","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql/-sql-normalized-cache-factory/-sql-normalized-cache-factory.html","searchKeys":["SqlNormalizedCacheFactory","constructor(name: String?, baseDir: String?)","com.apollographql.cache.normalized.sql.SqlNormalizedCacheFactory.SqlNormalizedCacheFactory"]},{"name":"constructor(url: String, properties: Properties = Properties())","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCacheFactory.SqlNormalizedCacheFactory","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql/-sql-normalized-cache-factory/-sql-normalized-cache-factory.html","searchKeys":["SqlNormalizedCacheFactory","constructor(url: String, properties: Properties = Properties())","com.apollographql.cache.normalized.sql.SqlNormalizedCacheFactory.SqlNormalizedCacheFactory"]},{"name":"data class Blobs(val key: String, val blob: ByteArray)","description":"com.apollographql.cache.normalized.sql.internal.blob.Blobs","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob/-blobs/index.html","searchKeys":["Blobs","data class Blobs(val key: String, val blob: ByteArray)","com.apollographql.cache.normalized.sql.internal.blob.Blobs"]},{"name":"data class Blobs(val key: String, val blob: ByteArray, val date: Long?)","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blobs","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blobs/index.html","searchKeys":["Blobs","data class Blobs(val key: String, val blob: ByteArray, val date: Long?)","com.apollographql.cache.normalized.sql.internal.blob2.Blobs"]},{"name":"data class RecordForKey(val key: String, val blob: ByteArray)","description":"com.apollographql.cache.normalized.sql.internal.blob2.RecordForKey","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-record-for-key/index.html","searchKeys":["RecordForKey","data class RecordForKey(val key: String, val blob: ByteArray)","com.apollographql.cache.normalized.sql.internal.blob2.RecordForKey"]},{"name":"data class RecordsForKeys(val key: String, val blob: ByteArray)","description":"com.apollographql.cache.normalized.sql.internal.blob2.RecordsForKeys","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-records-for-keys/index.html","searchKeys":["RecordsForKeys","data class RecordsForKeys(val key: String, val blob: ByteArray)","com.apollographql.cache.normalized.sql.internal.blob2.RecordsForKeys"]},{"name":"expect class SqlNormalizedCacheFactory","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCacheFactory","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql/-sql-normalized-cache-factory/index.html","searchKeys":["SqlNormalizedCacheFactory","expect class SqlNormalizedCacheFactory","com.apollographql.cache.normalized.sql.SqlNormalizedCacheFactory"]},{"name":"expect constructor(driver: SqlDriver)","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCacheFactory.SqlNormalizedCacheFactory","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql/-sql-normalized-cache-factory/-sql-normalized-cache-factory.html","searchKeys":["SqlNormalizedCacheFactory","expect constructor(driver: SqlDriver)","com.apollographql.cache.normalized.sql.SqlNormalizedCacheFactory.SqlNormalizedCacheFactory"]},{"name":"expect constructor(name: String? = \"apollo.db\")","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCacheFactory.SqlNormalizedCacheFactory","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql/-sql-normalized-cache-factory/-sql-normalized-cache-factory.html","searchKeys":["SqlNormalizedCacheFactory","expect constructor(name: String? = \"apollo.db\")","com.apollographql.cache.normalized.sql.SqlNormalizedCacheFactory.SqlNormalizedCacheFactory"]},{"name":"expect open fun create(): <Error class: unknown class>","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCacheFactory.create","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql/-sql-normalized-cache-factory/create.html","searchKeys":["create","expect open fun create(): <Error class: unknown class>","com.apollographql.cache.normalized.sql.SqlNormalizedCacheFactory.create"]},{"name":"fun <T : Any> recordForKey(key: String, mapper: (key: String, blob: ByteArray) -> T): Query<T>","description":"com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.recordForKey","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob/-blob-queries/record-for-key.html","searchKeys":["recordForKey","fun <T : Any> recordForKey(key: String, mapper: (key: String, blob: ByteArray) -> T): Query<T>","com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.recordForKey"]},{"name":"fun <T : Any> recordForKey(key: String, mapper: (key: String, blob: ByteArray) -> T): Query<T>","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.recordForKey","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blob2-queries/record-for-key.html","searchKeys":["recordForKey","fun <T : Any> recordForKey(key: String, mapper: (key: String, blob: ByteArray) -> T): Query<T>","com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.recordForKey"]},{"name":"fun <T : Any> recordsForKeys(key: Collection<String>, mapper: (key: String, blob: ByteArray) -> T): Query<T>","description":"com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.recordsForKeys","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob/-blob-queries/records-for-keys.html","searchKeys":["recordsForKeys","fun <T : Any> recordsForKeys(key: Collection<String>, mapper: (key: String, blob: ByteArray) -> T): Query<T>","com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.recordsForKeys"]},{"name":"fun <T : Any> recordsForKeys(key: Collection<String>, mapper: (key: String, blob: ByteArray) -> T): Query<T>","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.recordsForKeys","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blob2-queries/records-for-keys.html","searchKeys":["recordsForKeys","fun <T : Any> recordsForKeys(key: Collection<String>, mapper: (key: String, blob: ByteArray) -> T): Query<T>","com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.recordsForKeys"]},{"name":"fun <T : Any> selectRecords(mapper: (key: String, blob: ByteArray) -> T): Query<T>","description":"com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.selectRecords","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob/-blob-queries/select-records.html","searchKeys":["selectRecords","fun <T : Any> selectRecords(mapper: (key: String, blob: ByteArray) -> T): Query<T>","com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.selectRecords"]},{"name":"fun <T : Any> selectRecords(mapper: (key: String, blob: ByteArray, date: Long?) -> T): Query<T>","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.selectRecords","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blob2-queries/select-records.html","searchKeys":["selectRecords","fun <T : Any> selectRecords(mapper: (key: String, blob: ByteArray, date: Long?) -> T): Query<T>","com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.selectRecords"]},{"name":"fun changes(): ExecutableQuery<Long>","description":"com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.changes","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob/-blob-queries/changes.html","searchKeys":["changes","fun changes(): ExecutableQuery<Long>","com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.changes"]},{"name":"fun changes(): ExecutableQuery<Long>","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.changes","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blob2-queries/changes.html","searchKeys":["changes","fun changes(): ExecutableQuery<Long>","com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.changes"]},{"name":"fun count(): Query<Long>","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.count","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blob2-queries/count.html","searchKeys":["count","fun count(): Query<Long>","com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.count"]},{"name":"fun delete(key: String)","description":"com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.delete","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob/-blob-queries/delete.html","searchKeys":["delete","fun delete(key: String)","com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.delete"]},{"name":"fun delete(key: String)","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.delete","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blob2-queries/delete.html","searchKeys":["delete","fun delete(key: String)","com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.delete"]},{"name":"fun deleteAll()","description":"com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.deleteAll","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob/-blob-queries/delete-all.html","searchKeys":["deleteAll","fun deleteAll()","com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.deleteAll"]},{"name":"fun deleteAll()","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.deleteAll","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blob2-queries/delete-all.html","searchKeys":["deleteAll","fun deleteAll()","com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.deleteAll"]},{"name":"fun deleteRecords(key: Collection<String>)","description":"com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.deleteRecords","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob/-blob-queries/delete-records.html","searchKeys":["deleteRecords","fun deleteRecords(key: Collection<String>)","com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.deleteRecords"]},{"name":"fun deleteRecords(key: Collection<String>)","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.deleteRecords","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blob2-queries/delete-records.html","searchKeys":["deleteRecords","fun deleteRecords(key: Collection<String>)","com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.deleteRecords"]},{"name":"fun deleteRecordsWithKeyMatching(value: String, value_: String)","description":"com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.deleteRecordsWithKeyMatching","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob/-blob-queries/delete-records-with-key-matching.html","searchKeys":["deleteRecordsWithKeyMatching","fun deleteRecordsWithKeyMatching(value: String, value_: String)","com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.deleteRecordsWithKeyMatching"]},{"name":"fun deleteRecordsWithKeyMatching(value: String, value_: String)","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.deleteRecordsWithKeyMatching","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blob2-queries/delete-records-with-key-matching.html","searchKeys":["deleteRecordsWithKeyMatching","fun deleteRecordsWithKeyMatching(value: String, value_: String)","com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.deleteRecordsWithKeyMatching"]},{"name":"fun insert(key: String, blob: ByteArray)","description":"com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.insert","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob/-blob-queries/insert.html","searchKeys":["insert","fun insert(key: String, blob: ByteArray)","com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.insert"]},{"name":"fun insert(key: String, blob: ByteArray, date: Long?)","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.insert","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blob2-queries/insert.html","searchKeys":["insert","fun insert(key: String, blob: ByteArray, date: Long?)","com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.insert"]},{"name":"fun recordForKey(key: String): Query<Blobs>","description":"com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.recordForKey","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob/-blob-queries/record-for-key.html","searchKeys":["recordForKey","fun recordForKey(key: String): Query<Blobs>","com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.recordForKey"]},{"name":"fun recordForKey(key: String): Query<RecordForKey>","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.recordForKey","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blob2-queries/record-for-key.html","searchKeys":["recordForKey","fun recordForKey(key: String): Query<RecordForKey>","com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.recordForKey"]},{"name":"fun recordsForKeys(key: Collection<String>): Query<Blobs>","description":"com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.recordsForKeys","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob/-blob-queries/records-for-keys.html","searchKeys":["recordsForKeys","fun recordsForKeys(key: Collection<String>): Query<Blobs>","com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.recordsForKeys"]},{"name":"fun recordsForKeys(key: Collection<String>): Query<RecordsForKeys>","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.recordsForKeys","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blob2-queries/records-for-keys.html","searchKeys":["recordsForKeys","fun recordsForKeys(key: Collection<String>): Query<RecordsForKeys>","com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.recordsForKeys"]},{"name":"fun selectRecords(): Query<Blobs>","description":"com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.selectRecords","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob/-blob-queries/select-records.html","searchKeys":["selectRecords","fun selectRecords(): Query<Blobs>","com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.selectRecords"]},{"name":"fun selectRecords(): Query<Blobs>","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.selectRecords","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blob2-queries/select-records.html","searchKeys":["selectRecords","fun selectRecords(): Query<Blobs>","com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.selectRecords"]},{"name":"fun trim(value: Long)","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.trim","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blob2-queries/trim.html","searchKeys":["trim","fun trim(value: Long)","com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.trim"]},{"name":"fun update(blob: ByteArray, date: Long?, key: String)","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.update","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blob2-queries/update.html","searchKeys":["update","fun update(blob: ByteArray, date: Long?, key: String)","com.apollographql.cache.normalized.sql.internal.blob2.Blob2Queries.update"]},{"name":"fun update(blob: ByteArray, key: String)","description":"com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.update","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob/-blob-queries/update.html","searchKeys":["update","fun update(blob: ByteArray, key: String)","com.apollographql.cache.normalized.sql.internal.blob.BlobQueries.update"]},{"name":"interface Blob2Database : Transacter","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blob2Database","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blob2-database/index.html","searchKeys":["Blob2Database","interface Blob2Database : Transacter","com.apollographql.cache.normalized.sql.internal.blob2.Blob2Database"]},{"name":"interface BlobDatabase : Transacter","description":"com.apollographql.cache.normalized.sql.internal.blob.BlobDatabase","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob/-blob-database/index.html","searchKeys":["BlobDatabase","interface BlobDatabase : Transacter","com.apollographql.cache.normalized.sql.internal.blob.BlobDatabase"]},{"name":"object Companion","description":"com.apollographql.cache.normalized.sql.ApolloInitializer.Companion","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql/-apollo-initializer/-companion/index.html","searchKeys":["Companion","object Companion","com.apollographql.cache.normalized.sql.ApolloInitializer.Companion"]},{"name":"object Companion","description":"com.apollographql.cache.normalized.sql.internal.blob.BlobDatabase.Companion","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob/-blob-database/-companion/index.html","searchKeys":["Companion","object Companion","com.apollographql.cache.normalized.sql.internal.blob.BlobDatabase.Companion"]},{"name":"object Companion","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blob2Database.Companion","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blob2-database/-companion/index.html","searchKeys":["Companion","object Companion","com.apollographql.cache.normalized.sql.internal.blob2.Blob2Database.Companion"]},{"name":"open fun clearAll()","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCache.clearAll","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql/-sql-normalized-cache/clear-all.html","searchKeys":["clearAll","open fun clearAll()","com.apollographql.cache.normalized.sql.SqlNormalizedCache.clearAll"]},{"name":"open fun dump(): Map<KClass<*>, Map<String, <Error class: unknown class>>>","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCache.dump","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql/-sql-normalized-cache/dump.html","searchKeys":["dump","open fun dump(): Map<KClass<*>, Map<String, <Error class: unknown class>>>","com.apollographql.cache.normalized.sql.SqlNormalizedCache.dump"]},{"name":"open fun loadRecord(key: String, cacheHeaders: <Error class: unknown class>): <Error class: unknown class>?","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCache.loadRecord","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql/-sql-normalized-cache/load-record.html","searchKeys":["loadRecord","open fun loadRecord(key: String, cacheHeaders: <Error class: unknown class>): <Error class: unknown class>?","com.apollographql.cache.normalized.sql.SqlNormalizedCache.loadRecord"]},{"name":"open fun loadRecords(keys: Collection<String>, cacheHeaders: <Error class: unknown class>): Collection<<Error class: unknown class>>","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCache.loadRecords","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql/-sql-normalized-cache/load-records.html","searchKeys":["loadRecords","open fun loadRecords(keys: Collection<String>, cacheHeaders: <Error class: unknown class>): Collection<<Error class: unknown class>>","com.apollographql.cache.normalized.sql.SqlNormalizedCache.loadRecords"]},{"name":"open fun merge(record: <Error class: unknown class>, cacheHeaders: <Error class: unknown class>, recordMerger: <Error class: unknown class>): Set<String>","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCache.merge","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql/-sql-normalized-cache/merge.html","searchKeys":["merge","open fun merge(record: <Error class: unknown class>, cacheHeaders: <Error class: unknown class>, recordMerger: <Error class: unknown class>): Set<String>","com.apollographql.cache.normalized.sql.SqlNormalizedCache.merge"]},{"name":"open fun merge(records: Collection<<Error class: unknown class>>, cacheHeaders: <Error class: unknown class>, recordMerger: <Error class: unknown class>): Set<String>","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCache.merge","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql/-sql-normalized-cache/merge.html","searchKeys":["merge","open fun merge(records: Collection<<Error class: unknown class>>, cacheHeaders: <Error class: unknown class>, recordMerger: <Error class: unknown class>): Set<String>","com.apollographql.cache.normalized.sql.SqlNormalizedCache.merge"]},{"name":"open fun remove(cacheKey: <Error class: unknown class>, cascade: Boolean): Boolean","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCache.remove","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql/-sql-normalized-cache/remove.html","searchKeys":["remove","open fun remove(cacheKey: <Error class: unknown class>, cascade: Boolean): Boolean","com.apollographql.cache.normalized.sql.SqlNormalizedCache.remove"]},{"name":"open fun remove(pattern: String): Int","description":"com.apollographql.cache.normalized.sql.SqlNormalizedCache.remove","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql/-sql-normalized-cache/remove.html","searchKeys":["remove","open fun remove(pattern: String): Int","com.apollographql.cache.normalized.sql.SqlNormalizedCache.remove"]},{"name":"open override fun create(): NormalizedCache","description":"com.apollographql.cache.normalized.sql.TrimmableNormalizedCacheFactory.create","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql/-trimmable-normalized-cache-factory/create.html","searchKeys":["create","open override fun create(): NormalizedCache","com.apollographql.cache.normalized.sql.TrimmableNormalizedCacheFactory.create"]},{"name":"open override fun create(context: Context)","description":"com.apollographql.cache.normalized.sql.ApolloInitializer.create","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql/-apollo-initializer/create.html","searchKeys":["create","open override fun create(context: Context)","com.apollographql.cache.normalized.sql.ApolloInitializer.create"]},{"name":"open override fun dependencies(): MutableList<Class<out Initializer<*>>>","description":"com.apollographql.cache.normalized.sql.ApolloInitializer.dependencies","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql/-apollo-initializer/dependencies.html","searchKeys":["dependencies","open override fun dependencies(): MutableList<Class<out Initializer<*>>>","com.apollographql.cache.normalized.sql.ApolloInitializer.dependencies"]},{"name":"operator fun invoke(driver: SqlDriver): Blob2Database","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blob2Database.Companion.invoke","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blob2-database/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(driver: SqlDriver): Blob2Database","com.apollographql.cache.normalized.sql.internal.blob2.Blob2Database.Companion.invoke"]},{"name":"operator fun invoke(driver: SqlDriver): BlobDatabase","description":"com.apollographql.cache.normalized.sql.internal.blob.BlobDatabase.Companion.invoke","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob/-blob-database/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(driver: SqlDriver): BlobDatabase","com.apollographql.cache.normalized.sql.internal.blob.BlobDatabase.Companion.invoke"]},{"name":"val Schema: SqlSchema<QueryResult.Value<Unit>>","description":"com.apollographql.cache.normalized.sql.internal.blob.BlobDatabase.Companion.Schema","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob/-blob-database/-companion/-schema.html","searchKeys":["Schema","val Schema: SqlSchema<QueryResult.Value<Unit>>","com.apollographql.cache.normalized.sql.internal.blob.BlobDatabase.Companion.Schema"]},{"name":"val Schema: SqlSchema<QueryResult.Value<Unit>>","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blob2Database.Companion.Schema","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blob2-database/-companion/-schema.html","searchKeys":["Schema","val Schema: SqlSchema<QueryResult.Value<Unit>>","com.apollographql.cache.normalized.sql.internal.blob2.Blob2Database.Companion.Schema"]},{"name":"val blob: ByteArray","description":"com.apollographql.cache.normalized.sql.internal.blob.Blobs.blob","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob/-blobs/blob.html","searchKeys":["blob","val blob: ByteArray","com.apollographql.cache.normalized.sql.internal.blob.Blobs.blob"]},{"name":"val blob: ByteArray","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blobs.blob","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blobs/blob.html","searchKeys":["blob","val blob: ByteArray","com.apollographql.cache.normalized.sql.internal.blob2.Blobs.blob"]},{"name":"val blob: ByteArray","description":"com.apollographql.cache.normalized.sql.internal.blob2.RecordForKey.blob","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-record-for-key/blob.html","searchKeys":["blob","val blob: ByteArray","com.apollographql.cache.normalized.sql.internal.blob2.RecordForKey.blob"]},{"name":"val blob: ByteArray","description":"com.apollographql.cache.normalized.sql.internal.blob2.RecordsForKeys.blob","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-records-for-keys/blob.html","searchKeys":["blob","val blob: ByteArray","com.apollographql.cache.normalized.sql.internal.blob2.RecordsForKeys.blob"]},{"name":"val date: Long?","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blobs.date","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blobs/date.html","searchKeys":["date","val date: Long?","com.apollographql.cache.normalized.sql.internal.blob2.Blobs.date"]},{"name":"val key: String","description":"com.apollographql.cache.normalized.sql.internal.blob.Blobs.key","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob/-blobs/key.html","searchKeys":["key","val key: String","com.apollographql.cache.normalized.sql.internal.blob.Blobs.key"]},{"name":"val key: String","description":"com.apollographql.cache.normalized.sql.internal.blob2.Blobs.key","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-blobs/key.html","searchKeys":["key","val key: String","com.apollographql.cache.normalized.sql.internal.blob2.Blobs.key"]},{"name":"val key: String","description":"com.apollographql.cache.normalized.sql.internal.blob2.RecordForKey.key","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-record-for-key/key.html","searchKeys":["key","val key: String","com.apollographql.cache.normalized.sql.internal.blob2.RecordForKey.key"]},{"name":"val key: String","description":"com.apollographql.cache.normalized.sql.internal.blob2.RecordsForKeys.key","location":"normalized-cache-sqlite-incubating/com.apollographql.cache.normalized.sql.internal.blob2/-records-for-keys/key.html","searchKeys":["key","val key: String","com.apollographql.cache.normalized.sql.internal.blob2.RecordsForKeys.key"]}]