package com.apollographql.cache.gradle.internal.codegen

import com.apollographql.cache.gradle.VERSION
import com.squareup.kotlinpoet.CodeBlock
import com.squareup.kotlinpoet.FileSpec
import com.squareup.kotlinpoet.ParameterizedTypeName.Companion.parameterizedBy
import com.squareup.kotlinpoet.PropertySpec
import com.squareup.kotlinpoet.TypeSpec
import com.squareup.kotlinpoet.asClassName
import java.io.File

internal class Codegen(
    private val packageName: String,
    private val outputDirectory: File,
    private val maxAges: Map<String, Int>,
) {
  fun generate() {
    generateCache()
  }

  private fun generateCache() {
    val initializer = CodeBlock.builder().apply {
      add("mapOf(\n")
      indent()
      add(
          maxAges.map { (k, v) ->
            CodeBlock.of("%S to %L", k, v)
          }.joinToString(",\n", postfix = ",\n")
      )
      unindent()
      add(")")
    }
        .build()
    val file = FileSpec.builder(packageName, "Cache")
        .addType(
            TypeSpec.objectBuilder("Cache")
                .addProperty(
                    PropertySpec.builder("maxAges", Map::class.asClassName()
                        .parameterizedBy(String::class.asClassName(), Int::class.asClassName())
                    )
                        .initializer(initializer)
                        .build()
                )
                .build()
        )
        .addFileComment(
            """
                
                AUTO-GENERATED FILE. DO NOT MODIFY.
                
                This class was automatically generated by Apollo GraphQL Cache version '$VERSION'.
                
            """.trimIndent()
        )
        .build()

    file.writeTo(outputDirectory)
  }
}
