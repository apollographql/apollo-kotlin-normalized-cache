public final class com/apollographql/cache/normalized/ApolloStore {
	public fun <init> (Lcom/apollographql/cache/normalized/CacheManager;Lcom/apollographql/apollo/api/CustomScalarAdapters;)V
	public final fun accessCache (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun clearAll (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun dispose ()V
	public final fun dump (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getCacheManager ()Lcom/apollographql/cache/normalized/CacheManager;
	public final fun getChangedKeys ()Lkotlinx/coroutines/flow/SharedFlow;
	public final fun getCustomScalarAdapters ()Lcom/apollographql/apollo/api/CustomScalarAdapters;
	public final fun normalize-Hljz6HE (Lcom/apollographql/apollo/api/Executable;Ljava/util/Map;Ljava/lang/String;)Ljava/util/Map;
	public static synthetic fun normalize-Hljz6HE$default (Lcom/apollographql/cache/normalized/ApolloStore;Lcom/apollographql/apollo/api/Executable;Ljava/util/Map;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/Map;
	public final fun publish (Ljava/util/Set;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun readFragment-dEpVOtE (Lcom/apollographql/apollo/api/Fragment;Ljava/lang/String;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun readFragment-dEpVOtE$default (Lcom/apollographql/cache/normalized/ApolloStore;Lcom/apollographql/apollo/api/Fragment;Ljava/lang/String;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun readOperation (Lcom/apollographql/apollo/api/Operation;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun readOperation$default (Lcom/apollographql/cache/normalized/ApolloStore;Lcom/apollographql/apollo/api/Operation;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun remove (Ljava/util/List;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun remove$default (Lcom/apollographql/cache/normalized/ApolloStore;Ljava/util/List;ZLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun remove-7OwBRqc (Ljava/lang/String;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun remove-7OwBRqc$default (Lcom/apollographql/cache/normalized/ApolloStore;Ljava/lang/String;ZLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun rollbackOptimisticUpdates (Ljava/util/UUID;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun trim (JFLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun trim$default (Lcom/apollographql/cache/normalized/ApolloStore;JFLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun writeFragment-1qdIjGk (Lcom/apollographql/apollo/api/Fragment;Ljava/lang/String;Lcom/apollographql/apollo/api/Fragment$Data;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun writeFragment-1qdIjGk$default (Lcom/apollographql/cache/normalized/ApolloStore;Lcom/apollographql/apollo/api/Fragment;Ljava/lang/String;Lcom/apollographql/apollo/api/Fragment$Data;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun writeOperation (Lcom/apollographql/apollo/api/Operation;Lcom/apollographql/apollo/api/Operation$Data;Ljava/util/List;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun writeOperation (Lcom/apollographql/apollo/api/Operation;Ljava/util/Map;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun writeOperation$default (Lcom/apollographql/cache/normalized/ApolloStore;Lcom/apollographql/apollo/api/Operation;Lcom/apollographql/apollo/api/Operation$Data;Ljava/util/List;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun writeOperation$default (Lcom/apollographql/cache/normalized/ApolloStore;Lcom/apollographql/apollo/api/Operation;Ljava/util/Map;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun writeOptimisticUpdates (Lcom/apollographql/apollo/api/Operation;Lcom/apollographql/apollo/api/Operation$Data;Ljava/util/UUID;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun writeOptimisticUpdates-1qdIjGk (Lcom/apollographql/apollo/api/Fragment;Ljava/lang/String;Lcom/apollographql/apollo/api/Fragment$Data;Ljava/util/UUID;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/ApolloStoreKt {
	public static final fun removeFragment-BDKj5R4 (Lcom/apollographql/cache/normalized/ApolloStore;Lcom/apollographql/apollo/api/Fragment;Ljava/lang/String;Lcom/apollographql/apollo/api/Fragment$Data;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun removeFragment-BDKj5R4$default (Lcom/apollographql/cache/normalized/ApolloStore;Lcom/apollographql/apollo/api/Fragment;Ljava/lang/String;Lcom/apollographql/apollo/api/Fragment$Data;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun removeOperation (Lcom/apollographql/cache/normalized/ApolloStore;Lcom/apollographql/apollo/api/Operation;Lcom/apollographql/apollo/api/Operation$Data;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun removeOperation$default (Lcom/apollographql/cache/normalized/ApolloStore;Lcom/apollographql/apollo/api/Operation;Lcom/apollographql/apollo/api/Operation$Data;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/CacheHeadersKt {
	public static final fun addCacheHeader (Lcom/apollographql/apollo/api/MutableExecutionOptions;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
	public static final fun cacheHeaders (Lcom/apollographql/apollo/api/ApolloResponse$Builder;Lcom/apollographql/cache/normalized/api/CacheHeaders;)Lcom/apollographql/apollo/api/ApolloResponse$Builder;
	public static final fun cacheHeaders (Lcom/apollographql/apollo/api/MutableExecutionOptions;Lcom/apollographql/cache/normalized/api/CacheHeaders;)Ljava/lang/Object;
	public static final fun getCacheHeaders (Lcom/apollographql/apollo/api/ApolloResponse;)Lcom/apollographql/cache/normalized/api/CacheHeaders;
	public static final fun maxStale-HG0u8IE (Lcom/apollographql/apollo/api/MutableExecutionOptions;J)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/CacheInfo : com/apollographql/apollo/api/ExecutionContext$Element {
	public static final field Key Lcom/apollographql/cache/normalized/CacheInfo$Key;
	public synthetic fun <init> (JJJJZZLcom/apollographql/apollo/exception/CacheMissException;Lcom/apollographql/apollo/exception/ApolloException;ZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getCacheEndMillis ()J
	public final fun getCacheMissException ()Lcom/apollographql/apollo/exception/CacheMissException;
	public final fun getCacheStartMillis ()J
	public fun getKey ()Lcom/apollographql/apollo/api/ExecutionContext$Key;
	public final fun getNetworkEndMillis ()J
	public final fun getNetworkException ()Lcom/apollographql/apollo/exception/ApolloException;
	public final fun getNetworkStartMillis ()J
	public final fun isCacheHit ()Z
	public final fun isFromCache ()Z
	public final fun isStale ()Z
	public final fun newBuilder ()Lcom/apollographql/cache/normalized/CacheInfo$Builder;
}

public final class com/apollographql/cache/normalized/CacheInfo$Builder {
	public fun <init> ()V
	public final fun build ()Lcom/apollographql/cache/normalized/CacheInfo;
	public final fun cacheEndMillis (J)Lcom/apollographql/cache/normalized/CacheInfo$Builder;
	public final fun cacheHit (Z)Lcom/apollographql/cache/normalized/CacheInfo$Builder;
	public final fun cacheMissException (Lcom/apollographql/apollo/exception/CacheMissException;)Lcom/apollographql/cache/normalized/CacheInfo$Builder;
	public final fun cacheStartMillis (J)Lcom/apollographql/cache/normalized/CacheInfo$Builder;
	public final fun fromCache (Z)Lcom/apollographql/cache/normalized/CacheInfo$Builder;
	public final fun networkEndMillis (J)Lcom/apollographql/cache/normalized/CacheInfo$Builder;
	public final fun networkException (Lcom/apollographql/apollo/exception/ApolloException;)Lcom/apollographql/cache/normalized/CacheInfo$Builder;
	public final fun networkStartMillis (J)Lcom/apollographql/cache/normalized/CacheInfo$Builder;
	public final fun stale (Z)Lcom/apollographql/cache/normalized/CacheInfo$Builder;
}

public final class com/apollographql/cache/normalized/CacheInfo$Key : com/apollographql/apollo/api/ExecutionContext$Key {
}

public final class com/apollographql/cache/normalized/CacheInfoKt {
	public static final fun getCacheInfo (Lcom/apollographql/apollo/api/ApolloResponse;)Lcom/apollographql/cache/normalized/CacheInfo;
	public static final fun isFromCache (Lcom/apollographql/apollo/api/ApolloResponse;)Z
}

public abstract interface class com/apollographql/cache/normalized/CacheManager {
	public static final field Companion Lcom/apollographql/cache/normalized/CacheManager$Companion;
	public abstract fun accessCache (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun clearAll (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun dispose ()V
	public abstract fun dump (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getChangedKeys ()Lkotlinx/coroutines/flow/SharedFlow;
	public abstract fun normalize-niOPdRo (Lcom/apollographql/apollo/api/Executable;Ljava/util/Map;Ljava/lang/String;Lcom/apollographql/apollo/api/CustomScalarAdapters;)Ljava/util/Map;
	public abstract fun publish (Ljava/util/Set;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun readFragment-1qdIjGk (Lcom/apollographql/apollo/api/Fragment;Ljava/lang/String;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun readOperation (Lcom/apollographql/apollo/api/Operation;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun remove (Ljava/util/List;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun remove-7OwBRqc (Ljava/lang/String;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun rollbackOptimisticUpdates (Ljava/util/UUID;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun trim (JFLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun writeFragment-LHfx5Yk (Lcom/apollographql/apollo/api/Fragment;Ljava/lang/String;Lcom/apollographql/apollo/api/Fragment$Data;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun writeOperation (Lcom/apollographql/apollo/api/Operation;Lcom/apollographql/apollo/api/Operation$Data;Ljava/util/List;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun writeOperation (Lcom/apollographql/apollo/api/Operation;Ljava/util/Map;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun writeOptimisticUpdates (Lcom/apollographql/apollo/api/Operation;Lcom/apollographql/apollo/api/Operation$Data;Ljava/util/UUID;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun writeOptimisticUpdates-LHfx5Yk (Lcom/apollographql/apollo/api/Fragment;Ljava/lang/String;Lcom/apollographql/apollo/api/Fragment$Data;Ljava/util/UUID;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/CacheManager$Companion {
	public final fun getALL_KEYS ()Lkotlin/collections/AbstractSet;
}

public final class com/apollographql/cache/normalized/CacheManager$DefaultImpls {
	public static synthetic fun normalize-niOPdRo$default (Lcom/apollographql/cache/normalized/CacheManager;Lcom/apollographql/apollo/api/Executable;Ljava/util/Map;Ljava/lang/String;Lcom/apollographql/apollo/api/CustomScalarAdapters;ILjava/lang/Object;)Ljava/util/Map;
	public static synthetic fun readFragment-1qdIjGk$default (Lcom/apollographql/cache/normalized/CacheManager;Lcom/apollographql/apollo/api/Fragment;Ljava/lang/String;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun readOperation$default (Lcom/apollographql/cache/normalized/CacheManager;Lcom/apollographql/apollo/api/Operation;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun remove$default (Lcom/apollographql/cache/normalized/CacheManager;Ljava/util/List;ZLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun remove-7OwBRqc$default (Lcom/apollographql/cache/normalized/CacheManager;Ljava/lang/String;ZLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun trim$default (Lcom/apollographql/cache/normalized/CacheManager;JFLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun writeFragment-LHfx5Yk$default (Lcom/apollographql/cache/normalized/CacheManager;Lcom/apollographql/apollo/api/Fragment;Ljava/lang/String;Lcom/apollographql/apollo/api/Fragment$Data;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun writeOperation$default (Lcom/apollographql/cache/normalized/CacheManager;Lcom/apollographql/apollo/api/Operation;Lcom/apollographql/apollo/api/Operation$Data;Ljava/util/List;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun writeOperation$default (Lcom/apollographql/cache/normalized/CacheManager;Lcom/apollographql/apollo/api/Operation;Ljava/util/Map;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun writeOptimisticUpdates$default (Lcom/apollographql/cache/normalized/CacheManager;Lcom/apollographql/apollo/api/Operation;Lcom/apollographql/apollo/api/Operation$Data;Ljava/util/UUID;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun writeOptimisticUpdates-LHfx5Yk$default (Lcom/apollographql/cache/normalized/CacheManager;Lcom/apollographql/apollo/api/Fragment;Ljava/lang/String;Lcom/apollographql/apollo/api/Fragment$Data;Ljava/util/UUID;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/CacheManager$ReadResult {
	public fun <init> (Lcom/apollographql/apollo/api/Executable$Data;Lcom/apollographql/cache/normalized/api/CacheHeaders;)V
	public final fun getCacheHeaders ()Lcom/apollographql/cache/normalized/api/CacheHeaders;
	public final fun getData ()Lcom/apollographql/apollo/api/Executable$Data;
}

public final class com/apollographql/cache/normalized/CacheManagerKt {
	public static final fun CacheManager (Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;Lcom/apollographql/cache/normalized/api/CacheResolver;Lcom/apollographql/cache/normalized/api/RecordMerger;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;Lcom/apollographql/cache/normalized/api/EmbeddedFieldsProvider;Lcom/apollographql/cache/normalized/api/MaxAgeProvider;Z)Lcom/apollographql/cache/normalized/CacheManager;
	public static synthetic fun CacheManager$default (Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;Lcom/apollographql/cache/normalized/api/CacheResolver;Lcom/apollographql/cache/normalized/api/RecordMerger;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;Lcom/apollographql/cache/normalized/api/EmbeddedFieldsProvider;Lcom/apollographql/cache/normalized/api/MaxAgeProvider;ZILjava/lang/Object;)Lcom/apollographql/cache/normalized/CacheManager;
}

public final class com/apollographql/cache/normalized/CacheMissLoggingInterceptor : com/apollographql/apollo/interceptor/ApolloInterceptor {
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public fun intercept (Lcom/apollographql/apollo/api/ApolloRequest;Lcom/apollographql/apollo/interceptor/ApolloInterceptorChain;)Lkotlinx/coroutines/flow/Flow;
}

public final class com/apollographql/cache/normalized/ClockKt {
	public static final fun clock (Lcom/apollographql/apollo/api/MutableExecutionOptions;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/DoNotStoreKt {
	public static final fun doNotStore (Lcom/apollographql/apollo/api/MutableExecutionOptions;Z)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/ErrorExtensionsKt {
	public static final fun getCacheMissException (Lcom/apollographql/apollo/api/Error;)Lcom/apollographql/apollo/exception/CacheMissException;
}

public final class com/apollographql/cache/normalized/ErrorsReplaceCachedValuesKt {
	public static final fun errorsReplaceCachedValues (Lcom/apollographql/apollo/api/MutableExecutionOptions;Z)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/FetchFromCacheKt {
	public static final fun fetchFromCache (Lcom/apollographql/apollo/api/ApolloRequest$Builder;Z)Lcom/apollographql/apollo/api/ApolloRequest$Builder;
	public static final fun getFetchFromCache (Lcom/apollographql/apollo/api/ApolloRequest;)Z
}

public final class com/apollographql/cache/normalized/FetchPolicy : java/lang/Enum {
	public static final field CacheAndNetwork Lcom/apollographql/cache/normalized/FetchPolicy;
	public static final field CacheFirst Lcom/apollographql/cache/normalized/FetchPolicy;
	public static final field CacheOnly Lcom/apollographql/cache/normalized/FetchPolicy;
	public static final field NetworkFirst Lcom/apollographql/cache/normalized/FetchPolicy;
	public static final field NetworkOnly Lcom/apollographql/cache/normalized/FetchPolicy;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lcom/apollographql/cache/normalized/FetchPolicy;
	public static fun values ()[Lcom/apollographql/cache/normalized/FetchPolicy;
}

public final class com/apollographql/cache/normalized/FetchPolicyInterceptors {
	public static final fun errorsAsException (Lcom/apollographql/apollo/api/ApolloResponse;)Lcom/apollographql/apollo/api/ApolloResponse;
	public static final fun getCacheAndNetworkInterceptor ()Lcom/apollographql/apollo/interceptor/ApolloInterceptor;
	public static final fun getDefaultFetchPolicyInterceptor ()Lcom/apollographql/apollo/interceptor/ApolloInterceptor;
	public static final fun getNetworkFirstInterceptor ()Lcom/apollographql/apollo/interceptor/ApolloInterceptor;
}

public final class com/apollographql/cache/normalized/FetchPolicyKt {
	public static final fun fetchPolicy (Lcom/apollographql/apollo/api/MutableExecutionOptions;Lcom/apollographql/cache/normalized/FetchPolicy;)Ljava/lang/Object;
	public static final fun fetchPolicyInterceptor (Lcom/apollographql/apollo/api/MutableExecutionOptions;Lcom/apollographql/apollo/interceptor/ApolloInterceptor;)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/GarbageCollectResult {
	public fun <init> (Lcom/apollographql/cache/normalized/RemovedFieldsAndRecords;Lcom/apollographql/cache/normalized/RemovedFieldsAndRecords;Ljava/util/Set;)V
	public final fun getRemovedDanglingReferences ()Lcom/apollographql/cache/normalized/RemovedFieldsAndRecords;
	public final fun getRemovedStaleFields ()Lcom/apollographql/cache/normalized/RemovedFieldsAndRecords;
	public final fun getRemovedUnreachableRecords ()Ljava/util/Set;
}

public final class com/apollographql/cache/normalized/GarbageCollectionKt {
	public static final fun allRecords (Lcom/apollographql/cache/normalized/api/NormalizedCache;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun garbageCollect-1Y68eR8 (Lcom/apollographql/cache/normalized/api/NormalizedCache;Lcom/apollographql/cache/normalized/api/MaxAgeProvider;JLkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun garbageCollect-1Y68eR8$default (Lcom/apollographql/cache/normalized/api/NormalizedCache;Lcom/apollographql/cache/normalized/api/MaxAgeProvider;JLkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun garbageCollect-exY8QGI (Lcom/apollographql/cache/normalized/ApolloStore;Lcom/apollographql/cache/normalized/api/MaxAgeProvider;JLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun garbageCollect-exY8QGI$default (Lcom/apollographql/cache/normalized/ApolloStore;Lcom/apollographql/cache/normalized/api/MaxAgeProvider;JLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun getReachableCacheKeys (Ljava/util/Map;)Ljava/util/Set;
	public static final fun removeDanglingReferences (Lcom/apollographql/cache/normalized/ApolloStore;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun removeDanglingReferences (Lcom/apollographql/cache/normalized/api/NormalizedCache;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun removeStaleFields-1Y68eR8 (Lcom/apollographql/cache/normalized/api/NormalizedCache;Lcom/apollographql/cache/normalized/api/MaxAgeProvider;JLkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun removeStaleFields-1Y68eR8$default (Lcom/apollographql/cache/normalized/api/NormalizedCache;Lcom/apollographql/cache/normalized/api/MaxAgeProvider;JLkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun removeStaleFields-exY8QGI (Lcom/apollographql/cache/normalized/ApolloStore;Lcom/apollographql/cache/normalized/api/MaxAgeProvider;JLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun removeStaleFields-exY8QGI$default (Lcom/apollographql/cache/normalized/ApolloStore;Lcom/apollographql/cache/normalized/api/MaxAgeProvider;JLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun removeUnreachableRecords (Lcom/apollographql/cache/normalized/ApolloStore;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun removeUnreachableRecords (Lcom/apollographql/cache/normalized/api/NormalizedCache;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/MemoryCacheOnlyKt {
	public static final fun memoryCacheOnly (Lcom/apollographql/apollo/api/MutableExecutionOptions;Z)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/NormalizedCache {
	public static final fun -logCacheMisses (Lcom/apollographql/apollo/ApolloClient$Builder;Lkotlin/jvm/functions/Function1;)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static synthetic fun -logCacheMisses$default (Lcom/apollographql/apollo/ApolloClient$Builder;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static final fun cacheManager (Lcom/apollographql/apollo/ApolloClient$Builder;Lcom/apollographql/cache/normalized/CacheManager;Z)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static synthetic fun cacheManager$default (Lcom/apollographql/apollo/ApolloClient$Builder;Lcom/apollographql/cache/normalized/CacheManager;ZILjava/lang/Object;)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static final fun configureApolloClientBuilder2 (Lcom/apollographql/apollo/ApolloClient$Builder;Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static final fun configureApolloClientBuilder2 (Lcom/apollographql/apollo/ApolloClient$Builder;Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static final fun configureApolloClientBuilder2 (Lcom/apollographql/apollo/ApolloClient$Builder;Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static final fun configureApolloClientBuilder2 (Lcom/apollographql/apollo/ApolloClient$Builder;Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;Lcom/apollographql/cache/normalized/api/CacheResolver;)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static final fun configureApolloClientBuilder2 (Lcom/apollographql/apollo/ApolloClient$Builder;Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;Lcom/apollographql/cache/normalized/api/CacheResolver;Lcom/apollographql/cache/normalized/api/RecordMerger;)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static final fun configureApolloClientBuilder2 (Lcom/apollographql/apollo/ApolloClient$Builder;Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;Lcom/apollographql/cache/normalized/api/CacheResolver;Lcom/apollographql/cache/normalized/api/RecordMerger;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static final fun configureApolloClientBuilder2 (Lcom/apollographql/apollo/ApolloClient$Builder;Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;Lcom/apollographql/cache/normalized/api/CacheResolver;Lcom/apollographql/cache/normalized/api/RecordMerger;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;Lcom/apollographql/cache/normalized/api/EmbeddedFieldsProvider;)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static final fun configureApolloClientBuilder2 (Lcom/apollographql/apollo/ApolloClient$Builder;Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;Lcom/apollographql/cache/normalized/api/CacheResolver;Lcom/apollographql/cache/normalized/api/RecordMerger;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;Lcom/apollographql/cache/normalized/api/EmbeddedFieldsProvider;Lcom/apollographql/cache/normalized/api/MaxAgeProvider;)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static final fun configureApolloClientBuilder2 (Lcom/apollographql/apollo/ApolloClient$Builder;Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;Lcom/apollographql/cache/normalized/api/CacheResolver;Lcom/apollographql/cache/normalized/api/RecordMerger;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;Lcom/apollographql/cache/normalized/api/EmbeddedFieldsProvider;Lcom/apollographql/cache/normalized/api/MaxAgeProvider;Z)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static final fun configureApolloClientBuilder2 (Lcom/apollographql/apollo/ApolloClient$Builder;Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;Lcom/apollographql/cache/normalized/api/CacheResolver;Lcom/apollographql/cache/normalized/api/RecordMerger;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;Lcom/apollographql/cache/normalized/api/EmbeddedFieldsProvider;Lcom/apollographql/cache/normalized/api/MaxAgeProvider;ZZ)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static synthetic fun configureApolloClientBuilder2$default (Lcom/apollographql/apollo/ApolloClient$Builder;Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;Lcom/apollographql/cache/normalized/api/CacheResolver;Lcom/apollographql/cache/normalized/api/RecordMerger;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;Lcom/apollographql/cache/normalized/api/EmbeddedFieldsProvider;Lcom/apollographql/cache/normalized/api/MaxAgeProvider;ZZILjava/lang/Object;)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static final fun getApolloStore (Lcom/apollographql/apollo/ApolloClient;)Lcom/apollographql/cache/normalized/ApolloStore;
	public static final fun normalizedCache-mLShkvk (Lcom/apollographql/apollo/ApolloClient$Builder;Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;Ljava/util/Map;Ljava/util/Set;Ljava/util/Map;Ljava/util/Map;JLcom/apollographql/cache/normalized/api/CacheKey$Scope;ZZ)Lcom/apollographql/apollo/ApolloClient$Builder;
	public static final fun storePartialResponses (Lcom/apollographql/apollo/api/MutableExecutionOptions;Z)Ljava/lang/Void;
}

public final class com/apollographql/cache/normalized/OptimisticUpdatesKt {
	public static final fun optimisticUpdates (Lcom/apollographql/apollo/ApolloCall;Lcom/apollographql/apollo/api/Mutation$Data;)Lcom/apollographql/apollo/ApolloCall;
	public static final fun optimisticUpdates (Lcom/apollographql/apollo/api/ApolloRequest$Builder;Lcom/apollographql/apollo/api/Mutation$Data;)Lcom/apollographql/apollo/api/ApolloRequest$Builder;
}

public final class com/apollographql/cache/normalized/RefetchPolicyKt {
	public static final fun refetchPolicy (Lcom/apollographql/apollo/api/MutableExecutionOptions;Lcom/apollographql/cache/normalized/FetchPolicy;)Ljava/lang/Object;
	public static final fun refetchPolicyInterceptor (Lcom/apollographql/apollo/api/MutableExecutionOptions;Lcom/apollographql/apollo/interceptor/ApolloInterceptor;)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/RemovedFieldsAndRecords {
	public fun <init> (Ljava/util/Set;Ljava/util/Set;)V
	public final fun getRemovedFields ()Ljava/util/Set;
	public final fun getRemovedRecords ()Ljava/util/Set;
}

public final class com/apollographql/cache/normalized/StoreExpirationDateKt {
	public static final fun storeExpirationDate (Lcom/apollographql/apollo/api/MutableExecutionOptions;Z)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/StoreReceivedDateKt {
	public static final fun storeReceivedDate (Lcom/apollographql/apollo/api/MutableExecutionOptions;Z)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/VersionKt {
	public static final field VERSION Ljava/lang/String;
}

public final class com/apollographql/cache/normalized/WatchKt {
	public static final fun watch (Lcom/apollographql/apollo/ApolloCall;)Lkotlinx/coroutines/flow/Flow;
	public static final fun watch (Lcom/apollographql/apollo/ApolloCall;Lcom/apollographql/apollo/api/Query$Data;)Lkotlinx/coroutines/flow/Flow;
}

public final class com/apollographql/cache/normalized/WriteToCacheAsynchronouslyKt {
	public static final fun writeToCacheAsynchronously (Lcom/apollographql/apollo/api/MutableExecutionOptions;Z)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/api/ApolloCacheHeaders {
	public static final field CURRENT_DATE Ljava/lang/String;
	public static final field DO_NOT_STORE Ljava/lang/String;
	public static final field ERRORS_REPLACE_CACHED_VALUES Ljava/lang/String;
	public static final field EVICT_AFTER_READ Ljava/lang/String;
	public static final field EXPIRATION_DATE Ljava/lang/String;
	public static final field INSTANCE Lcom/apollographql/cache/normalized/api/ApolloCacheHeaders;
	public static final field MAX_STALE Ljava/lang/String;
	public static final field MEMORY_CACHE_ONLY Ljava/lang/String;
	public static final field RECEIVED_DATE Ljava/lang/String;
	public static final field SKIP_MERGE Ljava/lang/String;
	public static final field STALE Ljava/lang/String;
}

public final class com/apollographql/cache/normalized/api/CacheControlCacheResolver : com/apollographql/cache/normalized/api/CacheResolver {
	public fun <init> (Lcom/apollographql/cache/normalized/api/CacheResolver;)V
	public synthetic fun <init> (Lcom/apollographql/cache/normalized/api/CacheResolver;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lcom/apollographql/cache/normalized/api/MaxAgeProvider;Lcom/apollographql/cache/normalized/api/CacheResolver;)V
	public synthetic fun <init> (Lcom/apollographql/cache/normalized/api/MaxAgeProvider;Lcom/apollographql/cache/normalized/api/CacheResolver;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun resolveField (Lcom/apollographql/cache/normalized/api/ResolverContext;)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/api/CacheHeaders {
	public static final field Companion Lcom/apollographql/cache/normalized/api/CacheHeaders$Companion;
	public static final field NONE Lcom/apollographql/cache/normalized/api/CacheHeaders;
	public static final fun builder ()Lcom/apollographql/cache/normalized/api/CacheHeaders$Builder;
	public final fun hasHeader (Ljava/lang/String;)Z
	public final fun headerValue (Ljava/lang/String;)Ljava/lang/String;
	public final fun newBuilder ()Lcom/apollographql/cache/normalized/api/CacheHeaders$Builder;
	public final fun plus (Lcom/apollographql/cache/normalized/api/CacheHeaders;)Lcom/apollographql/cache/normalized/api/CacheHeaders;
}

public final class com/apollographql/cache/normalized/api/CacheHeaders$Builder {
	public fun <init> ()V
	public final fun addHeader (Ljava/lang/String;Ljava/lang/String;)Lcom/apollographql/cache/normalized/api/CacheHeaders$Builder;
	public final fun addHeaders (Ljava/util/Map;)Lcom/apollographql/cache/normalized/api/CacheHeaders$Builder;
	public final fun build ()Lcom/apollographql/cache/normalized/api/CacheHeaders;
}

public final class com/apollographql/cache/normalized/api/CacheHeaders$Companion {
	public final fun builder ()Lcom/apollographql/cache/normalized/api/CacheHeaders$Builder;
}

public final class com/apollographql/cache/normalized/api/CacheKey {
	public static final field Companion Lcom/apollographql/cache/normalized/api/CacheKey$Companion;
	public static final synthetic fun box-impl (Ljava/lang/String;)Lcom/apollographql/cache/normalized/api/CacheKey;
	public static fun constructor-impl (Ljava/lang/String;)Ljava/lang/String;
	public static fun constructor-impl (Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;
	public static fun constructor-impl (Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;
	public static fun constructor-impl (Ljava/util/List;)Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/lang/String;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/lang/String;Ljava/lang/String;)Z
	public final fun getKey ()Ljava/lang/String;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/lang/String;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/lang/String;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/lang/String;
}

public final class com/apollographql/cache/normalized/api/CacheKey$Companion {
	public final fun getMUTATION_ROOT-mqw0cJ0 ()Ljava/lang/String;
	public final fun getQUERY_ROOT-mqw0cJ0 ()Ljava/lang/String;
	public final fun getSUBSCRIPTION_ROOT-mqw0cJ0 ()Ljava/lang/String;
}

public final class com/apollographql/cache/normalized/api/CacheKey$Scope : java/lang/Enum {
	public static final field SERVICE Lcom/apollographql/cache/normalized/api/CacheKey$Scope;
	public static final field TYPE Lcom/apollographql/cache/normalized/api/CacheKey$Scope;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lcom/apollographql/cache/normalized/api/CacheKey$Scope;
	public static fun values ()[Lcom/apollographql/cache/normalized/api/CacheKey$Scope;
}

public abstract interface class com/apollographql/cache/normalized/api/CacheKeyGenerator {
	public abstract fun cacheKeyForObject-z2_y8R0 (Ljava/util/Map;Lcom/apollographql/cache/normalized/api/CacheKeyGeneratorContext;)Ljava/lang/String;
}

public final class com/apollographql/cache/normalized/api/CacheKeyGeneratorContext {
	public fun <init> (Lcom/apollographql/apollo/api/CompiledField;Lcom/apollographql/apollo/api/Executable$Variables;)V
	public final fun getField ()Lcom/apollographql/apollo/api/CompiledField;
	public final fun getVariables ()Lcom/apollographql/apollo/api/Executable$Variables;
}

public final class com/apollographql/cache/normalized/api/CacheKeyGeneratorKt {
	public static final fun TypePolicyCacheKeyGenerator (Ljava/util/Map;Lcom/apollographql/cache/normalized/api/CacheKey$Scope;)Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;
	public static synthetic fun TypePolicyCacheKeyGenerator$default (Ljava/util/Map;Lcom/apollographql/cache/normalized/api/CacheKey$Scope;ILjava/lang/Object;)Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;
	public static final fun getTypePolicyCacheKeyGenerator ()Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;
}

public abstract class com/apollographql/cache/normalized/api/CacheKeyResolver : com/apollographql/cache/normalized/api/CacheResolver {
	public fun <init> ()V
	public abstract fun cacheKeyForField-fLoEQYY (Lcom/apollographql/cache/normalized/api/ResolverContext;)Ljava/lang/String;
	public fun listOfCacheKeysForField (Lcom/apollographql/cache/normalized/api/ResolverContext;)Ljava/util/List;
	public final fun resolveField (Lcom/apollographql/cache/normalized/api/ResolverContext;)Ljava/lang/Object;
}

public abstract interface class com/apollographql/cache/normalized/api/CacheResolver {
	public abstract fun resolveField (Lcom/apollographql/cache/normalized/api/ResolverContext;)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/api/CacheResolver$ResolvedValue {
	public fun <init> (Ljava/lang/Object;Lcom/apollographql/cache/normalized/api/CacheHeaders;)V
	public final fun getCacheHeaders ()Lcom/apollographql/cache/normalized/api/CacheHeaders;
	public final fun getValue ()Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/api/CacheResolverKt {
	public static final fun FieldPolicyCacheResolver (Lcom/apollographql/cache/normalized/api/CacheKey$Scope;)Lcom/apollographql/cache/normalized/api/CacheResolver;
	public static synthetic fun FieldPolicyCacheResolver$default (Lcom/apollographql/cache/normalized/api/CacheKey$Scope;ILjava/lang/Object;)Lcom/apollographql/cache/normalized/api/CacheResolver;
	public static final fun getFieldKey (Lcom/apollographql/cache/normalized/api/ResolverContext;)Ljava/lang/String;
	public static final fun getFieldPolicyCacheResolver ()Lcom/apollographql/cache/normalized/api/CacheResolver;
}

public final class com/apollographql/cache/normalized/api/ConnectionEmbeddedFieldsProvider : com/apollographql/cache/normalized/api/EmbeddedFieldsProvider {
	public static final field Companion Lcom/apollographql/cache/normalized/api/ConnectionEmbeddedFieldsProvider$Companion;
	public fun <init> (Ljava/util/Set;)V
	public fun isEmbedded (Lcom/apollographql/cache/normalized/api/EmbeddedFieldsContext;)Z
}

public final class com/apollographql/cache/normalized/api/ConnectionEmbeddedFieldsProvider$Companion {
}

public final class com/apollographql/cache/normalized/api/ConnectionFieldKeyGenerator : com/apollographql/cache/normalized/api/FieldKeyGenerator {
	public static final field Companion Lcom/apollographql/cache/normalized/api/ConnectionFieldKeyGenerator$Companion;
	public fun <init> (Ljava/util/Set;)V
	public fun getFieldKey (Lcom/apollographql/cache/normalized/api/FieldKeyContext;)Ljava/lang/String;
}

public final class com/apollographql/cache/normalized/api/ConnectionFieldKeyGenerator$Companion {
}

public final class com/apollographql/cache/normalized/api/ConnectionMetadataGenerator : com/apollographql/cache/normalized/api/MetadataGenerator {
	public fun <init> (Ljava/util/Set;)V
	public fun metadataForObject (Ljava/lang/Object;Lcom/apollographql/cache/normalized/api/MetadataGeneratorContext;)Ljava/util/Map;
}

public final class com/apollographql/cache/normalized/api/DataWithErrorsKt {
	public static final fun withErrors (Lcom/apollographql/apollo/api/Executable$Data;Lcom/apollographql/apollo/api/Executable;Ljava/util/List;Lcom/apollographql/apollo/api/CustomScalarAdapters;)Ljava/util/Map;
	public static synthetic fun withErrors$default (Lcom/apollographql/apollo/api/Executable$Data;Lcom/apollographql/apollo/api/Executable;Ljava/util/List;Lcom/apollographql/apollo/api/CustomScalarAdapters;ILjava/lang/Object;)Ljava/util/Map;
}

public final class com/apollographql/cache/normalized/api/DefaultCacheResolver : com/apollographql/cache/normalized/api/CacheResolver {
	public static final field INSTANCE Lcom/apollographql/cache/normalized/api/DefaultCacheResolver;
	public fun resolveField (Lcom/apollographql/cache/normalized/api/ResolverContext;)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/api/DefaultEmbeddedFieldsProvider : com/apollographql/cache/normalized/api/EmbeddedFieldsProvider {
	public fun <init> (Ljava/util/Map;)V
	public fun isEmbedded (Lcom/apollographql/cache/normalized/api/EmbeddedFieldsContext;)Z
}

public final class com/apollographql/cache/normalized/api/DefaultFieldKeyGenerator : com/apollographql/cache/normalized/api/FieldKeyGenerator {
	public static final field INSTANCE Lcom/apollographql/cache/normalized/api/DefaultFieldKeyGenerator;
	public fun getFieldKey (Lcom/apollographql/cache/normalized/api/FieldKeyContext;)Ljava/lang/String;
}

public final class com/apollographql/cache/normalized/api/DefaultRecordMerger : com/apollographql/cache/normalized/api/RecordMerger {
	public static final field INSTANCE Lcom/apollographql/cache/normalized/api/DefaultRecordMerger;
	public fun merge (Lcom/apollographql/cache/normalized/api/RecordMergerContext;)Lkotlin/Pair;
}

public final class com/apollographql/cache/normalized/api/EmbeddedFields {
	public fun <init> (Ljava/util/Set;)V
	public final fun getEmbeddedFields ()Ljava/util/Set;
}

public final class com/apollographql/cache/normalized/api/EmbeddedFieldsContext {
	public fun <init> (Lcom/apollographql/apollo/api/CompiledNamedType;Lcom/apollographql/apollo/api/CompiledField;)V
	public final fun getField ()Lcom/apollographql/apollo/api/CompiledField;
	public final fun getParentType ()Lcom/apollographql/apollo/api/CompiledNamedType;
}

public abstract interface class com/apollographql/cache/normalized/api/EmbeddedFieldsProvider {
	public abstract fun isEmbedded (Lcom/apollographql/cache/normalized/api/EmbeddedFieldsContext;)Z
}

public final class com/apollographql/cache/normalized/api/EmptyEmbeddedFieldsProvider : com/apollographql/cache/normalized/api/EmbeddedFieldsProvider {
	public static final field INSTANCE Lcom/apollographql/cache/normalized/api/EmptyEmbeddedFieldsProvider;
	public fun isEmbedded (Lcom/apollographql/cache/normalized/api/EmbeddedFieldsContext;)Z
}

public final class com/apollographql/cache/normalized/api/EmptyMetadataGenerator : com/apollographql/cache/normalized/api/MetadataGenerator {
	public static final field INSTANCE Lcom/apollographql/cache/normalized/api/EmptyMetadataGenerator;
	public fun metadataForObject (Ljava/lang/Object;Lcom/apollographql/cache/normalized/api/MetadataGeneratorContext;)Ljava/util/Map;
}

public final class com/apollographql/cache/normalized/api/FieldKeyContext {
	public fun <init> (Ljava/lang/String;Lcom/apollographql/apollo/api/CompiledField;Lcom/apollographql/apollo/api/Executable$Variables;)V
	public final fun getField ()Lcom/apollographql/apollo/api/CompiledField;
	public final fun getParentType ()Ljava/lang/String;
	public final fun getVariables ()Lcom/apollographql/apollo/api/Executable$Variables;
}

public abstract interface class com/apollographql/cache/normalized/api/FieldKeyGenerator {
	public abstract fun getFieldKey (Lcom/apollographql/cache/normalized/api/FieldKeyContext;)Ljava/lang/String;
}

public final class com/apollographql/cache/normalized/api/FieldRecordMerger : com/apollographql/cache/normalized/api/RecordMerger {
	public fun <init> (Lcom/apollographql/cache/normalized/api/FieldRecordMerger$FieldMerger;)V
	public fun merge (Lcom/apollographql/cache/normalized/api/RecordMergerContext;)Lkotlin/Pair;
}

public final class com/apollographql/cache/normalized/api/FieldRecordMerger$FieldInfo {
	public fun <init> (Ljava/lang/Object;Ljava/util/Map;)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun component2 ()Ljava/util/Map;
	public final fun copy (Ljava/lang/Object;Ljava/util/Map;)Lcom/apollographql/cache/normalized/api/FieldRecordMerger$FieldInfo;
	public static synthetic fun copy$default (Lcom/apollographql/cache/normalized/api/FieldRecordMerger$FieldInfo;Ljava/lang/Object;Ljava/util/Map;ILjava/lang/Object;)Lcom/apollographql/cache/normalized/api/FieldRecordMerger$FieldInfo;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMetadata ()Ljava/util/Map;
	public final fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class com/apollographql/cache/normalized/api/FieldRecordMerger$FieldMerger {
	public abstract fun mergeFields (Lcom/apollographql/cache/normalized/api/FieldRecordMerger$FieldInfo;Lcom/apollographql/cache/normalized/api/FieldRecordMerger$FieldInfo;)Lcom/apollographql/cache/normalized/api/FieldRecordMerger$FieldInfo;
}

public final class com/apollographql/cache/normalized/api/GlobalMaxAgeProvider : com/apollographql/cache/normalized/api/MaxAgeProvider {
	public synthetic fun <init> (JLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getMaxAge-5sfh64U (Lcom/apollographql/cache/normalized/api/MaxAgeContext;)J
}

public final class com/apollographql/cache/normalized/api/IdCacheKeyGenerator : com/apollographql/cache/normalized/api/CacheKeyGenerator {
	public fun <init> ()V
	public fun <init> ([Ljava/lang/String;Lcom/apollographql/cache/normalized/api/CacheKey$Scope;)V
	public synthetic fun <init> ([Ljava/lang/String;Lcom/apollographql/cache/normalized/api/CacheKey$Scope;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun cacheKeyForObject-z2_y8R0 (Ljava/util/Map;Lcom/apollographql/cache/normalized/api/CacheKeyGeneratorContext;)Ljava/lang/String;
}

public final class com/apollographql/cache/normalized/api/IdCacheKeyResolver : com/apollographql/cache/normalized/api/CacheKeyResolver {
	public fun <init> ()V
	public fun <init> (Ljava/util/List;Ljava/util/List;Lcom/apollographql/cache/normalized/api/CacheKey$Scope;)V
	public synthetic fun <init> (Ljava/util/List;Ljava/util/List;Lcom/apollographql/cache/normalized/api/CacheKey$Scope;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun cacheKeyForField-fLoEQYY (Lcom/apollographql/cache/normalized/api/ResolverContext;)Ljava/lang/String;
	public fun listOfCacheKeysForField (Lcom/apollographql/cache/normalized/api/ResolverContext;)Ljava/util/List;
}

public abstract interface class com/apollographql/cache/normalized/api/MaxAge {
}

public final class com/apollographql/cache/normalized/api/MaxAge$Duration : com/apollographql/cache/normalized/api/MaxAge {
	public synthetic fun <init> (JLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getDuration-UwyO8pc ()J
}

public final class com/apollographql/cache/normalized/api/MaxAge$Inherit : com/apollographql/cache/normalized/api/MaxAge {
	public static final field INSTANCE Lcom/apollographql/cache/normalized/api/MaxAge$Inherit;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/apollographql/cache/normalized/api/MaxAgeContext {
	public fun <init> (Ljava/util/List;)V
	public final fun getFieldPath ()Ljava/util/List;
}

public final class com/apollographql/cache/normalized/api/MaxAgeContext$Field {
	public fun <init> (Ljava/lang/String;Lcom/apollographql/cache/normalized/api/MaxAgeContext$Type;)V
	public final fun getName ()Ljava/lang/String;
	public final fun getType ()Lcom/apollographql/cache/normalized/api/MaxAgeContext$Type;
}

public final class com/apollographql/cache/normalized/api/MaxAgeContext$Type {
	public fun <init> (Ljava/lang/String;ZLjava/util/List;)V
	public final fun getImplements ()Ljava/util/List;
	public final fun getName ()Ljava/lang/String;
	public final fun isComposite ()Z
}

public abstract interface class com/apollographql/cache/normalized/api/MaxAgeProvider {
	public abstract fun getMaxAge-5sfh64U (Lcom/apollographql/cache/normalized/api/MaxAgeContext;)J
}

public final class com/apollographql/cache/normalized/api/MaxAgeProviderKt {
	public static final fun getDefaultMaxAgeProvider ()Lcom/apollographql/cache/normalized/api/MaxAgeProvider;
}

public abstract interface class com/apollographql/cache/normalized/api/MetadataGenerator {
	public abstract fun metadataForObject (Ljava/lang/Object;Lcom/apollographql/cache/normalized/api/MetadataGeneratorContext;)Ljava/util/Map;
}

public final class com/apollographql/cache/normalized/api/MetadataGeneratorContext {
	public fun <init> (Lcom/apollographql/apollo/api/CompiledField;Lcom/apollographql/apollo/api/Executable$Variables;)V
	public final fun allArgumentValues ()Ljava/util/Map;
	public final fun argumentValue (Ljava/lang/String;)Ljava/lang/Object;
	public final fun getField ()Lcom/apollographql/apollo/api/CompiledField;
	public final fun getVariables ()Lcom/apollographql/apollo/api/Executable$Variables;
}

public abstract interface class com/apollographql/cache/normalized/api/NormalizedCache : com/apollographql/cache/normalized/api/ReadOnlyNormalizedCache {
	public static final field Companion Lcom/apollographql/cache/normalized/api/NormalizedCache$Companion;
	public abstract fun clearAll (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun merge (Lcom/apollographql/cache/normalized/api/Record;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lcom/apollographql/cache/normalized/api/RecordMerger;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun merge (Ljava/util/Collection;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lcom/apollographql/cache/normalized/api/RecordMerger;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun prettifyDump (Ljava/util/Map;Z)Ljava/lang/String;
	public abstract fun remove (Ljava/util/Collection;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun remove-7OwBRqc (Ljava/lang/String;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun trim (JFLkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/api/NormalizedCache$Companion {
	public final fun prettifyDump (Ljava/util/Map;Z)Ljava/lang/String;
	public static synthetic fun prettifyDump$default (Lcom/apollographql/cache/normalized/api/NormalizedCache$Companion;Ljava/util/Map;ZILjava/lang/Object;)Ljava/lang/String;
}

public final class com/apollographql/cache/normalized/api/NormalizedCache$DefaultImpls {
	public static fun trim (Lcom/apollographql/cache/normalized/api/NormalizedCache;JFLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun trim$default (Lcom/apollographql/cache/normalized/api/NormalizedCache;JFLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public abstract class com/apollographql/cache/normalized/api/NormalizedCacheFactory {
	public fun <init> ()V
	public abstract fun create ()Lcom/apollographql/cache/normalized/api/NormalizedCache;
}

public abstract interface class com/apollographql/cache/normalized/api/ReadOnlyNormalizedCache {
	public abstract fun dump (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun loadRecord-7OwBRqc (Ljava/lang/String;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun loadRecords (Ljava/util/Collection;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/api/Record : java/util/Map, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lcom/apollographql/cache/normalized/api/Record$Companion;
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/Map;Ljava/util/UUID;Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/Map;Ljava/util/UUID;Ljava/util/Map;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun clear ()V
	public synthetic fun compute (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun compute (Ljava/lang/String;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public synthetic fun computeIfAbsent (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
	public fun computeIfAbsent (Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object;
	public synthetic fun computeIfPresent (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun computeIfPresent (Ljava/lang/String;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public final fun containsKey (Ljava/lang/Object;)Z
	public fun containsKey (Ljava/lang/String;)Z
	public fun containsValue (Ljava/lang/Object;)Z
	public final fun entrySet ()Ljava/util/Set;
	public final fun fieldKeys ()Ljava/util/Set;
	public final fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public fun get (Ljava/lang/String;)Ljava/lang/Object;
	public fun getEntries ()Ljava/util/Set;
	public final fun getFields ()Ljava/util/Map;
	public final fun getKey-mqw0cJ0 ()Ljava/lang/String;
	public fun getKeys ()Ljava/util/Set;
	public final fun getMetadata ()Ljava/util/Map;
	public final fun getMutationId ()Ljava/util/UUID;
	public fun getSize ()I
	public final fun getSizeInBytes ()I
	public fun getValues ()Ljava/util/Collection;
	public fun isEmpty ()Z
	public final fun keySet ()Ljava/util/Set;
	public synthetic fun merge (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun merge (Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public final fun mergeWith (Lcom/apollographql/cache/normalized/api/Record;)Lkotlin/Pair;
	public synthetic fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun put (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun putAll (Ljava/util/Map;)V
	public synthetic fun putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun putIfAbsent (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun referencedFields ()Ljava/util/List;
	public fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;Ljava/lang/Object;)Z
	public synthetic fun replace (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public synthetic fun replace (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun replace (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun replace (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun replaceAll (Ljava/util/function/BiFunction;)V
	public final fun size ()I
	public final fun values ()Ljava/util/Collection;
}

public final class com/apollographql/cache/normalized/api/Record$Companion {
}

public final class com/apollographql/cache/normalized/api/RecordKt {
	public static final fun dependentKeys (Ljava/util/Collection;)Ljava/util/Set;
	public static final fun expirationDate (Lcom/apollographql/cache/normalized/api/Record;Ljava/lang/String;)Ljava/lang/Long;
	public static final fun receivedDate (Lcom/apollographql/cache/normalized/api/Record;Ljava/lang/String;)Ljava/lang/Long;
	public static final fun withDates (Lcom/apollographql/cache/normalized/api/Record;Ljava/lang/String;Ljava/lang/String;)Lcom/apollographql/cache/normalized/api/Record;
}

public abstract interface class com/apollographql/cache/normalized/api/RecordMerger {
	public abstract fun merge (Lcom/apollographql/cache/normalized/api/RecordMergerContext;)Lkotlin/Pair;
}

public final class com/apollographql/cache/normalized/api/RecordMergerContext {
	public fun <init> (Lcom/apollographql/cache/normalized/api/Record;Lcom/apollographql/cache/normalized/api/Record;Lcom/apollographql/cache/normalized/api/CacheHeaders;)V
	public final fun getCacheHeaders ()Lcom/apollographql/cache/normalized/api/CacheHeaders;
	public final fun getExisting ()Lcom/apollographql/cache/normalized/api/Record;
	public final fun getIncoming ()Lcom/apollographql/cache/normalized/api/Record;
}

public final class com/apollographql/cache/normalized/api/RecordMergerKt {
	public static final fun getConnectionRecordMerger ()Lcom/apollographql/cache/normalized/api/FieldRecordMerger;
}

public final class com/apollographql/cache/normalized/api/ResolverContext {
	public synthetic fun <init> (Lcom/apollographql/apollo/api/CompiledField;Lcom/apollographql/apollo/api/Executable$Variables;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getCacheHeaders ()Lcom/apollographql/cache/normalized/api/CacheHeaders;
	public final fun getField ()Lcom/apollographql/apollo/api/CompiledField;
	public final fun getFieldKeyGenerator ()Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;
	public final fun getParent ()Ljava/util/Map;
	public final fun getParentKey-mqw0cJ0 ()Ljava/lang/String;
	public final fun getParentType ()Ljava/lang/String;
	public final fun getPath ()Ljava/util/List;
	public final fun getVariables ()Lcom/apollographql/apollo/api/Executable$Variables;
}

public final class com/apollographql/cache/normalized/api/SchemaCoordinatesMaxAgeProvider : com/apollographql/cache/normalized/api/MaxAgeProvider {
	public synthetic fun <init> (Ljava/util/Map;JLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getMaxAge-5sfh64U (Lcom/apollographql/cache/normalized/api/MaxAgeContext;)J
}

public final class com/apollographql/cache/normalized/api/TypePolicy {
	public fun <init> (Ljava/util/Set;)V
	public final fun getKeyFields ()Ljava/util/Set;
}

public final class com/apollographql/cache/normalized/internal/NormalizerKt {
	public static final fun normalized-7h_XKoo (Lcom/apollographql/apollo/api/Executable$Data;Lcom/apollographql/apollo/api/Executable;Ljava/lang/String;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;Lcom/apollographql/cache/normalized/api/EmbeddedFieldsProvider;Lcom/apollographql/cache/normalized/api/MaxAgeProvider;)Ljava/util/Map;
	public static final fun normalized-7h_XKoo (Ljava/util/Map;Lcom/apollographql/apollo/api/Executable;Ljava/lang/String;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;Lcom/apollographql/cache/normalized/api/EmbeddedFieldsProvider;Lcom/apollographql/cache/normalized/api/MaxAgeProvider;)Ljava/util/Map;
	public static synthetic fun normalized-7h_XKoo$default (Lcom/apollographql/apollo/api/Executable$Data;Lcom/apollographql/apollo/api/Executable;Ljava/lang/String;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;Lcom/apollographql/cache/normalized/api/EmbeddedFieldsProvider;Lcom/apollographql/cache/normalized/api/MaxAgeProvider;ILjava/lang/Object;)Ljava/util/Map;
	public static synthetic fun normalized-7h_XKoo$default (Ljava/util/Map;Lcom/apollographql/apollo/api/Executable;Ljava/lang/String;Lcom/apollographql/apollo/api/CustomScalarAdapters;Lcom/apollographql/cache/normalized/api/CacheKeyGenerator;Lcom/apollographql/cache/normalized/api/MetadataGenerator;Lcom/apollographql/cache/normalized/api/FieldKeyGenerator;Lcom/apollographql/cache/normalized/api/EmbeddedFieldsProvider;Lcom/apollographql/cache/normalized/api/MaxAgeProvider;ILjava/lang/Object;)Ljava/util/Map;
}

public final class com/apollographql/cache/normalized/memory/MemoryCache : com/apollographql/cache/normalized/api/NormalizedCache {
	public fun <init> ()V
	public fun <init> (Lcom/apollographql/cache/normalized/api/NormalizedCache;IJ)V
	public synthetic fun <init> (Lcom/apollographql/cache/normalized/api/NormalizedCache;IJILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun clearAll (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun dump (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun loadRecord-7OwBRqc (Ljava/lang/String;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun loadRecords (Ljava/util/Collection;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun merge (Lcom/apollographql/cache/normalized/api/Record;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lcom/apollographql/cache/normalized/api/RecordMerger;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun merge (Ljava/util/Collection;Lcom/apollographql/cache/normalized/api/CacheHeaders;Lcom/apollographql/cache/normalized/api/RecordMerger;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun remove (Ljava/util/Collection;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun remove-7OwBRqc (Ljava/lang/String;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun trim (JFLkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/memory/MemoryCacheFactory : com/apollographql/cache/normalized/api/NormalizedCacheFactory {
	public fun <init> ()V
	public fun <init> (I)V
	public fun <init> (IJ)V
	public synthetic fun <init> (IJILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun chain (Lcom/apollographql/cache/normalized/api/NormalizedCacheFactory;)Lcom/apollographql/cache/normalized/memory/MemoryCacheFactory;
	public synthetic fun create ()Lcom/apollographql/cache/normalized/api/NormalizedCache;
	public fun create ()Lcom/apollographql/cache/normalized/memory/MemoryCache;
}

public final class com/apollographql/cache/normalized/options/ServerErrorsAsCacheMissesKt {
	public static final fun serverErrorsAsCacheMisses (Lcom/apollographql/apollo/api/MutableExecutionOptions;Z)Ljava/lang/Object;
}

public final class com/apollographql/cache/normalized/options/ThrowOnCacheMissKt {
	public static final fun throwOnCacheMiss (Lcom/apollographql/apollo/api/MutableExecutionOptions;Z)Ljava/lang/Object;
}

